(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{118:function(e,t,a){"use strict";var s=a(1),i=a.n(s),r=a(9),n=a(64),o=a(32);const c={container:e=>({...e,flex:1,width:"95%",position:"absolute",top:"60px",left:"1px",right:"20px"})},l={padding:"5px",background:"rgb(187, 186, 186)",color:"#555"},d=e=>i.a.createElement("div",{style:l},i.a.createElement("p",{style:{textAlign:"center"}},"Attack Vectors"),i.a.createElement(r.p.Control,e));t.a=class extends s.Component{constructor(){super(...arguments),this.attacklist=function(){var e=[];return o.forEach(t=>e.push({label:t.avName,value:t.avId})),e}(),this.handleChange=(e=>{this.props.selectedAttack(e?e.value:"")})}render(){return i.a.createElement(n.a,{isClearable:!0,isDisabled:this.props.disable,options:this.attacklist,styles:c,onChange:this.handleChange,components:{Control:d},defaultValue:this.attacklist.filter(e=>e.value===this.props.fromUrl)})}}},119:function(e,t,a){"use strict";var s=a(1),i=a.n(s),r=a(9),n=a(64),o=a(30);const c={container:e=>({...e,flex:1,width:"95%",position:"absolute",top:"150px",left:"1px",right:"20px"})},l={padding:"5px",background:"#d9f2e6",color:"#555"},d=e=>i.a.createElement("div",{style:l},i.a.createElement("p",{style:{textAlign:"center"}},"Safeguards"),i.a.createElement(r.p.Control,e));t.a=class extends s.Component{constructor(){super(...arguments),this.sglist=function(){var e=[];return o.forEach(t=>e.push({label:t.sgName,value:t.sgId})),e}(),this.handleChange=(e=>{this.props.selectedSafeguard(e?e.value:"")})}render(){return i.a.createElement(n.a,{isClearable:!0,isDisabled:this.props.disable,options:this.sglist,styles:c,onChange:this.handleChange,components:{Control:d}})}}},148:function(module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_taxonomy_css__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(231),_taxonomy_css__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_taxonomy_css__WEBPACK_IMPORTED_MODULE_1__),d3__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(35),_data_safeguards_json__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(30),_data_safeguards_json__WEBPACK_IMPORTED_MODULE_3___namespace=__webpack_require__.t(30,1),_modal_Modal__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(83),_attacksearchbar_AttackSearchbar__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(118),_safeguardsearchbar_SafeguardSearchbar__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(119),_legend_Legend__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(151),_data_attackvectors_json__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(32),_data_attackvectors_json__WEBPACK_IMPORTED_MODULE_8___namespace=__webpack_require__.t(32,1),_data_references_json__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(37),_data_references_json__WEBPACK_IMPORTED_MODULE_9___namespace=__webpack_require__.t(37,1),_mui_icons_material_Share__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(152),_mui_icons_material_Share__WEBPACK_IMPORTED_MODULE_10___default=__webpack_require__.n(_mui_icons_material_Share__WEBPACK_IMPORTED_MODULE_10__),react_router_dom__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(15),_mui_material_Button__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(274),_mui_material_Alert__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(272),_mui_material_Snackbar__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(273),_mui_material_Chip__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(89),html_react_parser__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(40),_mui_material_Tabs__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(271),_mui_material_Tab__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(167),_mui_material_Box__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(66),_mui_material_Typography__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(276);function useQuery(){const{search:e}=Object(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.e)();return react__WEBPACK_IMPORTED_MODULE_0___default.a.useMemo(()=>new URLSearchParams(e),[e])}var firstLoad=!0;function Taxonomy(_ref){let{data:data}=_ref;const wrapperRef=Object(react__WEBPACK_IMPORTED_MODULE_0__.useRef)(),[openSnackbar,setOpenSnackbar]=react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(!1);let query=useQuery();var avFromLink=query.get("av");const[value,setValue]=react__WEBPACK_IMPORTED_MODULE_0___default.a.useState(0),handleChange=(e,t)=>{setValue(t)},location=Object(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.e)();let currentUrlParams=new URLSearchParams(window.location.search),navigate=Object(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.f)();const[isOpen,setIsOpen]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[sgDesc,setSgDescr]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[sgReferences,setSgReferences]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[sgID,setSgID]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[sgName,setSgName]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[sgType,setSgType]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[stakeholdersRole,setStakeholdersRole]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[avText,setAVText]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)("Attack Vector"),[avLink,setAVLink]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(window.location.origin+window.location.pathname+"#"+location.pathname),[descText,setDescText]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)("Click on a node to show its info"),[,setRefText]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)("");var referencesList=[];const[examplesText,setExText]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[safeguardsText,setSgText]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[safeguardsInheritedText,setSgInheritedText]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),onPressHandler_av=e=>setAVText("["+e.avId+"] "+e.avName),onPressHandler_avLink=e=>setAVLink(window.location.origin+window.location.pathname+"#"+location.pathname+"?av="+e.avId),onPressHandler_description=e=>setDescText(Object(html_react_parser__WEBPACK_IMPORTED_MODULE_16__.a)(e.info[0].Description)),[selectedSafeguard,setSelectedSafeguard]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[selectedAttack,setSelectedAttack]=Object(react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),handleCloseSnackbar=(e,t)=>{setOpenSnackbar(!1)},onPressHandler_references=e=>{if(referencesList=[],e.info[0].Reference){for(var t=e.info[0].Reference,a=0;a<t.length;a++)referencesList.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li",{key:a},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a",{href:t[a].refLink,target:"_blank",rel:"noreferrer"},t[a].refTitle)));setRefText(referencesList)}else setRefText("")};function findParentScope(e){return e.data.avId.substr(0,4)!==e.parent.data.avId.substr(0,4)?e.parent:findParentScope(e.parent)}const onPressHandler_examples=e=>{var t=[],a=e.data.avId,s=[],i=[],r=_data_references_json__WEBPACK_IMPORTED_MODULE_9__.filter(e=>e.vectors&&e.vectors.some(e=>e.avId===a));if(0!==r.length){console.log(r),r.forEach(function(t,a){t.vectors.forEach(function(t){if(t.scopeAvId){var s=findParentScope(e);t.scopeAvId!==s.data.avId||i.includes(r[a])||i.push(r[a])}else i.includes(r[a])||i.push(r[a])})});for(var n=0;n<i.length;n++)i[n].tags.contents&&i[n].tags.contents.forEach(e=>{"attack"===e?s.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Chip__WEBPACK_IMPORTED_MODULE_15__.a,{label:e,size:"small",color:"error"})):"peer-reviewed"===e&&s.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Chip__WEBPACK_IMPORTED_MODULE_15__.a,{label:e,size:"small",color:"primary"}))}),t.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li",{key:n},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a",{href:i[n].link,target:"_blank",rel:"noreferrer"},i[n].title),"\xa0",s)),s=[];setExText(t)}else{setExText("")}},onPressHandler_safeguards=e=>{var t,a,s,i=[],r=[],n=[],o=[];setSgText(),e.forEach(e=>{if(!e.avId){for(setSgText(),t=e.match.info[0]["Mapped Safeguard"],a=0;a<t.length;a++)s=_data_safeguards_json__WEBPACK_IMPORTED_MODULE_3__.find(e=>e.sgId===t[a].sgId),i.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li",{key:a},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a",{href:()=>!1,className:"safeguardsLink",id:s.sgId,onClick:e=>buildSafeguardModal(e)},"[",s.sgId,"] ",s.sgName)," "));r.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{class:"featuredTitle"},"Mapped safeguards",react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{className:"featuredSub",id:"av-safeguards"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul",null,i))))}if(e.avId){for(setSgInheritedText(),t=e.match.info[0]["Mapped Safeguard"],a=0;a<t.length;a++)s=_data_safeguards_json__WEBPACK_IMPORTED_MODULE_3__.find(e=>e.sgId===t[a].sgId),n.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li",{key:a},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a",{href:()=>!1,className:"safeguardsLink",id:s.sgId,onClick:e=>buildSafeguardModal(e)},"[",s.sgId,"] ",s.sgName)," "));o.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{class:"featuredTitle"},"Safeguards inherited from [",e.avId,"] ",e.avName,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{className:"featuredSub",id:"av-safeguards"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul",null,n)))),n=[]}}),i.length>0&&setSgText(r),setSgInheritedText(o)};function buildSafeguardModal(e){var t=_data_safeguards_json__WEBPACK_IMPORTED_MODULE_3__.find(t=>t.sgId===e.target.id),a="",s=[],i=[],r=[],n=[];setSgDescr(t.info[0].Description),_data_references_json__WEBPACK_IMPORTED_MODULE_9__.filter(t=>t.safeguards&&t.safeguards.some(t=>t.sgId===e.target.id)).forEach(e=>{e.tags.contents&&e.tags.contents.some(e=>"attack"===e)?n.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Chip__WEBPACK_IMPORTED_MODULE_15__.a,{label:"attack",size:"small",color:"error"})):e.tags.contents&&e.tags.contents.some(e=>"peer-reviewed"===e)&&n.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Chip__WEBPACK_IMPORTED_MODULE_15__.a,{label:"peer-reviewed",size:"small",color:"primary"})),i.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a",{href:e.link,target:"_blank",rel:"noreferrer"},e.title),"\xa0",n)),n=[]}),setSgReferences(i),setIsOpen(!0),setSgID(t.sgId),setSgName(t.sgName),!0===t.info[0].Directive&&s.push("Directive"),!0===t.info[0].Preventive&&s.push("Preventive"),!0===t.info[0].Detective&&s.push("Detective"),!0===t.info[0].Corrective&&s.push("Corrective"),t.info[0]["Project Maintainer"]&&r.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li",null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("b",null,"Project Maintainer: "),t.info[0]["Project Maintainer"])),t.info[0].Administrator&&r.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li",null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("b",null,"Administrator: "),t.info[0].Administrator)),t.info[0]["Downstream User"]&&r.push(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("li",null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("b",null,"Consumer: "),t.info[0]["Downstream User"])),setStakeholdersRole(react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ul",null,r));for(var o=0;o<s.length&&(a+=s[o],o!==s.length-1);o++)a+=", ";setSgType(a)}function TabPanel(e){const{children:t,value:a,index:s,...i}=e;return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",Object.assign({role:"tabpanel",hidden:a!==s,id:"simple-tabpanel-".concat(s),"aria-labelledby":"simple-tab-".concat(s)},i),a===s&&react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Box__WEBPACK_IMPORTED_MODULE_19__.a,{sx:{p:3}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Typography__WEBPACK_IMPORTED_MODULE_20__.a,null,t)))}function a11yProps(e){return{id:"simple-tab-".concat(e),"aria-controls":"simple-tabpanel-".concat(e)}}return Object(react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{""===selectedAttack?firstLoad?(firstLoad=!1,avFromLink&&_data_attackvectors_json__WEBPACK_IMPORTED_MODULE_8__.filter(e=>e.avId===avFromLink).length>0?setSelectedAttack(avFromLink):(setSelectedAttack(""),currentUrlParams.delete("av"),navigate("/attacktree"))):(setSelectedAttack(""),currentUrlParams.delete("av"),navigate("/attacktree")):selectedAttack!==avFromLink&&(setSelectedAttack(selectedAttack),currentUrlParams.set("av",selectedAttack),navigate("/attacktree?"+currentUrlParams.toString()));const wrapperWidth=wrapperRef.current.offsetWidth,wrapperHeight=wrapperRef.current.offsetWidth;var margin={top:20,right:0,bottom:.5*wrapperHeight,left:-300},width=wrapperWidth-margin.left-margin.right,height=wrapperHeight-margin.top-margin.bottom,centerWidth=width/5,centerHeigth=height/2,svg;selectedAttack||selectedSafeguard||null!=Object(d3__WEBPACK_IMPORTED_MODULE_2__.b)("#attacktreeSVG")._groups[0][0]?(svg=Object(d3__WEBPACK_IMPORTED_MODULE_2__.b)("#attacktreeSVG").selectAll("g > *").remove(),svg=Object(d3__WEBPACK_IMPORTED_MODULE_2__.b)("#attacktreeSVG").call(Object(d3__WEBPACK_IMPORTED_MODULE_2__.d)().on("zoom",function(e){svg.attr("transform",e.transform)})).on("dblclick.zoom",null).append("g").attr("transform","translate("+centerWidth+","+centerHeigth+")")):svg=Object(d3__WEBPACK_IMPORTED_MODULE_2__.b)("#treeContainer").append("svg").attr("id","attacktreeSVG").attr("width","100%").attr("height","76%").call(Object(d3__WEBPACK_IMPORTED_MODULE_2__.d)().on("zoom",function(e){svg.attr("transform",e.transform)})).on("dblclick.zoom",null).append("g").attr("transform","translate("+centerWidth+","+centerHeigth+")"),svg.append("defs").append("pattern").attr("id","Triangle").attr("patternUnits","userSpaceOnUse").attr("width",10).attr("height",10).append("path").attr("d","M5,0 10,10 0,10 Z").attr("fill","darkseagreen");var verticalStripe=svg.append("defs").append("pattern").attr("id","vertical-stripe").attr("patternUnits","userSpaceOnUse").attr("width",4).attr("height",4);verticalStripe.append("rect").attr("width",10).attr("height",10).attr("fill","white"),verticalStripe.append("rect").attr("x",0).attr("y",0).attr("width",2).attr("height",10).attr("fill","darkgoldenrod");var patternStripe=svg.append("defs").append("pattern").attr("id","pattern-stripe").attr("patternUnits","userSpaceOnUse").attr("patternTransform","rotate(45)").attr("width",4).attr("height",4);patternStripe.append("rect").attr("width",2).attr("height",4).attr("transform","translate(0,0)").attr("fill","lightcoral");var i=0,duration=750,root,treemap=Object(d3__WEBPACK_IMPORTED_MODULE_2__.c)().size([height,width]).nodeSize([30]).separation(function(e,t){return e.parent===root&&t.parent===root?4:1});function collapse(e){e.children&&(e._children=e.children,e._children.forEach(collapse),e.children=null)}function clearAll(e){e.class="",e.children?e.children.forEach(clearAll):e._children&&e._children.forEach(clearAll)}function expandAll(e){e._children?(e.children=e._children,e.children.forEach(expandAll),e._children=null):e.children&&e.children.forEach(expandAll)}function collapseAllNotFound(e){e.children&&("found"!==e.class?(e._children=e.children,e._children.forEach(collapseAllNotFound),e.children=null):e.children.forEach(collapseAllNotFound))}function collapseAllNotPatchedFound(e){e.children&&("true"!==e.toDisplay?(e._children=e.children,e._children.forEach(collapseAllNotPatchedFound),e.children=null):e.children.forEach(collapseAllNotPatchedFound))}function opacifiesChild(e){e.children&&e.children.forEach(function(e){""!==e.class&&(e.class="patchedChild")}),"patchedChild"===e.class&&e.children&&e.children.forEach(function(e){e.class="patchedChild"})}function update(e){var t=treemap(root),a=t.descendants(),s=t.descendants().slice(1);a.forEach(function(e){e.y=380*e.depth});var r=svg.selectAll("g.node").data(a,function(e){return e.id||(e.id=++i)}),n=r.enter().append("g").attr("class","node").attr("transform",function(t){return"translate("+e.y0+","+e.x0+")"}).on("click",function(e){e.target.__data__.children?(e.target.__data__._children=e.target.__data__.children,e.target.__data__.children=null):(e.target.__data__.children=e.target.__data__._children,e.target.__data__._children=null);"patchedChild"===e.target.__data__.class&&opacifiesChild(e.target.__data__);update(e.target.__data__);var t=_data_attackvectors_json__WEBPACK_IMPORTED_MODULE_8__.find(t=>t.avId===e.srcElement.__data__.data.avId);onPressHandler_av(t),onPressHandler_avLink(t),onPressHandler_description(t),onPressHandler_references(t),onPressHandler_examples(e.srcElement.__data__),currentUrlParams.set("av",e.srcElement.__data__.data.avId),navigate("/attacktree?"+currentUrlParams.toString());var a=[];t.info[0]["Mapped Safeguard"]&&a.push({match:t,avId:null,avName:null});var s=[],i=e.target.__data__.parent;for(;null!==i;){s.push(i);var r=_data_attackvectors_json__WEBPACK_IMPORTED_MODULE_8__.find(e=>e.avId===i.data.avId&&0!==e.info[0]["Mapped Safeguard"].length);r&&a.push({match:r,avId:i.data.avId,avName:i.data.avName}),i=i.parent}onPressHandler_safeguards(a)});n.append("circle").attr("class","node").attr("r",1e-6).style("stroke",function(e){return"AV-6"===e.data.avId.substr(0,4)?"firebrick":"AV-8"===e.data.avId.substr(0,4)?"gold":"AV-7"===e.data.avId.substr(0,4)?"darkgreen":void 0!==e.data.stroke_color?e.data.stroke_color:"steelblue"}).style("fill",function(e){return e._children?"lightsteelblue":"#fff"}),n.append("text").attr("dy",".35em").attr("x",function(e){return e.children||e._children?-13:13}).attr("text-anchor",function(e){return e.children||e._children?"end":"start"}).text(function(e){return e.data.avName});var o=n.merge(r);o.transition().duration(duration).attr("transform",function(e){return"translate("+e.y+","+e.x+")"}),o.select("circle.node").attr("r",10).style("fill",function(e){return"found"===e.class?"tomato":"patched"===e.class?"lightgreen":"AV-6"===e.data.avId.substr(0,4)?e._children?"lightcoral":"url(#pattern-stripe)":"AV-8"===e.data.avId.substr(0,4)?"url(#vertical-stripe)":"AV-7"===e.data.avId.substr(0,4)?"AV-703"===e.data.avId?"white":e._children?"darkseagreen":"url(#Triangle)":e._children?"lightsteelblue":"#fff"}).style("stroke-dasharray",function(e){return"AV-703"===e.data.avId?"5,3":null}).style("stroke",function(e){return"found"===e.class?"tomato":"patched"===e.class?"lightgreen":"AV-6"===e.data.avId.substr(0,4)?"firebrick":"AV-8"===e.data.avId.substr(0,4)?"gold":"AV-7"===e.data.avId.substr(0,4)?"AV-703"===e.data.avId?"steelblue":"darkgreen":"steelblue"}).attr("cursor","pointer");var c=r.exit().transition().duration(duration).attr("transform",function(t){return"translate("+e.y+","+e.x+")"}).remove();c.select("circle").attr("r",1e-6),c.select("text").style("fill-opacity",1e-6);var l=svg.selectAll("path.link").data(s,function(e){return e.id});function d(e,t){return"M ".concat(e.y," ").concat(e.x,"\n              C ").concat((e.y+t.y)/2," ").concat(e.x,",\n                ").concat((e.y+t.y)/2," ").concat(t.x,",\n                ").concat(t.y," ").concat(t.x)}l.enter().insert("path","g").attr("class","link").attr("d",function(t){var a={x:e.x0,y:e.y0};return d(a,a)}).merge(l).transition().duration(duration).attr("d",function(e){return d(e,e.parent)}).style("stroke",function(e){return"found"===e.class?"tomato":"patchedChild"===e.class?"lightgreen":void 0}),l.exit().transition().duration(duration).attr("d",function(t){var a={x:e.x,y:e.y};return d(a,a)}).remove(),a.forEach(function(e){e.x0=e.x,e.y0=e.y})}function highlightSelectedAttack(searchID){if(searchID){var searchField="d.data.avId",firstCall=!0,avSafeguardsCollector=[];function searchTree(d){let first_call=arguments.length>1&&void 0!==arguments[1]&&arguments[1];d.children?d.children.forEach(searchTree):d._children&&d._children.forEach(searchTree);var searchFieldValue=eval(searchField);if(searchFieldValue&&searchFieldValue.match(searchID)){d.search_target=!!first_call;var found=_data_attackvectors_json__WEBPACK_IMPORTED_MODULE_8__.find(e=>e.avId===d.data.avId);onPressHandler_av(found),onPressHandler_avLink(found),onPressHandler_description(found),onPressHandler_references(found),onPressHandler_examples(d),found.info[0]["Mapped Safeguard"]&&avSafeguardsCollector.push({match:found,avId:null,avName:null});var ancestors=[];d.class="found";for(var parent=d.parent;null!==parent;){ancestors.push(parent),parent.class="found";var match=_data_attackvectors_json__WEBPACK_IMPORTED_MODULE_8__.find(e=>e.avId===parent.data.avId&&0!==e.info[0]["Mapped Safeguard"].length);match&&(avSafeguardsCollector.includes({match:match,avId:parent.data.avId,avName:parent.data.avName})||avSafeguardsCollector.push({match:match,avId:parent.data.avId,avName:parent.data.avName})),parent=parent.parent}avSafeguardsCollector=avSafeguardsCollector.filter((e,t,a)=>t===a.findIndex(t=>t.avId===e.avId)),onPressHandler_safeguards(avSafeguardsCollector)}}clearAll(root),expandAll(root),update(root),searchTree(root,firstCall),root.children.forEach(collapseAllNotFound),update(root)}}function highlightSelectedSafeguard(searchID){if(searchID){var searchField="d.data.avId",firstCall=!0;function searchTreeSafeguard(d){let first_call=arguments.length>1&&void 0!==arguments[1]&&arguments[1];d.children?d.children.forEach(searchTreeSafeguard):d._children&&d._children.forEach(searchTreeSafeguard);var searchFieldValue=eval(searchField),foundAv=_data_attackvectors_json__WEBPACK_IMPORTED_MODULE_8__.filter(e=>e.avId===searchFieldValue&&e.info[0]["Mapped Safeguard"].some(e=>e.sgId===searchID));if(foundAv.length>0){var parentScope=null;if(foundAv[0].info[0]["Mapped Safeguard"][0].scopeAvId&&(parentScope=foundAv[0].info[0]["Mapped Safeguard"][0].scopeAvId),searchFieldValue){var ancestors=[],parent=d.parent;if(parentScope)for(;null!==parent;)ancestors.push(parent.data.avId),parent=parent.parent;if(first_call){if(parentScope&&ancestors.includes(parentScope))for(d.search_target=!0,d.class="patched",d.toDisplay="true",opacifiesChild(d),parent=d.parent;null!==parent;)ancestors.push(parent),parent.toDisplay="true",parent=parent.parent;else if(parentScope&&!ancestors.includes(parentScope))d.search_target=!1;else if(null===parentScope)for(d.search_target=!0,d.class="patched",d.toDisplay="true",opacifiesChild(d),parent=d.parent;null!==parent;)ancestors.push(parent),parent.toDisplay="true",parent=parent.parent}else d.search_target=!1}}}expandAll(root),update(root),searchTreeSafeguard(root,firstCall),root.children.forEach(collapseAllNotPatchedFound),update(root),update(root)}}root=Object(d3__WEBPACK_IMPORTED_MODULE_2__.a)(data,function(e){return e.children}),root.x0=height/2,root.y0=width/2,root=Object(d3__WEBPACK_IMPORTED_MODULE_2__.a)(data,function(e){return e.children}),root.children.forEach(collapse),update(root),highlightSelectedAttack(selectedAttack),highlightSelectedSafeguard(selectedSafeguard)},[data,selectedAttack,selectedSafeguard]),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"taxonomy",id:"taxonomyDiv"},isOpen&&react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_modal_Modal__WEBPACK_IMPORTED_MODULE_4__.a,{sgID:sgID,sgName:sgName,open:isOpen,setIsOpen:setIsOpen,sgDescription:sgDesc,sgReferences:sgReferences,sgType:sgType,stakeholdersRole:stakeholdersRole}),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Box__WEBPACK_IMPORTED_MODULE_19__.a,{sx:{position:"absolute",top:"60px",right:"20px",minWidth:340,maxWidth:"15%",minHeight:150,maxHeight:"10vh"}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Box__WEBPACK_IMPORTED_MODULE_19__.a,{sx:{}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Tabs__WEBPACK_IMPORTED_MODULE_17__.a,{value:value,onChange:handleChange,"aria-label":"basic tabs example"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Tab__WEBPACK_IMPORTED_MODULE_18__.a,Object.assign({label:"Searchbars"},a11yProps(0))),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Tab__WEBPACK_IMPORTED_MODULE_18__.a,Object.assign({label:"Legend"},a11yProps(1))))),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TabPanel,{value:value,index:0},0===selectedSafeguard.length?react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_attacksearchbar_AttackSearchbar__WEBPACK_IMPORTED_MODULE_5__.a,{selectedAttack:setSelectedAttack,disable:!1,fromUrl:avFromLink}):react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_attacksearchbar_AttackSearchbar__WEBPACK_IMPORTED_MODULE_5__.a,{selectedAttack:setSelectedAttack,disable:!0}),0===selectedAttack.length?react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_safeguardsearchbar_SafeguardSearchbar__WEBPACK_IMPORTED_MODULE_6__.a,{selectedSafeguard:setSelectedSafeguard,disable:!1}):react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_safeguardsearchbar_SafeguardSearchbar__WEBPACK_IMPORTED_MODULE_6__.a,{selectedSafeguard:setSelectedSafeguard,disable:!0})),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TabPanel,{value:value,index:1},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_legend_Legend__WEBPACK_IMPORTED_MODULE_7__.a,null))),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"taxonomyWrapper"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{id:"treeContainer",className:"custom-container",ref:wrapperRef})),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"featured",id:"featuredContainer"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"featuredItem"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Button__WEBPACK_IMPORTED_MODULE_12__.a,{style:{maxWidth:20,maxHeight:27,minWidth:20,minHeight:27,marginRight:"2%"},variant:"outlined",onClick:()=>{navigator.clipboard.writeText(avLink),setOpenSnackbar(!0)}},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_icons_material_Share__WEBPACK_IMPORTED_MODULE_10___default.a,null)),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{className:"featuredTitle",id:"av-name"},avText),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{className:"featuredSub",id:"av-info-sub"},descText),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{className:"featuredSub",id:"av-desc"})),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"featuredItem"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{className:"featuredTitle"},"References"),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span",{className:"featuredSub",id:"av-ref"},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("ol",null,examplesText))),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"featuredItem"},safeguardsText,safeguardsInheritedText),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Snackbar__WEBPACK_IMPORTED_MODULE_14__.a,{open:openSnackbar,autoHideDuration:2500,onClose:handleCloseSnackbar},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_mui_material_Alert__WEBPACK_IMPORTED_MODULE_13__.a,{severity:"success",sx:{width:"100%"}},"Link copied to the clipboard!"))))}__webpack_exports__.a=Taxonomy},151:function(e,t,a){"use strict";var s=a(1),i=a.n(s),r=a(66),n=a(165),o=a(278),c=a(280),l=a(59),d=a(277),m=a(279),p=a(166);const u={container:e=>({...e,flex:1,width:"95%",position:"absolute",top:"60px",left:"1px",right:"20px"})};function g(e,t,a,s){return{name:e,collapsed:t,expanded:a,meaning:s}}const h=[g("User Compromise",i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 20"},i.a.createElement("g",{fill:"lightcoral",stroke:"firebrick"},i.a.createElement("circle",{cx:"50",cy:"10",class:"node",r:"10"}))),i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 20"},i.a.createElement("g",{fill:'url("#pattern-stripe")',stroke:"firebrick"},i.a.createElement("circle",{cx:"50",cy:"10",class:"node",r:"10"}))),"Attack vectors related to the compromise of a user"),g("System Compromise",i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 20"},i.a.createElement("g",{fill:"darkseagreen",stroke:"darkgreen"},i.a.createElement("circle",{cx:"50",cy:"10",class:"node",r:"10"}))),i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 20"},i.a.createElement("g",{fill:'url("#Triangle")',stroke:"darkgreen"},i.a.createElement("circle",{cx:"50",cy:"10",class:"node",r:"10"}))),"Attack vectors related to the compromise of a system"),g("Social Engineering",i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 20"}),i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 20"},i.a.createElement("g",{fill:'url("#vertical-stripe")',stroke:"gold"},i.a.createElement("circle",{cx:"50",cy:"10",class:"node",r:"10"}))),"Attack vectors related to social-engineering attack on project maintainer or the change of ethos of the maintainer him/herself"),g("Social Engineering",i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 20"}),i.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 100 20"},i.a.createElement("g",{fill:"white",stroke:"steelblue","stroke-dasharray":"5px, 3px"},i.a.createElement("circle",{cx:"50",cy:"10",class:"node",r:"10"}))),"Recursion to the root node")];t.a=class extends s.Component{render(){return i.a.createElement(r.a,{sx:{width:"100%",maxHeight:"5%"},styles:u},i.a.createElement(n.a,{elevation:3},i.a.createElement(d.a,{component:n.a,style:{maxHeight:"30vh"}},i.a.createElement(o.a,{"aria-label":"simple table",stickyHeader:!0},i.a.createElement(m.a,null,i.a.createElement(p.a,null,i.a.createElement(l.a,{width:"15%",align:"center"},"Collapsed"),i.a.createElement(l.a,{width:"15%",align:"center"},"Expanded"),i.a.createElement(l.a,{width:"70%"},"Meaning"))),i.a.createElement(c.a,null,h.map(e=>i.a.createElement(p.a,{key:e.name},i.a.createElement(l.a,{align:"center"},e.collapsed),i.a.createElement(l.a,{align:"center"},e.expanded),i.a.createElement(l.a,{align:"left",style:{whiteSpace:"normal",wordWrap:"break-word"}},e.meaning))))))))}}},153:function(e){e.exports={avName:"Conduct Open-Source Supply Chain Attack",avId:"AV-000",children:[{avName:"Develop and Advertise Distinct Malicious Package from Scratch",avId:"AV-100"},{avName:"Create Name Confusion with Legitimate Package",avId:"AV-200",children:[{avName:"Combosquatting",avId:"AV-201"},{avName:"Altering Word Order",avId:"AV-202"},{avName:"Manipulating Word Separators",avId:"AV-203"},{avName:"Typosquatting",avId:"AV-204"},{avName:"Built-In Package",avId:"AV-205"},{avName:"Brandjacking",avId:"AV-206"},{avName:"Similarity Attack",avId:"AV-207"},{avName:"Omitting Scope or Namespace",avId:"AV-208"},{avName:"AI Package Hallucination",avId:"AV-209"}]},{avName:"Subvert Legitimate Package",avId:"AV-001",children:[{avName:"Inject into Sources of Legitimate Package",avId:"AV-300",children:[{avName:"Introduce Malicious Code through Hypocrite Merge Request",avId:"AV-301",children:[{avName:"Make Immature Vulnerability Exploitable",avId:"AV-304"},{avName:"Exploit Rendering Weakness",avId:"AV-305",children:[{avName:"Exploit Unicode Bidirectional Algorithm",avId:"AV-306"},{avName:"Use Homoglyphs",avId:"AV-307"},{avName:"Prevent Display of File Differences",avId:"AV-308"},{avName:"Hide in Generated/Compiled/Minified Code",avId:"AV-309"}]}]},{avName:"Contribute as Maintainer",avId:"AV-302",children:[{avName:"Bribe or Blackmail Legitimate User",avId:"AV-601"},{avName:"Take-over Legitimate Account",avId:"AV-602",children:[{avName:"Reuse of Compromised Credentials",avId:"AV-603"},{avName:"Bruteforce",avId:"AV-604"},{avName:"Reuse of Leaked API Tokens",avId:"AV-605"},{avName:"Social Engineering to Obtain Credentials",avId:"AV-606"},{avName:"Reuse of Existing Session",avId:"AV-607"},{avName:"Resurrect Expired Domain Associated With Legitimate Account",avId:"AV-608"}]},{avName:"Become a Maintainer",avId:"AV-800"},{avName:"Change Ethos",avId:"AV-801"},{avName:"Compromise Maintainer System",avId:"AV-700",children:[{avName:"Exploit Weak Configuration",avId:"AV-701"},{avName:"Exploit Vulnerabilities",avId:"AV-702"},{avName:"Infect through Malicious Component",avId:"AV-703"}]}]},{avName:"Tamper with Version Control System",avId:"AV-303",children:[{avName:"Compromise User (Project Maintainer/Administrator)",avId:"AV-600",children:[{avName:"Bribe or Blackmail Legitimate User",avId:"AV-601"},{avName:"Take-over Legitimate Account",avId:"AV-602",children:[{avName:"Reuse of Compromised Credentials",avId:"AV-603"},{avName:"Bruteforce",avId:"AV-604"},{avName:"Reuse of Leaked API Tokens",avId:"AV-605"},{avName:"Social Engineering to Obtain Credentials",avId:"AV-606"},{avName:"Reuse of Existing Session",avId:"AV-607"},{avName:"Resurrect Expired Domain Associated With Legitimate Account",avId:"AV-608"}]}]},{avName:"Compromise Version Control System",avId:"AV-700",children:[{avName:"Exploit Weak Configuration",avId:"AV-701"},{avName:"Exploit Vulnerabilities",avId:"AV-702"},{avName:"Infect through Malicious Component",avId:"AV-703"}]}]}]},{avName:"Inject During the Build of Legitimate Package",avId:"AV-400",children:[{avName:"Run Malicious Build",avId:"AV-401"},{avName:"Tamper Build Job as Maintainer",avId:"AV-402",children:[{avName:"Bribe or Blackmail Legitimate User",avId:"AV-601"},{avName:"Take-over Legitimate Account",avId:"AV-602",children:[{avName:"Reuse of Compromised Credentials",avId:"AV-603"},{avName:"Bruteforce",avId:"AV-604"},{avName:"Reuse of Leaked API Tokens",avId:"AV-605"},{avName:"Social Engineering to Obtain Credentials",avId:"AV-606"},{avName:"Reuse of Existing Session",avId:"AV-607"},{avName:"Resurrect Expired Domain Associated With Legitimate Account",avId:"AV-608"}]},{avName:"Become a Maintainer",avId:"AV-800"},{avName:"Change Ethos",avId:"AV-801"},{avName:"Compromise Maintainer System",avId:"AV-700",children:[{avName:"Exploit Weak Configuration",avId:"AV-701"},{avName:"Exploit Vulnerabilities",avId:"AV-702"},{avName:"Infect through Malicious Component",avId:"AV-703"}]}]},{avName:"Tamper with Exposed Build System",avId:"AV-403",children:[{avName:"Compromise User (Project Maintainer/Administrator)",avId:"AV-600",children:[{avName:"Bribe or Blackmail Legitimate User",avId:"AV-601"},{avName:"Take-over Legitimate Account",avId:"AV-602",children:[{avName:"Reuse of Compromised Credentials",avId:"AV-603"},{avName:"Bruteforce",avId:"AV-604"},{avName:"Reuse of Leaked API Tokens",avId:"AV-605"},{avName:"Social Engineering to Obtain Credentials",avId:"AV-606"},{avName:"Reuse of Existing Session",avId:"AV-607"},{avName:"Resurrect Expired Domain Associated With Legitimate Account",avId:"AV-608"}]}]},{avName:"Compromise Build System",avId:"AV-700",children:[{avName:"Exploit Weak Configuration",avId:"AV-701"},{avName:"Exploit Vulnerabilities",avId:"AV-702"},{avName:"Infect through Malicious Component",avId:"AV-703"}]}]}]},{avName:"Distribute Malicious Version of Legitimate Package",avId:"AV-500",children:[{avName:"Dangling Reference",avId:"AV-501"},{avName:"Mask Legitimate Package",avId:"AV-502",children:[{avName:"MITM Attack",avId:"AV-506"},{avName:"DNS Cache Poisoning",avId:"AV-507"},{avName:"Tamper Legitimate URL",avId:"AV-508"},{avName:"Abuse Dependency Resolution Mechanism",avId:"AV-509"}]},{avName:"Prevent Update to Non-Vulnerable Version",avId:"AV-503"},{avName:"Distribute as Package Maintainer",avId:"AV-504",children:[{avName:"Bribe or Blackmail Legitimate User",avId:"AV-601"},{avName:"Take-over Legitimate Account",avId:"AV-602",children:[{avName:"Reuse of Compromised Credentials",avId:"AV-603"},{avName:"Bruteforce",avId:"AV-604"},{avName:"Reuse of Leaked API Tokens",avId:"AV-605"},{avName:"Social Engineering to Obtain Credentials",avId:"AV-606"},{avName:"Reuse of Existing Session",avId:"AV-607"},{avName:"Resurrect Expired Domain Associated With Legitimate Account",avId:"AV-608"}]},{avName:"Become a Maintainer",avId:"AV-800"},{avName:"Change Ethos",avId:"AV-801"},{avName:"Compromise Maintainer System",avId:"AV-700",children:[{avName:"Exploit Weak Configuration",avId:"AV-701"},{avName:"Exploit Vulnerabilities",avId:"AV-702"},{avName:"Infect through Malicious Component",avId:"AV-703"}]}]},{avName:"Inject into Hosting System",avId:"AV-505",children:[{avName:"Compromise User (Project Maintainer/Administrator)",avId:"AV-600",children:[{avName:"Bribe or Blackmail Legitimate User",avId:"AV-601"},{avName:"Take-over Legitimate Account",avId:"AV-602",children:[{avName:"Reuse of Compromised Credentials",avId:"AV-603"},{avName:"Bruteforce",avId:"AV-604"},{avName:"Reuse of Leaked API Tokens",avId:"AV-605"},{avName:"Social Engineering to Obtain Credentials",avId:"AV-606"},{avName:"Reuse of Existing Session",avId:"AV-607"},{avName:"Resurrect Expired Domain Associated With Legitimate Account",avId:"AV-608"}]}]},{avName:"Compromise Hosting System",avId:"AV-700",children:[{avName:"Exploit Weak Configuration",avId:"AV-701"},{avName:"Exploit Vulnerabilities",avId:"AV-702"},{avName:"Infect through Malicious Component",avId:"AV-703"}]}]}]}]}]}},154:function(e,t,a){e.exports=a.p+"static/media/sparta-logo.262c8621.png"},155:function(e,t,a){e.exports=a.p+"static/media/KhulnaSoft_R_grad_scrn.9632492e.png"},156:function(e,t,a){e.exports=a.p+"static/media/assuremoss_logo.6676fd12.png"},160:function(e,t,a){e.exports=a.p+"static/media/OSS-SuppChainModel-FMC-modified.81b5c2c9.png"},161:function(e,t,a){e.exports=a.p+"static/media/AttackTreeExample-modified.96c42990.png"},218:function(e,t,a){e.exports=a(266)},223:function(e,t,a){},224:function(e,t,a){},228:function(e,t,a){},231:function(e,t,a){},232:function(e,t,a){},260:function(e,t,a){},261:function(e,t,a){},262:function(e,t,a){},263:function(e,t,a){},264:function(e,t,a){},265:function(e,t,a){},266:function(e,t,a){"use strict";a.r(t);var s=a(1),i=a.n(s),r=a(29),n=a.n(r),o=(a(223),a(224),a(139)),c=a(88),l=a(140),d=a(79),m=a.n(d),p=a(141),u=a.n(p),g=a(144),h=a.n(g);const f=[{title:"Home",path:"/",icon:i.a.createElement(c.a,null),cName:"sidebarListItem menu-item"}],y=[{title:"Attack Tree",path:"/attacktree",icon:i.a.createElement(o.a,null),cName:"sidebarListItem menu-item"},{title:"Attack Vectors",path:"/attackvectors",icon:i.a.createElement(c.c,null),cName:"sidebarListItem menu-item"}],v=[{title:"References",path:"/references",icon:i.a.createElement(l.a,null),cName:"sidebarListItem menu-item"},{title:"Safeguards",path:"/safeguards",icon:i.a.createElement(c.b,null),cName:"sidebarListItem menu-item"}],k=[{title:"OSS Supply Chain Model",path:"/documentation",hash:"#oss-supp-model",icon:i.a.createElement(u.a,null),cName:"sidebarListItem menu-item"},{title:"Attack Tree Fundamentals",path:"/documentation",hash:"#attacktree-fund",icon:i.a.createElement(h.a,null),cName:"sidebarListItem menu-item"},{title:"JSON Data Structure",path:"/documentation",hash:"#jsondata",icon:i.a.createElement(m.a,null),cName:"sidebarListItem menu-item"}];var b=a(25),S=a(314),A=a(315),E=a(316),I=a(317),w=a(312),_=a(145),N=a(146),C=a.n(N),x=a(147),M=a.n(x);var D=class extends s.Component{constructor(e){super(e),this.showSidebar=(()=>{this.setState({sidebarOpen:!this.state.sidebarOpen})}),this.scrollToDiv=(e=>{document.getElementById(e.split("#")[1]).scrollIntoView({behavior:"smooth"})}),this.state={sidebarOpen:e.open,listOpen:!0,anchorId:""},this.handleClickList=this.handleClickList.bind(this)}componentWillReceiveProps(e){this.setState({sidebarOpen:e.open})}handleClickList(){this.setState({listOpen:!this.state.listOpen})}render(){return i.a.createElement("div",{className:this.state.sidebarOpen?"sidebar active":"sidebar",id:"sidebar-wrapper"},i.a.createElement("div",{className:"sidebarWrapper"},i.a.createElement("div",{className:"sidebarMenu"},i.a.createElement(S.a,{sx:{width:"100%",bgcolor:"transparent"},component:"nav","aria-labelledby":"nested-list-subheader"},f.map((e,t)=>i.a.createElement(b.b,{style:{color:"inherit",textDecoration:"inherit"},to:e.path},i.a.createElement(A.a,null,i.a.createElement(E.a,null,e.icon),i.a.createElement(I.a,{primary:e.title})))),y.map((e,t)=>i.a.createElement(b.b,{style:{color:"inherit",textDecoration:"inherit"},to:e.path},i.a.createElement(A.a,null,i.a.createElement(E.a,null,e.icon),i.a.createElement(I.a,{primary:e.title})))),v.map((e,t)=>i.a.createElement(b.b,{style:{color:"inherit",textDecoration:"inherit"},to:e.path},i.a.createElement(A.a,null,i.a.createElement(E.a,null,e.icon),i.a.createElement(I.a,{primary:e.title})))),i.a.createElement(A.a,{onClick:this.handleClickList},i.a.createElement(E.a,null,i.a.createElement(_.a,null)),i.a.createElement(I.a,{primary:"Documentation"}),this.state.listOpen?i.a.createElement(C.a,null):i.a.createElement(M.a,null)),i.a.createElement(w.a,{in:this.state.listOpen,timeout:"auto",unmountOnExit:!0},i.a.createElement(S.a,{component:"div",disablePadding:!0},k.map((e,t)=>i.a.createElement(b.b,{style:{color:"inherit",textDecoration:"inherit"},to:{pathname:e.path,hash:e.hash,state:{fromDashboard:!0}},onClick:t=>{this.scrollToDiv(e.hash)}},i.a.createElement(A.a,{sx:{pl:4}},i.a.createElement(E.a,null,e.icon),i.a.createElement(I.a,{primary:e.title}))))))))))}},P=(a(228),a(122)),V=a(117),O=a(82),T=a.n(O);class R extends s.Component{constructor(e){super(e),this.state={sidebarOpen:e.sidebarState}}handleclick(){this.setState({sidebarOpen:!this.state.sidebarOpen}),this.props.handleClickTopbar()}render(){return i.a.createElement("div",{className:"topbar"},i.a.createElement("div",{className:"topbarWrapper"},i.a.createElement("div",{className:"topLeft"},i.a.createElement("span",{className:"logo"},this.state.sidebarOpen?i.a.createElement(P.a,{icon:V.b,onClick:()=>this.handleclick()}):i.a.createElement(P.a,{icon:V.a,onClick:()=>this.handleclick()}))),i.a.createElement("div",{className:"topRight"},i.a.createElement("div",{className:"topbarIcons"},i.a.createElement("div",{className:"topbarIconContainer"},i.a.createElement("span",{className:"logo"},i.a.createElement("a",{className:"logo",href:"https://github.com/KhulnaSoft/riex",target:"_blank",rel:"noreferrer"},i.a.createElement(T.a,{style:{fontSize:"30px",marginTop:"45%"}}))))))))}}var B=a(148),L=a(153);var G=class extends s.Component{constructor(e){super(e),this.state={sidebarOpen:!1},this.handleClick=this.handleClick.bind(this)}handleClick(){this.setState({sidebarOpen:!this.state.sidebarOpen}),this.state.sidebarOpen?(document.getElementById("taxonomyDiv").style.marginLeft="0px",document.getElementById("taxonomyDiv").style.width="100%",document.getElementById("featuredContainer").style.width="100%"):(document.getElementById("taxonomyDiv").style.marginLeft="300px",document.getElementById("taxonomyDiv").style.width="80%",document.getElementById("featuredContainer").style.width="88%")}render(){return i.a.createElement("div",{className:"home"},i.a.createElement(R,{handleClickTopbar:this.handleClick,sidebarState:this.state.sidebarOpen}),i.a.createElement("div",{className:"container"},i.a.createElement(D,{open:this.state.sidebarOpen}),i.a.createElement(B.a,{data:L})))}},j=(a(260),a(66)),W=a(310),U=a(307),q=a(165),z=a(157),H=a.n(z),K=a(158),F=a.n(K),J=a(121),Q=a.n(J),Y=a(159),X=a.n(Y),Z=a(274),$=a(120),ee=a.n($),te=a(154),ae=a.n(te),se=a(155),ie=a.n(se),re=a(156),ne=a.n(re);function oe(){return(oe=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(e[s]=a[s])}return e}).apply(this,arguments)}const ce=e=>{let{svgRef:t,...a}=e;return i.a.createElement("svg",oe({width:"100%",height:"100%",id:"attackGraphSVG",title:"attackgraph",ref:t},a),i.a.createElement("g",{transform:"translate(1280,663.5)"},i.a.createElement("g",{transform:"translate(-973.0129737295306,-303.3611079958978)scale(0.8304700240908941)",style:{font:"8px sans-serif"}},i.a.createElement("path",{className:"link",d:"M0,0C150,0 150,-316.875 300,-316.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M0,0C175,0 175,-226.875 350,-226.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M0,0C175,0 175,316.875 350,316.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,961.875C1575,961.875 1575,931.875 1750,931.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,961.875C1575,961.875 1575,961.875 1750,961.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,961.875C1575,961.875 1575,991.875 1750,991.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,901.875C1925,901.875 1925,841.875 2100,841.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,901.875C1925,901.875 1925,871.875 2100,871.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,901.875C1925,901.875 1925,901.875 2100,901.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,901.875C1925,901.875 1925,931.875 2100,931.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,901.875C1925,901.875 1925,961.875 2100,961.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,886.875C1575,886.875 1575,871.875 1750,871.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,886.875C1575,886.875 1575,901.875 1750,901.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,924.375C1225,924.375 1225,886.875 1400,886.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,924.375C1225,924.375 1225,961.875 1400,961.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,811.875C1575,811.875 1575,781.875 1750,781.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,811.875C1575,811.875 1575,811.875 1750,811.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,811.875C1575,811.875 1575,841.875 1750,841.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,691.875C1575,691.875 1575,631.875 1750,631.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,691.875C1575,691.875 1575,661.875 1750,661.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,691.875C1575,691.875 1575,691.875 1750,691.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,691.875C1575,691.875 1575,721.875 1750,721.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,691.875C1575,691.875 1575,751.875 1750,751.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,736.875C1225,736.875 1225,661.875 1400,661.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,736.875C1225,736.875 1225,691.875 1400,691.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,736.875C1225,736.875 1225,751.875 1400,751.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,736.875C1225,736.875 1225,811.875 1400,811.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,586.875C1225,586.875 1225,541.875 1400,541.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,586.875C1225,586.875 1225,571.875 1400,571.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,586.875C1225,586.875 1225,601.875 1400,601.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,586.875C1225,586.875 1225,631.875 1400,631.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,740.625C875,740.625 875,556.875 1050,556.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,740.625C875,740.625 875,586.875 1050,586.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,740.625C875,740.625 875,661.875 1050,661.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,740.625C875,740.625 875,736.875 1050,736.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,740.625C875,740.625 875,924.375 1050,924.375",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,511.875C1575,511.875 1575,481.875 1750,481.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,511.875C1575,511.875 1575,511.875 1750,511.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,511.875C1575,511.875 1575,541.875 1750,541.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,451.875C1925,451.875 1925,391.875 2100,391.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,451.875C1925,451.875 1925,421.875 2100,421.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,451.875C1925,451.875 1925,451.875 2100,451.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,451.875C1925,451.875 1925,481.875 2100,481.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,451.875C1925,451.875 1925,511.875 2100,511.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,436.875C1575,436.875 1575,421.875 1750,421.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,436.875C1575,436.875 1575,451.875 1750,451.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,474.375C1225,474.375 1225,436.875 1400,436.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,474.375C1225,474.375 1225,511.875 1400,511.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,361.875C1575,361.875 1575,331.875 1750,331.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,361.875C1575,361.875 1575,361.875 1750,361.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,361.875C1575,361.875 1575,391.875 1750,391.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,241.875C1575,241.875 1575,181.875 1750,181.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,241.875C1575,241.875 1575,211.875 1750,211.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,241.875C1575,241.875 1575,241.875 1750,241.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,241.875C1575,241.875 1575,271.875 1750,271.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,241.875C1575,241.875 1575,301.875 1750,301.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,286.875C1225,286.875 1225,211.875 1400,211.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,286.875C1225,286.875 1225,241.875 1400,241.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,286.875C1225,286.875 1225,301.875 1400,301.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,286.875C1225,286.875 1225,361.875 1400,361.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,365.625C875,365.625 875,256.875 1050,256.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,365.625C875,365.625 875,286.875 1050,286.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,365.625C875,365.625 875,474.375 1050,474.375",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,121.875C1575,121.875 1575,91.875 1750,91.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,121.875C1575,121.875 1575,121.875 1750,121.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,121.875C1575,121.875 1575,151.875 1750,151.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,61.875C1925,61.875 1925,1.875 2100,1.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,61.875C1925,61.875 1925,31.875 2100,31.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,61.875C1925,61.875 1925,61.875 2100,61.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,61.875C1925,61.875 1925,91.875 2100,91.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1750,61.875C1925,61.875 1925,121.875 2100,121.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,46.875C1575,46.875 1575,31.875 1750,31.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,46.875C1575,46.875 1575,61.875 1750,61.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,84.375C1225,84.375 1225,46.875 1400,46.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,84.375C1225,84.375 1225,121.875 1400,121.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-28.125C1575,-28.125 1575,-58.125 1750,-58.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-28.125C1575,-28.125 1575,-28.125 1750,-28.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-28.125C1575,-28.125 1575,1.875 1750,1.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-148.125C1575,-148.125 1575,-208.125 1750,-208.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-148.125C1575,-148.125 1575,-178.125 1750,-178.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-148.125C1575,-148.125 1575,-148.125 1750,-148.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-148.125C1575,-148.125 1575,-118.125 1750,-118.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-148.125C1575,-148.125 1575,-88.125 1750,-88.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,-103.125C1225,-103.125 1225,-178.125 1400,-178.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,-103.125C1225,-103.125 1225,-148.125 1400,-148.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,-103.125C1225,-103.125 1225,-88.125 1400,-88.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1050,-103.125C1225,-103.125 1225,-28.125 1400,-28.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-283.125C1575,-283.125 1575,-328.125 1750,-328.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-283.125C1575,-283.125 1575,-298.125 1750,-298.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-283.125C1575,-283.125 1575,-268.125 1750,-268.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1400,-283.125C1575,-283.125 1575,-238.125 1750,-238.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1200,-298.125C1300,-298.125 1300,-313.125 1400,-313.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M1200,-298.125C1300,-298.125 1300,-283.125 1400,-283.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,-106.875C950,-106.875 950,-298.125 1200,-298.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,-106.875C875,-106.875 875,-103.125 1050,-103.125",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M700,-106.875C875,-106.875 875,84.375 1050,84.375",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M350,316.875C525,316.875 525,-106.875 700,-106.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M350,316.875C525,316.875 525,365.625 700,365.625",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M350,316.875C525,316.875 525,740.625 700,740.625",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M350,-226.875C525,-226.875 525,-316.875 700,-316.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M350,-226.875C525,-226.875 525,-286.875 700,-286.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M350,-226.875C525,-226.875 525,-256.875 700,-256.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M350,-226.875C525,-226.875 525,-226.875 700,-226.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M350,-226.875C525,-226.875 525,-196.875 700,-196.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M350,-226.875C525,-226.875 525,-166.875 700,-166.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("path",{className:"link",d:"M350,-226.875C525,-226.875 525,-136.875 700,-136.875",style:{fill:"none",strokeWidth:2,stroke:"rgb(204, 204, 204)"}}),i.a.createElement("g",{className:"node",transform:"translate(350,316.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Subvert Legitimate Package")),i.a.createElement("g",{className:"node",transform:"translate(350,-226.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Create Name Confusion with Legitimate Package")),i.a.createElement("g",{className:"node",transform:"translate(300,-316.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Develop and Advertise Distinct Malicious Package from Scratch")),i.a.createElement("g",{className:"node",transform:"translate(0,0)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Conduct Open-Source Supply Chain Attack")),i.a.createElement("g",{className:"node",transform:"translate(1750,991.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"8px, 3px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Infect through Malicious Component")),i.a.createElement("g",{className:"node",transform:"translate(1750,961.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Vulnerabilities")),i.a.createElement("g",{className:"node",transform:"translate(1750,931.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Weak Configuration")),i.a.createElement("g",{className:"node",transform:"translate(1400,961.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Compromise Hosting System")),i.a.createElement("g",{className:"node",transform:"translate(2100,961.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Existing Session")),i.a.createElement("g",{className:"node",transform:"translate(2100,931.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Social Engineering to Obtain Credentials")),i.a.createElement("g",{className:"node",transform:"translate(2100,901.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Leaked API Tokens")),i.a.createElement("g",{className:"node",transform:"translate(2100,871.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bruteforce")),i.a.createElement("g",{className:"node",transform:"translate(2100,841.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Compromised Credentials")),i.a.createElement("g",{className:"node",transform:"translate(1750,901.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Take-over Legitimate Account")),i.a.createElement("g",{className:"node",transform:"translate(1750,871.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bribe or Blackmail Legitimate User")),i.a.createElement("g",{className:"node",transform:"translate(1400,886.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Compromise User (Project Maintainer/Administrator)")),i.a.createElement("g",{className:"node",transform:"translate(1050,924.375)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Inject into Hosting System")),i.a.createElement("g",{className:"node",transform:"translate(1750,841.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"8px, 3px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Infect through Malicious Component")),i.a.createElement("g",{className:"node",transform:"translate(1750,811.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Vulnerabilities")),i.a.createElement("g",{className:"node",transform:"translate(1750,781.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Weak Configuration")),i.a.createElement("g",{className:"node",transform:"translate(1400,811.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Compromise Maintainer System")),i.a.createElement("g",{className:"node",transform:"translate(1400,751.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(255, 215, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Become a Maintainer")),i.a.createElement("g",{className:"node",transform:"translate(1750,751.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Existing Session")),i.a.createElement("g",{className:"node",transform:"translate(1750,721.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Social Engineering to Obtain Credentials")),i.a.createElement("g",{className:"node",transform:"translate(1750,691.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Leaked API Tokens")),i.a.createElement("g",{className:"node",transform:"translate(1750,661.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bruteforce")),i.a.createElement("g",{className:"node",transform:"translate(1750,631.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Compromised Credentials")),i.a.createElement("g",{className:"node",transform:"translate(1400,691.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Take-over Legitimate Account")),i.a.createElement("g",{className:"node",transform:"translate(1400,661.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bribe or Blackmail Legitimate User")),i.a.createElement("g",{className:"node",transform:"translate(1050,736.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Distribute as Package Maintainer")),i.a.createElement("g",{className:"node",transform:"translate(1050,661.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Prevent Update to Non-Vulnerable Version")),i.a.createElement("g",{className:"node",transform:"translate(1400,631.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Abuse Dependency Resolution Mechanism")),i.a.createElement("g",{className:"node",transform:"translate(1400,601.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Tamper Legitimate URL")),i.a.createElement("g",{className:"node",transform:"translate(1400,571.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"DNS Cache Poisoning")),i.a.createElement("g",{className:"node",transform:"translate(1400,541.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"MITM Attack")),i.a.createElement("g",{className:"node",transform:"translate(1050,586.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Mask Legitimate Package")),i.a.createElement("g",{className:"node",transform:"translate(1050,556.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Dangling Reference")),i.a.createElement("g",{className:"node",transform:"translate(700,740.625)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Distribute Malicious Version of Legitimate Package")),i.a.createElement("g",{className:"node",transform:"translate(1750,541.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"8px, 3px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Infect through Malicious Component")),i.a.createElement("g",{className:"node",transform:"translate(1750,511.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Vulnerabilities")),i.a.createElement("g",{className:"node",transform:"translate(1750,481.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Weak Configuration")),i.a.createElement("g",{className:"node",transform:"translate(1400,511.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Compromise Build System")),i.a.createElement("g",{className:"node",transform:"translate(2100,511.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Existing Session")),i.a.createElement("g",{className:"node",transform:"translate(2100,481.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Social Engineering to Obtain Credentials")),i.a.createElement("g",{className:"node",transform:"translate(2100,451.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Leaked API Tokens")),i.a.createElement("g",{className:"node",transform:"translate(2100,421.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bruteforce")),i.a.createElement("g",{className:"node",transform:"translate(2100,391.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Compromised Credentials")),i.a.createElement("g",{className:"node",transform:"translate(1750,451.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Take-over Legitimate Account")),i.a.createElement("g",{className:"node",transform:"translate(1750,421.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bribe or Blackmail Legitimate User")),i.a.createElement("g",{className:"node",transform:"translate(1400,436.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Compromise User (Project Maintainer/Administrator)")),i.a.createElement("g",{className:"node",transform:"translate(1050,474.375)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Tamper with Exposed Build System")),i.a.createElement("g",{className:"node",transform:"translate(1750,391.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"8px, 3px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Infect through Malicious Component")),i.a.createElement("g",{className:"node",transform:"translate(1750,361.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Vulnerabilities")),i.a.createElement("g",{className:"node",transform:"translate(1750,331.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Weak Configuration")),i.a.createElement("g",{className:"node",transform:"translate(1400,361.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Compromise Maintainer System")),i.a.createElement("g",{className:"node",transform:"translate(1400,301.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(255, 215, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Become a Maintainer")),i.a.createElement("g",{className:"node",transform:"translate(1750,301.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Existing Session")),i.a.createElement("g",{className:"node",transform:"translate(1750,271.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Social Engineering to Obtain Credentials")),i.a.createElement("g",{className:"node",transform:"translate(1750,241.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Leaked API Tokens")),i.a.createElement("g",{className:"node",transform:"translate(1750,211.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bruteforce")),i.a.createElement("g",{className:"node",transform:"translate(1750,181.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Compromised Credentials")),i.a.createElement("g",{className:"node",transform:"translate(1400,241.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Take-over Legitimate Account")),i.a.createElement("g",{className:"node",transform:"translate(1400,211.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bribe or Blackmail Legitimate User")),i.a.createElement("g",{className:"node",transform:"translate(1050,286.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Tamper Build Job as Maintainer")),i.a.createElement("g",{className:"node",transform:"translate(1050,256.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Run Malicious Build")),i.a.createElement("g",{className:"node",transform:"translate(700,365.625)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Inject During the Build of Legitimate Package")),i.a.createElement("g",{className:"node",transform:"translate(1750,151.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"8px, 3px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Infect through Malicious Component")),i.a.createElement("g",{className:"node",transform:"translate(1750,121.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Vulnerabilities")),i.a.createElement("g",{className:"node",transform:"translate(1750,91.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Weak Configuration")),i.a.createElement("g",{className:"node",transform:"translate(1400,121.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Compromise Version Control System")),i.a.createElement("g",{className:"node",transform:"translate(2100,121.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Existing Session")),i.a.createElement("g",{className:"node",transform:"translate(2100,91.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Social Engineering to Obtain Credentials")),i.a.createElement("g",{className:"node",transform:"translate(2100,61.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Leaked API Tokens")),i.a.createElement("g",{className:"node",transform:"translate(2100,31.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bruteforce")),i.a.createElement("g",{className:"node",transform:"translate(2100,1.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Compromised Credentials")),i.a.createElement("g",{className:"node",transform:"translate(1750,61.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Take-over Legitimate Account")),i.a.createElement("g",{className:"node",transform:"translate(1750,31.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bribe or Blackmail Legitimate User")),i.a.createElement("g",{className:"node",transform:"translate(1400,46.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Compromise User (Project Maintainer/Administrator)")),i.a.createElement("g",{className:"node",transform:"translate(1050,84.375)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Tamper with Version Control System")),i.a.createElement("g",{className:"node",transform:"translate(1750,1.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"8px, 3px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Infect through Malicious Component")),i.a.createElement("g",{className:"node",transform:"translate(1750,-28.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Vulnerabilities")),i.a.createElement("g",{className:"node",transform:"translate(1750,-58.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Weak Configuration")),i.a.createElement("g",{className:"node",transform:"translate(1400,-28.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(0, 100, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Compromise Maintainer System")),i.a.createElement("g",{className:"node",transform:"translate(1400,-88.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(255, 215, 0)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Become a Maintainer")),i.a.createElement("g",{className:"node",transform:"translate(1750,-88.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Existing Session")),i.a.createElement("g",{className:"node",transform:"translate(1750,-118.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Social Engineering to Obtain Credentials")),i.a.createElement("g",{className:"node",transform:"translate(1750,-148.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Leaked API Tokens")),i.a.createElement("g",{className:"node",transform:"translate(1750,-178.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bruteforce")),i.a.createElement("g",{className:"node",transform:"translate(1750,-208.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Reuse of Compromised Credentials")),i.a.createElement("g",{className:"node",transform:"translate(1400,-148.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Take-over Legitimate Account")),i.a.createElement("g",{className:"node",transform:"translate(1400,-178.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(178, 34, 34)",fill:"url(&quot",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Bribe or Blackmail Legitimate User")),i.a.createElement("g",{className:"node",transform:"translate(1050,-103.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Contribute as Maintainer")),i.a.createElement("g",{className:"node",transform:"translate(1750,-238.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Hide in Generated/Compiled/Minified Code")),i.a.createElement("g",{className:"node",transform:"translate(1750,-268.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Prevent Display of File Differences")),i.a.createElement("g",{className:"node",transform:"translate(1750,-298.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Use Homoglyphs")),i.a.createElement("g",{className:"node",transform:"translate(1750,-328.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Exploit Unicode Bidirectional Algorithm")),i.a.createElement("g",{className:"node",transform:"translate(1400,-283.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Exploit Rendering Weakness")),i.a.createElement("g",{className:"node",transform:"translate(1400,-313.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Make Immature Vulnerability Exploitable")),i.a.createElement("g",{className:"node",transform:"translate(1200,-298.125)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Introduce Malicious Code through Hypocrite Merge Request")),i.a.createElement("g",{className:"node",transform:"translate(700,-106.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:-13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"end"},"Inject into Sources of Legitimate Package")),i.a.createElement("g",{className:"node",transform:"translate(700,-136.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Similarity Attack")),i.a.createElement("g",{className:"node",transform:"translate(700,-166.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Brandjacking")),i.a.createElement("g",{className:"node",transform:"translate(700,-196.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Built-In Package")),i.a.createElement("g",{className:"node",transform:"translate(700,-226.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Typosquatting")),i.a.createElement("g",{className:"node",transform:"translate(700,-256.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Manipulating Word Separators")),i.a.createElement("g",{className:"node",transform:"translate(700,-286.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Altering Word Order")),i.a.createElement("g",{className:"node",transform:"translate(700,-316.875)"},i.a.createElement("circle",{r:10,style:{stroke:"rgb(70, 130, 180)",fill:"rgb(255, 255, 255)",strokeDasharray:"0px, 0px"}}),i.a.createElement("text",{x:13,dy:".35em",style:{fontSize:12,fillOpacity:1},textAnchor:"start"},"Combosquatting")))))},le=i.a.forwardRef((e,t)=>i.a.createElement(ce,oe({svgRef:t},e)));a.p;var de=a(7);const me={backgroundImage:"linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(9, 121, 104, 1) 79%, rgba(88, 156, 228, 1) 100%)",opacity:"87%",width:"100vw",minHeight:"100vh",marginLeft:"0px"},pe={backgroundColor:"white",opacity:"90%",width:"100vw",minHeight:"87vh",marginLeft:"0px",display:"flex",position:"relative"},ue={backgroundImage:"linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(9, 121, 104, 1) 79%, rgba(88, 156, 228, 1) 100%)",width:"100vw",minHeight:"10vh",marginBottom:"0px",marginLeft:"0px",marginTop:"10px"},ge=Object(de.a)(q.a)(e=>{let{theme:t}=e;return{backgroundColor:"rgba(0, 0, 0, 0)",textAlign:"center",height:60,lineHeight:"60px"}});var he=class extends s.Component{constructor(e){super(e),this.state={sidebarOpen:!1},this.handleClick=this.handleClick.bind(this)}handleClick(){this.setState({sidebarOpen:!this.state.sidebarOpen}),this.state.sidebarOpen?document.getElementById("homeWrapperDiv").style.marginLeft="0px":document.getElementById("homeWrapperDiv").style.marginLeft="310px"}render(){return i.a.createElement("div",{className:"home"},i.a.createElement(R,{handleClickTopbar:this.handleClick,sidebarState:this.state.sidebarOpen}),i.a.createElement("div",{className:"container"},i.a.createElement(D,{open:this.state.sidebarOpen}),i.a.createElement("div",{className:"tableWrapper",id:"homeWrapperDiv"},i.a.createElement(j.a,{sx:me},i.a.createElement(W.a,{container:!0,spacing:2},i.a.createElement(W.a,{item:!0,xs:2}),i.a.createElement(W.a,{item:!0,xs:5},i.a.createElement(U.a,{in:!0,style:{transformOrigin:"0 0 0"},timeout:2e3},i.a.createElement("h1",{style:{color:"white",fontSize:"8vh",fontWeight:"normal",marginTop:"50px",padding:"2% 0%"}},i.a.createElement("p",{style:{color:"white",fontSize:"86px",fontWeight:"light",marginTop:"50px",whiteSpace:"nowrap",display:"inline"}},"Risk Explorer"))),i.a.createElement(U.a,{in:!0,style:{transformOrigin:"0 0 0"},timeout:2e3},i.a.createElement("p",{style:{color:"white",fontSize:"48px",fontWeight:"light"}},"for Software Supply Chains")),i.a.createElement(U.a,{in:!0,style:{transformOrigin:"0 0 0"},timeout:2500},i.a.createElement("p",{style:{fontSize:"16px",fontWeight:"lighter",textAlign:"left",color:"white",padding:"10% 10%"}},i.a.createElement("br",null),i.a.createElement("br",null),"This page presents a taxonomy of known attacks and techniques to inject malicious code into open-source software projects.",i.a.createElement("br",null),"A so-called attack tree is used to organize those techniques hierarchically, starting from the abstract, top-level goal down to alternative and more concrete attack techniques.",i.a.createElement("br",null),"This information has been compiled on the basis of numerous real-world incidents, i.e. actual attacks and vulnerabilities, as well as plausible proof-of-concepts and scientific literature.",i.a.createElement("br",null),"The page also documents safeguards to fully or partially mitigate the different attack techniques, thereby referencing existing standards and frameworks.",i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement(j.a,{sx:{p:2,display:"grid",gridTemplateColumns:{md:"1fr 1fr"},gap:2}},i.a.createElement(ge,{key:1,elevation:0},i.a.createElement(b.b,{style:{color:"white",textDecoration:"inherit"},to:"/attacktree"},i.a.createElement(Z.a,{variant:"outlined",startIcon:i.a.createElement(ee.a,null),size:"medium",color:"info",style:{width:"300px"}},"Explore the Attack Tree"))),i.a.createElement(ge,{key:2,elevation:0},i.a.createElement("a",{style:{color:"white",textDecoration:"inherit"},href:"https://www.computer.org/csdl/proceedings-article/sp/2023/933600a167/1He7XSTyRKE",target:"_blank",rel:"noreferrer"},i.a.createElement(Z.a,{variant:"outlined",startIcon:i.a.createElement(Q.a,null),size:"medium",color:"info",style:{width:"300px"}},"Read the Taxonomy Paper"))))))),i.a.createElement(W.a,{item:!0,xs:4},i.a.createElement(U.a,{in:!0,style:{transformOrigin:"0 100 20"},timeout:3e3},i.a.createElement(le,{style:{position:"absolute",width:"50%",right:"0"}}))))),i.a.createElement(j.a,{sx:pe},i.a.createElement(W.a,{container:!0,spacing:2,sx:{marginTop:"20px",marginBottom:"30px"}},i.a.createElement(W.a,{item:!0,xs:12},i.a.createElement(W.a,{container:!0,justifyContent:"center",spacing:8},i.a.createElement(W.a,{key:3,item:!0},i.a.createElement(q.a,{elevation:5,sx:{height:600,width:500,marginTop:"10%",textAlign:"center"}},i.a.createElement(H.a,{sx:{fontSize:"60px",color:"rgba(2, 0, 36, 1)",marginTop:"10%"}}),i.a.createElement("h1",{style:{color:"#555",fontWeight:"normal",fontSize:"48px",padding:"0%",marginTop:"5%"}},"Why"),i.a.createElement("p",{style:{fontSize:"16px",fontWeight:"lighter",color:"#555",padding:"5%"}},"We found that existing works on open-source supply chain security lack a comprehensive, comprehensible, and general description of how attackers inject malicious code into open-source projects, linked to real-world incidents and independent of specific programming languages, ecosystems, technologies and stakeholders.",i.a.createElement("br",null),i.a.createElement("br",null),"We believe a taxonomy classifying such attacks is of value for both academia and industry. Serving as a common reference and clarifying terminology, it could support several activities, e.g. awareness-raising, safeguard development, pentest scoping or threat modeling."))),i.a.createElement(W.a,{key:4,item:!0},i.a.createElement(q.a,{elevation:5,sx:{height:600,width:500,marginTop:"10%",textAlign:"center"}},i.a.createElement(F.a,{sx:{fontSize:"60px",marginTop:"10%",color:"rgba(9, 121, 104, 1)"}}),i.a.createElement("h1",{style:{color:"#555",fontWeight:"normal",fontSize:"48px",marginTop:"5%"}},"How to Use"),i.a.createElement("p",{style:{fontSize:"16px",fontWeight:"lighter",color:"#555",padding:"5%"}},"Explore the taxonomy with help of the visualization tool:",i.a.createElement("br",null),"Single-click on a node to expand or collapse it, and to show associated information like its description, references, associated examples and related countermeasures.",i.a.createElement(j.a,{sx:{"& button":{m:1}},style:{marginTop:"5%"}},i.a.createElement("div",null,i.a.createElement(W.a,{container:!0,spacing:2},i.a.createElement(W.a,{item:!0,xs:6},i.a.createElement(b.b,{style:{color:"white",textDecoration:"inherit"},to:"/attacktree"},i.a.createElement(Z.a,{variant:"outlined",style:{width:"200px"},size:"large"},i.a.createElement(ee.a,null))),i.a.createElement("p",null,"Explore the Attack Tree")),i.a.createElement(W.a,{item:!0,xs:6},i.a.createElement(b.b,{style:{color:"white",textDecoration:"inherit"},to:"/documentation#oss-supp-model"},i.a.createElement(Z.a,{variant:"outlined",style:{width:"200px"},size:"large"},i.a.createElement(X.a,null))),i.a.createElement("p",null," Read about the open-source supply chain model (stakeholders, systems and interactions)")))))))),i.a.createElement(W.a,{key:5,item:!0},i.a.createElement(q.a,{elevation:5,sx:{height:600,width:500,marginTop:"10%",textAlign:"center"}},i.a.createElement(m.a,{sx:{fontSize:"48px",marginTop:"10%",color:"rgba(88, 156, 228, 1)"}}),i.a.createElement("h1",{style:{color:"#555",textAlign:"center",fontWeight:"normal",fontSize:"48px",marginTop:"5%"}},"Contribute"),i.a.createElement("p",{style:{fontSize:"1 vw",textAlign:"center",fontWeight:"lighter",color:"#555",padding:"5%"}},"The data model underlying the visualization comprises attack vectors, safeguards and references, all associated to one another.",i.a.createElement(j.a,{sx:{"& button":{m:1}},style:{marginTop:"70px"}},i.a.createElement("div",null,i.a.createElement(W.a,{container:!0,spacing:2},i.a.createElement(W.a,{item:!0,xs:6},i.a.createElement(b.b,{style:{color:"white",textDecoration:"inherit"},to:"/documentation#jsondata"},i.a.createElement(Z.a,{variant:"outlined",style:{width:"200px"},size:"large"},i.a.createElement(Q.a,null))),i.a.createElement("p",null,"Read about the JSON files and their structure")),i.a.createElement(W.a,{item:!0,xs:6},i.a.createElement("a",{style:{color:"white",textDecoration:"inherit"},href:"https://github.com/KhulnaSoft/riex",target:"_blank",rel:"noreferrer"},i.a.createElement(Z.a,{variant:"outlined",style:{width:"200px"},size:"large"},i.a.createElement(T.a,null))),i.a.createElement("p",null," Create pull requests to add real-life examples or other improvements")))))))))))),i.a.createElement(j.a,{sx:ue},i.a.createElement(W.a,{container:!0,spacing:2},i.a.createElement(W.a,{item:!0,xs:8},i.a.createElement("a",{className:"logo",href:"https://www.khulnasoft.com/",target:"_blank",rel:"noreferrer"},i.a.createElement("img",{style:{width:"80px",left:"0",marginLeft:"1%",marginTop:".3%"},src:ie.a,alt:"KhulnaSoft Logo"}))),i.a.createElement(W.a,{item:!0,xs:2},i.a.createElement("a",{className:"logo",href:"https://www.sparta.eu/",target:"_blank",rel:"noreferrer"},i.a.createElement("img",{style:{width:"80px",marginLeft:"130%",marginTop:".3%"},src:ae.a,alt:"SPARTA Logo"}))),i.a.createElement(W.a,{item:!0,xs:2},i.a.createElement("a",{className:"logo",href:"https://assuremoss.eu/",target:"_blank",rel:"noreferrer"},i.a.createElement("img",{style:{width:"100px",marginLeft:"60%",marginTop:".2%"},src:ne.a,alt:"AssureMOSS Logo"}))),i.a.createElement(W.a,{item:!0,xs:9},i.a.createElement("p",{style:{color:"white",fontSize:"12px",fontWeight:"light",marginLeft:"1%",marginBottom:".4%"}}," Copyright (c) 2022 KhulnaSoft SE or an KhulnaSoft affiliate company and Risk Explorer for Software Supply Chains contributors")),i.a.createElement(W.a,{item:!0,xs:3},i.a.createElement("p",{style:{color:"white",fontSize:"12px",fontWeight:"light",textAlign:"right",marginRight:"4%",marginBottom:".4%"}}," This project is partially funded by the EU Horizon 2020 projects SPARTA (Grant Agreement No. 830892) and AssureMOSS (Grant Agreement No. 952647)")))))))}},fe=(a(261),a(15)),ye=(a(262),a(313)),ve=a(278),ke=a(280),be=a(59),Se=a(277),Ae=a(279),Ee=a(166),Ie=a(276),we=a(86),_e=a.n(we),Ne=a(85),Ce=a.n(Ne),xe=a(32),Me=a(37),De=a(30),Pe=a(83),Ve=a(40),Oe=a(89);function Te(e){const{row:t}=e,[a,r]=i.a.useState(!1),[n,o]=Object(s.useState)(!1),[c,l]=Object(s.useState)(""),[d,m]=Object(s.useState)(""),[p,u]=Object(s.useState)(""),[g,h]=Object(s.useState)(""),[f,y]=Object(s.useState)("");return i.a.createElement(i.a.Fragment,null,n&&i.a.createElement(Pe.a,{sgID:d,sgName:p,open:n,setIsOpen:o,sgDescription:c,sgType:g,stakeholdersRole:f}),i.a.createElement(i.a.Fragment,null,i.a.createElement(Ee.a,{sx:{"& > *":{borderBottom:"unset"}}},i.a.createElement(be.a,null,i.a.createElement(ye.a,{"aria-label":"expand row",size:"small",onClick:()=>r(!a)},a?i.a.createElement(Ce.a,null):i.a.createElement(_e.a,null))),i.a.createElement(be.a,{component:"th",scope:"row"},t.avId),i.a.createElement(be.a,{align:"left"},t.avName)),i.a.createElement(Ee.a,null,i.a.createElement(be.a,{style:{paddingBottom:0,paddingTop:0},colSpan:6},i.a.createElement(w.a,{in:a,timeout:"auto",unmountOnExit:!0},i.a.createElement(j.a,{sx:{margin:1}},i.a.createElement(Ie.a,{variant:"h6",gutterBottom:!0,component:"div"},"Description"),i.a.createElement(ve.a,{size:"small","aria-label":"purchases"},i.a.createElement(ke.a,null,t.info.map(e=>i.a.createElement(Ee.a,{key:e.Description},i.a.createElement(be.a,{component:"th",scope:"row"},Object(Ve.a)(e.Description)))))))))),i.a.createElement(Ee.a,null,i.a.createElement(be.a,{style:{paddingBottom:0,paddingTop:0},colSpan:6},i.a.createElement(w.a,{in:a,timeout:"auto",unmountOnExit:!0},i.a.createElement(j.a,{sx:{margin:1}},i.a.createElement(Ie.a,{variant:"h6",gutterBottom:!0,component:"div"},"References"),i.a.createElement(ve.a,{size:"small","aria-label":"purchases"},i.a.createElement(ke.a,null,function(e){for(var t=[],a=[],s=Me.filter(t=>t.vectors&&t.vectors.some(t=>t.avId===e.avId)),r=0;r<s.length;r++)s[r].tags.contents&&s[r].tags.contents.forEach(e=>{"attack"===e?t.push(i.a.createElement(Oe.a,{label:e,size:"small",color:"error"})):"peer-reviewed"===e&&t.push(i.a.createElement(Oe.a,{label:e,size:"small",color:"primary"}))}),a.push(i.a.createElement(Ee.a,{key:s[r].title},i.a.createElement(be.a,{component:"th",scope:"row"},i.a.createElement("a",{href:s[r].link,target:"_blank",rel:"noreferrer"},s[r].title),"\xa0",t))),t=[];return a}(t))))))),i.a.createElement(Ee.a,null,i.a.createElement(be.a,{style:{paddingBottom:0,paddingTop:0},colSpan:6},i.a.createElement(w.a,{in:a,timeout:"auto",unmountOnExit:!0},i.a.createElement(j.a,{sx:{margin:1}},i.a.createElement(Ie.a,{variant:"h6",gutterBottom:!0,component:"div"},"Mapped Safeguards"),i.a.createElement(ve.a,{size:"small","aria-label":"purchases"},i.a.createElement(ke.a,null,t.info[0]["Mapped Safeguard"].map(e=>i.a.createElement(Ee.a,{key:e.sgId},i.a.createElement(be.a,{component:"th",scope:"row"},i.a.createElement("a",{href:()=>!1,style:{cursor:"pointer"},onClick:t=>(function(e){var t=De.find(t=>t.sgId===e),a="",s=[],r=[];l(t.info[0].Description),o(!0),m(t.sgId),u(t.sgName),!0===t.info[0].Directive&&s.push("Directive"),!0===t.info[0].Preventive&&s.push("Preventive"),!0===t.info[0].Detective&&s.push("Detective"),!0===t.info[0].Corrective&&s.push("Corrective"),t.info[0]["Project Maintainer"]&&r.push(i.a.createElement("li",null,i.a.createElement("b",null,"Project Maintainer: "),t.info[0]["Project Maintainer"])),t.info[0].Administrator&&r.push(i.a.createElement("li",null,i.a.createElement("b",null,"Administrator: "),t.info[0].Administrator)),t.info[0]["Downstream User"]&&r.push(i.a.createElement("li",null,i.a.createElement("b",null,"Consumer: "),t.info[0]["Downstream User"])),y(i.a.createElement("ul",null,r));for(var n=0;n<s.length&&(a+=s[n],n!==s.length-1);n++)a+=", ";h(a)})(e.sgId)},"[",e.sgId,"] ",De.filter(t=>t.sgId===e.sgId)[0].sgName))))))))))))}var Re=class extends s.Component{constructor(e){super(e),this.state={sidebarOpen:!1},this.handleClick=this.handleClick.bind(this)}handleClick(){this.setState({sidebarOpen:!this.state.sidebarOpen}),this.state.sidebarOpen?document.getElementById("attacktableWrapperDiv").style.marginLeft="10px":document.getElementById("attacktableWrapperDiv").style.marginLeft="310px"}render(){return i.a.createElement("div",{className:"home"},i.a.createElement(R,{handleClickTopbar:this.handleClick}),i.a.createElement("div",{className:"container"},i.a.createElement(D,{open:this.state.sidebarOpen}),i.a.createElement("div",{className:"tableWrapper",id:"attacktableWrapperDiv"},i.a.createElement(j.a,{sx:{width:"65%",maxWidth:"65%",display:"block",marginLeft:"auto",marginRight:"auto",marginTop:"2%"}},i.a.createElement(Ie.a,{variant:"h2",gutterBottom:!0,component:"div"},"Attack Vectors List"),i.a.createElement(Se.a,{component:q.a},i.a.createElement(ve.a,{"aria-label":"collapsible table"},i.a.createElement(Ae.a,null,i.a.createElement(Ee.a,null,i.a.createElement(be.a,null),i.a.createElement(be.a,{style:{fontWeight:"bold"}},"ID"),i.a.createElement(be.a,{align:"left",style:{fontWeight:"bold"}},"Attack Vector"))),i.a.createElement(ke.a,null,xe.map(e=>i.a.createElement(Te,{key:e.avName,row:e})))))))))}};a(263);function Be(e){const{row:t}=e,[a,s]=i.a.useState(!1);return i.a.createElement(i.a.Fragment,null,i.a.createElement(Ee.a,{sx:{"& > *":{borderBottom:"unset"}}},i.a.createElement(be.a,null,i.a.createElement(ye.a,{"aria-label":"expand row",size:"small",onClick:()=>s(!a)},a?i.a.createElement(Ce.a,null):i.a.createElement(_e.a,null))),i.a.createElement(be.a,{component:"th",scope:"row"},t.sgId),i.a.createElement(be.a,{align:"left"},t.sgName)),i.a.createElement(Ee.a,null,i.a.createElement(be.a,{style:{paddingBottom:0,paddingTop:0},colSpan:6},i.a.createElement(w.a,{in:a,timeout:"auto",unmountOnExit:!0},i.a.createElement(j.a,{sx:{margin:1}},i.a.createElement(Ie.a,{variant:"h6",gutterBottom:!0,component:"div"},"Description"),i.a.createElement(ve.a,{size:"small","aria-label":"purchases"},i.a.createElement(ke.a,null,t.info.map(e=>i.a.createElement(Ee.a,{key:e.Description},i.a.createElement(be.a,{component:"th",scope:"row"},i.a.createElement("p",null,Object(Ve.a)(e.Description))))))))))),i.a.createElement(Ee.a,null,i.a.createElement(be.a,{style:{paddingBottom:0,paddingTop:0},colSpan:6},i.a.createElement(w.a,{in:a,timeout:"auto",unmountOnExit:!0},i.a.createElement(j.a,{sx:{margin:1}},i.a.createElement(Ie.a,{variant:"h6",gutterBottom:!0,component:"div"},"References"),i.a.createElement(ve.a,{size:"small","aria-label":"purchases"},i.a.createElement(ke.a,null,function(e){for(var t=[],a=[],s=Me.filter(t=>t.safeguards&&t.safeguards.some(t=>t.sgId===e.sgId)),r=0;r<s.length;r++)s[r].tags.contents&&s[r].tags.contents.forEach(e=>{"attack"===e?t.push(i.a.createElement(Oe.a,{label:e,size:"small",color:"error"})):"peer-reviewed"===e?t.push(i.a.createElement(Oe.a,{label:e,size:"small",color:"primary"})):"standard"===e&&t.push(i.a.createElement(Oe.a,{label:e,size:"small",color:"default"}))}),a.push(i.a.createElement(Ee.a,{key:s[r].title},i.a.createElement(be.a,{component:"th",scope:"row"},i.a.createElement("a",{href:s[r].link,target:"_blank",rel:"noreferrer"},s[r].title),"\xa0",t))),t=[];return a}(t))))))),i.a.createElement(Ee.a,null,i.a.createElement(be.a,{style:{paddingBottom:0,paddingTop:0},colSpan:6},i.a.createElement(w.a,{in:a,timeout:"auto",unmountOnExit:!0},i.a.createElement(j.a,{sx:{margin:1}},i.a.createElement(Ie.a,{variant:"h6",gutterBottom:!0,component:"div"},"Control Type"),i.a.createElement(ve.a,{size:"small","aria-label":"purchases"},i.a.createElement(ke.a,null,i.a.createElement(Ee.a,{key:1},i.a.createElement(be.a,{component:"th",scope:"row"},t.info[0].Directive?i.a.createElement("p",null,"Directive"):i.a.createElement("p",null),t.info[0].Preventive?i.a.createElement("p",null,"Preventive"):i.a.createElement("p",null),t.info[0].Detective?i.a.createElement("p",null,"Detective"):i.a.createElement("p",null),t.info[0].Corrective?i.a.createElement("p",null,"Corrective"):i.a.createElement("p",null))))))))),i.a.createElement(Ee.a,null,i.a.createElement(be.a,{style:{paddingBottom:0,paddingTop:0},colSpan:6},i.a.createElement(w.a,{in:a,timeout:"auto",unmountOnExit:!0},i.a.createElement(j.a,{sx:{margin:1}},i.a.createElement(Ie.a,{variant:"h6",gutterBottom:!0,component:"div"},"Stakeholders Role"),i.a.createElement(ve.a,{size:"small","aria-label":"purchases"},i.a.createElement(ke.a,null,i.a.createElement(Ee.a,{key:1},i.a.createElement(be.a,{component:"th",scope:"row"},i.a.createElement("ul",null,t.info[0]["Project Maintainer"]?i.a.createElement("li",null,i.a.createElement("b",null,"Project Maintainer: "),t.info[0]["Project Maintainer"]):i.a.createElement(i.a.Fragment,null),t.info[0].Administrator?i.a.createElement("li",null,i.a.createElement("b",null,"Administrator: "),t.info[0].Administrator):i.a.createElement(i.a.Fragment,null),t.info[0]["Downstream User"]?i.a.createElement("li",null,i.a.createElement("b",null,"Downstream User: "),t.info[0]["Downstream User"]):i.a.createElement(i.a.Fragment,null)))))))))))}var Le=class extends s.Component{constructor(e){super(e),this.state={sidebarOpen:!1},this.handleClick=this.handleClick.bind(this)}handleClick(){this.setState({sidebarOpen:!this.state.sidebarOpen}),this.state.sidebarOpen?document.getElementById("tableWrapperDiv").style.marginLeft="10px":document.getElementById("tableWrapperDiv").style.marginLeft="310px"}render(){return i.a.createElement("div",{className:"home"},i.a.createElement(R,{handleClickTopbar:this.handleClick}),i.a.createElement("div",{className:"container"},i.a.createElement(D,{open:this.state.sidebarOpen}),i.a.createElement("div",{className:"tableWrapper",id:"tableWrapperDiv"},i.a.createElement(j.a,{sx:{width:"65%",maxWidth:"65%",display:"block",marginLeft:"auto",marginRight:"auto",marginTop:"2%"}},i.a.createElement(Ie.a,{variant:"h2",gutterBottom:!0,component:"div"},"Safeguards List"),i.a.createElement(Se.a,{component:q.a},i.a.createElement(ve.a,{"aria-label":"collapsible table"},i.a.createElement(Ae.a,null,i.a.createElement(Ee.a,null,i.a.createElement(be.a,null),i.a.createElement(be.a,{style:{fontWeight:"bold"}},"ID"),i.a.createElement(be.a,{align:"left",style:{fontWeight:"bold"}},"Safeguard"))),i.a.createElement(ke.a,null,De.map(e=>i.a.createElement(Be,{key:e.sgName,row:e})))))))))}},Ge=(a(264),a(311));function je(e){var t=[];return e.tags&&e.tags.contents&&e.tags.contents.forEach(e=>t.push(function(e){return"attack"===e?i.a.createElement(Oe.a,{label:e,size:"small",color:"error"}):"peer-reviewed"===e?i.a.createElement(Oe.a,{label:e,size:"small",color:"primary"}):i.a.createElement(Oe.a,{label:e,size:"small",color:"default"})}(e))),t}function We(e,t,a){"tags"===a&&(a="contents"),"vector"===a&&(a="vectors");return["year","ecosystems","contents"].includes(a)?"year"===a?(a in t.tags&&null!==t.tags[a]||(t.tags[a]=0),a in e.tags&&null!==e.tags[a]||(e.tags[a]=0),parseInt(t.tags[a])-parseInt(e.tags[a])):(a in t.tags&&null!==t.tags[a]||(t.tags[a]=""),a in e.tags&&null!==e.tags[a]||(e.tags[a]=""),t.tags[a]<e.tags[a]?-1:t.tags[a]>e.tags[a]?1:0):(void 0===t[a]&&(t[a]=""),void 0===e[a]&&(e[a]=""),t[a].toString().toLowerCase()<e[a].toString().toLowerCase()?-1:t[a].toString().toLowerCase()>e[a].toString().toLowerCase()?1:0)}function Ue(e,t){return"asc"===e?(e,a)=>We(e,a,t):(e,a)=>-We(e,a,t)}function qe(e){const{row:t}=e;return i.a.createElement(i.a.Fragment,null,i.a.createElement(Ee.a,{sx:{"& > *":{borderBottom:"unset"}}},i.a.createElement(be.a,{align:"left"},i.a.createElement("div",null,t.title),i.a.createElement("div",null,i.a.createElement("a",{href:t.link,target:"_blank",rel:"noreferrer"},t.link.match(/^(?:https?:\/\/)?(?:[^@/\n]+@)?(?:www\.)?([^:/?\n]+)/g)+"/..."))),i.a.createElement(be.a,{align:"left"},t.tags&&t.tags.year?t.tags.year:""),i.a.createElement(be.a,{align:"left"},function(e){var t=[];return e.tags&&e.tags.ecosystems&&e.tags.ecosystems.forEach(e=>t.push(i.a.createElement("div",null,e))),t}(t)),i.a.createElement(be.a,{align:"left"},function(e){var t,a=[];if(e.vectors)return e.vectors.forEach(e=>{t=e.scopeAvId?i.a.createElement("div",null," ",i.a.createElement("a",{href:"https://khulnasoft.github.io/riex/#/attacktree?av="+e.avId,target:"_blank",rel:"noreferrer"},"[",e.avId,"] ",e.avName)," in the scope of ",i.a.createElement("a",{href:"https://khulnasoft.github.io/riex/#/attacktree?av="+e.scopeAvId,target:"_blank",rel:"noreferrer"},"[",e.scopeAvId,"] ",e.scopeAvName)):i.a.createElement("div",null," ",i.a.createElement("a",{href:"https://khulnasoft.github.io/riex/#/attacktree?av="+e.avId,target:"_blank",rel:"noreferrer"},"[",e.avId,"] ",e.avName)),-1===a.indexOf(t)&&a.push(t)}),a}(t)),i.a.createElement(be.a,{align:"left"},function(e){var t=[];if(e.safeguards)return e.safeguards.forEach(e=>{var a=i.a.createElement("div",null," [",e.sgId,"] ",e.sgName);t.push(a)}),t}(t)),i.a.createElement(be.a,{align:"left"},je(t)),i.a.createElement(be.a,{align:"left"},function(e){var t=[];return e.tags&&e.tags.packages&&e.tags.packages.forEach(e=>t.push(i.a.createElement("div",null,e))),t}(t))))}var ze=class extends s.Component{constructor(e){super(e),this.handleRequestSort=((e,t)=>{const a=this.state.order&&"asc"===this.state.order;this.setState({order:a?"desc":"asc"}),this.setState({orderBy:t}),this.setState({data:this.state.data.sort(Ue(this.state.order,t))})}),this.state={sidebarOpen:!1,visuallyHidden:!1,data:Me,headCellsSortable:[{id:"title",label:"Title"},{id:"year",label:"Year"},{id:"ecosystems",label:"Ecosystem(s)"},{id:"vector",label:"Related Attack Vector(s)"},{id:"safeguards",label:"Related Safeguard(s)"},{id:"tags",label:"Tags"}],headCellsNotSortable:[{id:"package",label:"Affected Package(s)"}]},this.handleClick=this.handleClick.bind(this),this.handleRequestSort=this.handleRequestSort.bind(this)}handleClick(){this.setState({sidebarOpen:!this.state.sidebarOpen}),this.state.sidebarOpen?document.getElementById("tableWrapperDiv").style.marginLeft="10px":document.getElementById("tableWrapperDiv").style.marginLeft="310px"}render(){return i.a.createElement("div",{className:"home"},i.a.createElement(R,{handleClickTopbar:this.handleClick,sidebarState:this.state.sidebarOpen}),i.a.createElement("div",{className:"container"},i.a.createElement(D,{open:this.state.sidebarOpen}),i.a.createElement("div",{className:"tableWrapper",id:"tableWrapperDiv"},i.a.createElement(j.a,{sx:{width:"65%",maxWidth:"65%",display:"block",marginLeft:"auto",marginRight:"auto",marginTop:"2%"}},i.a.createElement(Ie.a,{variant:"h2",gutterBottom:!0,component:"div"},"References"),i.a.createElement(Ie.a,{variant:"subtitle1",gutterBottom:!0,component:"div"},'All of the references below relate in one way or the other to software supply chain security, e.g. by describing real-world attacks or vulnerabilities, analyzing ecosystem weaknesses, presenting proof-of-concepts or suggesting safeguards. References are linked to attack vectors and safeguards where applicable, and tags like "peer-reviewed" or "attack" are used to categorize the content. Though the names of affected open-source projects and packages are provided in the last table column, supporting lookups, we do not strive for completeness. In this context, also refer to other data sets related to real-world attacks, e.g. the ',i.a.createElement("a",{href:"https://dasfreak.github.io/Backstabbers-Knife-Collection/",target:"_blank",rel:"noreferrer"},"Backstabber's Knife Collection")," or IQT Labs' ",i.a.createElement("a",{href:"https://github.com/IQTLabs/software-supply-chain-compromises",target:"_blank",rel:"noreferrer"},"Supply Chain Compromises"),"."),i.a.createElement(Se.a,{component:q.a},i.a.createElement(ve.a,{"aria-label":"collapsible table"},i.a.createElement(Ae.a,null,i.a.createElement(Ee.a,null,this.state.headCellsSortable.map(e=>i.a.createElement(be.a,{key:e.id,align:"left",sortDirection:this.state.orderBy===e.id&&this.state.order},i.a.createElement(Ge.a,{active:this.state.orderBy===e.id,direction:this.state.orderBy===e.id?this.state.order:"desc",onClick:t=>this.handleRequestSort(t,e.id)},e.label))),this.state.headCellsNotSortable.map(e=>i.a.createElement(be.a,{align:"left"},e.label)))),i.a.createElement(ke.a,null,this.state.data.map(e=>i.a.createElement(qe,{key:e.link+Math.random(),row:e})))))))))}},He=(a(265),a(160)),Ke=a.n(He),Fe=a(161),Je=a.n(Fe);var Qe=class extends s.Component{constructor(e){super(e),this.scrollToDiv=(()=>{let e=window.location.href;if(e.includes("#")){const t="".concat(e.substring(e.indexOf("#")+1)).split("#")[1];this.setState({anchorId:t});const a=document.getElementById(t);a&&(a.scrollIntoView({behavior:"smooth",block:"start"}),window.scrollBy(0,-10))}}),this.state={sidebarOpen:!1,anchorId:""},this.handleClick=this.handleClick.bind(this)}handleClick(){this.setState({sidebarOpen:!this.state.sidebarOpen}),this.state.sidebarOpen?document.getElementById("tableWrapperDiv").style.marginLeft="10px":document.getElementById("tableWrapperDiv").style.marginLeft="310px"}componentDidMount(){this.scrollToDiv()}render(){return i.a.createElement("div",{className:"home"},i.a.createElement(R,{handleClickTopbar:this.handleClick,sidebarState:this.state.sidebarOpen}),i.a.createElement("div",{className:"documContainer"},i.a.createElement(D,{open:this.state.sidebarOpen}),i.a.createElement("div",{className:"tableWrapper",id:"tableWrapperDiv"},i.a.createElement(j.a,{sx:{width:"50%",maxWidth:"50%",display:"block",marginLeft:"auto",marginRight:"auto"}},i.a.createElement(Ie.a,{variant:"h1",component:"div",gutterBottom:!0}," Documentation"),i.a.createElement("div",{id:"oss-supp-model"},i.a.createElement(Ie.a,{variant:"h2",gutterBottom:!0,component:"div"},"Open-Source Software Supply Chain Model"),i.a.createElement(Ie.a,{variant:"subtitle1",gutterBottom:!0},"This section describes a generic and high-level model of open-source software supply chains. It covers typical systems, stakeholders and interactions that are relevant in the context of developing, building and distributing open-source artifacts, and which are targeted by the taxonomy's attack vectors. Using the ",i.a.createElement("a",{href:"http://www.fmc-modeling.org/",target:"_blank",rel:"noreferrer"},"FMC notation"),", the model looks as follows:"),i.a.createElement("img",{style:{width:"100%",display:"block",marginLeft:"auto",marginRight:"auto",marginTop:"2%",marginBottom:"2%"},src:Ke.a,alt:"OSS Supply Chain Model"}),i.a.createElement(Ie.a,{variant:"h4",gutterBottom:!0},"Systems"),i.a.createElement(Ie.a,{variant:"body1",gutterBottom:!0},"The systems considered comprise versioning control systems, build systems and package repositories. They do not necessarily correspond to concrete physical or virtual systems providing the respective function, but should be understood as roles, that can be exercised by a single host or 3rd party service.",i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("b",null,"Version control systems (VCS)")," host the source code of open-source projects, together with related metadata and configuration files. They track and manage all the changes to the source code thoughout the project lifetime. Plain VCSs (like ",i.a.createElement("a",{href:"https://git-scm.com/",target:"_blank",rel:"noreferrer"},"Git"),") do not require its users to authenticate, but complementary tools offer additional functionalities. For example, they may provide issue trackers or improved security controls, like authentication, management of more fine-grained permissions or review workflows."),i.a.createElement("br",null),i.a.createElement("li",null,i.a.createElement("b",null,"Build systems")," generate binary artifacts (like an executable or a compressed archive) starting from the project's codebase. CI/CD pipelines consist of a series of steps that have to be performed to deliver a new version of software. The common steps of a CI/CD pipeline are:",i.a.createElement("ul",null,i.a.createElement("li",null,"Build - the application is compiled, generally using build-automation tools like Make, Ant, Gradle, or xMake. The build process commonly involves dependency managers (like PIP or NPM) to determine and automatically download the required dependencies for the build to succeed."),i.a.createElement("li",null,"Test - the application is tested, generally in an automated fashion (e.g, using tools like JUnit)"),i.a.createElement("li",null,"Release - the application is pushed into the associated repository"),i.a.createElement("li",null,"Deploy - the application is deployed to production")),"CI/CD pipelines are automated through CI/CD tools, like Jenkins or Travis CI. The generated files and artifacts are then distributed to downstream users for easy consumption. "),i.a.createElement("br",null),i.a.createElement("li",null,i.a.createElement("b",null,"Distribution platforms"),' make pre-built OSS artifacts accessible to downstream users, for example through package managers or via manual download. As "distribution platform" we do not only consider public package repositories (like ',i.a.createElement("a",{href:"https://pypi.org/",target:"_blank",rel:"noreferrer"},"PyPI")," or ",i.a.createElement("a",{href:"https://search.maven.org/",target:"_blank",rel:"noreferrer"},"Maven Central"),"), but also internal/external mirrors, content delivery networks (CDN) or proxies."),i.a.createElement("br",null),i.a.createElement("li",null,i.a.createElement("b",null,"Workstations of OSS Maintainers and Administrators")," are also considered in the attack scenario, even though they are not explicitly depicted, because project maintainers and administrators use them to for privileged access to sensitive resources (like the project's codebase or the build system's web interface)."),i.a.createElement("br",null))),i.a.createElement(Ie.a,{variant:"h4",gutterBottom:!0},"Stakeholders"),i.a.createElement(Ie.a,{variant:"body1",gutterBottom:!0},"Stakeholders in the open-source supply chain model shall be understood as roles, multiple of which can be assumed by a given individual or group. Open-source project members, for instance, commonly assume the role of project maintainers (with privileged access to project resources) and downstream users (consuming upstream artifacts).",i.a.createElement("br",null),i.a.createElement("br",null),i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("b",null,"Contributors")," contribute code to an Open-Source project, typically with limited permissions to project resources. They commonly submit their code in form of merge requests (or pull requests), so to let the project maintainers to perform reviews prior to being integrated into the codebase."),i.a.createElement("br",null),i.a.createElement("li",null,i.a.createElement("b",null,"OSS Project Maintainers")," have privileged access to project resources. For this reason, they typically review and decide whether to integrate or not the contributors' merge requests. Project maintainers configure and trigger build jobs, and deploy pre-built artifacts on package repositories. It must be noted that the real identities of both contributors and maintainers are not necessarily known."),i.a.createElement("br",null),i.a.createElement("li",null,i.a.createElement("b",null,"System and Service Administrators")," configure, maintain and operate the aforementioned systems or services. "),i.a.createElement("br",null),i.a.createElement("li",null,i.a.createElement("b",null,"Downstream Users")," are the consumers of Open-Source project artifacts, either directly cloning the source code from the VCS or by downloading pre-built packages from distribution platforms. The latter is typically automated through package managers (like pip or npm), which also collect and obtain all the required dependencies (both direct and indirect)."),i.a.createElement("br",null)))),i.a.createElement("div",{id:"attacktree-fund",style:{marginTop:"10%"}},i.a.createElement(Ie.a,{variant:"h2",gutterBottom:!0,component:"div"},"Attack Trees 101"),i.a.createElement(Ie.a,{variant:"body1",gutterBottom:!0},i.a.createElement("a",{href:"https://www.schneier.com/academic/archives/1999/12/attack_trees.html",target:"_blank",rel:"noreferrer"},"Attack trees")," are a formal representation of attacker goals and techniques. They support organizations and especially defenders to understand current exposure to threat and to identify the possible countermeasures to be used to protect the assets.",i.a.createElement("br",null),i.a.createElement("br",null),"At the ",i.a.createElement("b",null,"root")," of an attack tree the attacker's top-level goal is represented. Such goal is iteratively refined by its children into sub-goals. Depending on the degree of the refinement, nodes may correspond to more or less actionable tasks.",i.a.createElement("br",null),i.a.createElement("br",null),"Nodes in an attack tree can be 'AND nodes' or 'OR nodes'. In the frist case, they represent different steps in achieving the parent's goal, while in the second case they represent alternatives. In our specific case, since we used the semantics of attack trees to outline a taxonomy, all the nodes have to be considered of 'OR' type."),i.a.createElement("img",{style:{width:"100%",display:"block",marginLeft:"auto",marginRight:"auto",marginTop:"2%",marginBottom:"2%"},src:Je.a,alt:"Attack tree example"})),i.a.createElement("div",{id:"jsondata",style:{marginTop:"10%"}},i.a.createElement(Ie.a,{variant:"h2",gutterBottom:!0,component:"div"},"JSON Data Structure"),i.a.createElement(Ie.a,{variant:"body1",gutterBottom:!0},"To facilitate the improvement, update and extension of the data underlying the visualization, the dataset is split into four ",i.a.createElement("a",{href:"https://www.json.org/json-en.html",target:"_blank",rel:"noreferrer"},"JSON")," files:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"attackvectors.json")," contains a flat list of all attack vectors, each one having an identifier, a name and description as well as other properties"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"taxonomy.json")," creates the tree structure by referencing and nesting all the attack vectors"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"references.json")," contains a flat list of both scientific and grey literature references that deal with the identified attack vectors, thus, supporting their existence in our taxonomy"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"safeguards.json")," contains a flat list of safeguards")),"Let's suppose, for example, that a new attack for a given vector has been observed. This can be reflected in the dataset just by modifying ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"references.json"),".",i.a.createElement("br",null),i.a.createElement("br",null),"The addition of an entirely new attack vector, on the other side, requires the modification of the three files ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"attackvectors.json"),", ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"taxonomy.json")," and ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"references.json"),"."),i.a.createElement(Ie.a,{variant:"h4",gutterBottom:!0},"Attack Vectors"),i.a.createElement(Ie.a,{variant:"body1",gutterBottom:!0},"The file ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"attackvectors.json")," contains a flat list of all attack vectors, each one having a unique identifier and name. Furthermore, each vector is characterized by a description, its impact, a list of related scientific references (if any), and a list of safeguards (if any).",i.a.createElement("br",null),"An example excerpt of the file is the following:",i.a.createElement(j.a,{sx:{width:"50%",maxWidth:"50%",display:"block",marginLeft:"auto",marginRight:"auto",marginBottom:"2%"}},i.a.createElement("pre",{style:{fontFamily:"Courier New",fontWeight:"bold"}},'\n    [{\n        "avId": "AV-000",\n        "avName": "Conduct Open-Source Supply Chain Attack",\n        "info": [{\n            "Description": "The attack tree focuses on open-source based software development ...",\n            "Impact": "Conduct a Software Supply Chain attack",\n            "Mapped Safeguard": [{\n                "sgId": "SG-001"\n            }, {\n                "sgId": "SG-002"\n            }, {\n                "sgId": "SG-003"\n            }, \n                ... \n            ]\n        }]\n    }, {\n        "avId": "AV-100",\n        "avName": "Develop and Advertise Distinct Malicious Package from Scratch",\n        "info": [{\n            "Description": "This attack vector covers the creation of a new, seemingly legitimate ...",\n            "Impact": "Inject Malicious Code ...",\n            "Mapped Safeguard": []\n        }]\n    }, {\n        "avId": "AV-200",\n        "avName": "Create Name Confusion with Legitimate Package",\n        "info": [{\n            "Description": "The general idea behind name confusion is that ...",\n            "Impact": "Inject Malicious Code ...",\n            "Mapped Safeguard": [{\n                "sgId": "SG-007"\n            }, {\n                "sgId": "SG-011"\n            }, {\n                "sgId": "SG-012"\n            },\n                ... \n            ]\n        }]\n    }, \n    . . .\n]\n')),"As we can observe, the list of attack vectors is a JSON array and each JSON element contains the following information:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"avId"),", that is a string describing the identifier associated to the specific attack vector"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"avName"),", that is a string describing the name of the specific attack vector"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"info")," , that is an array containing a single JSON object characterized by the following fields:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Description"),", that is a string describing the meaning and purpose of a specific attack vector "),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Impact"),", that is a string describing the impact related to a successful attack "),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Mapped Safeguard"),", that is an array containing the list of safeguards related to the specific attack vector. Each safeguard is indexed using the related identifier ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"sgId")," "))))),i.a.createElement(Ie.a,{variant:"h4",gutterBottom:!0},"Taxonomy"),i.a.createElement(Ie.a,{variant:"body1",gutterBottom:!0},"The file ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"taxonomy.json")," arranges the attack vectors in the hierarchical structure of the attack tree.",i.a.createElement("br",null),"The following excerpt, for instance, makes the two attack vectors ",i.a.createElement("i",null,"Develop and Advertise Distinct Malicious Package from Scratch")," and ",i.a.createElement("i",null,"Create Name Confusion with Legitimate Package")," child nodes of ",i.a.createElement("i",null,"Conduct Open-Source Supply Chain Attack"),":",i.a.createElement(j.a,{sx:{width:"50%",maxWidth:"50%",display:"block",marginLeft:"auto",marginRight:"auto",marginBottom:"2%"}},i.a.createElement("pre",{style:{fontFamily:"Courier New",fontWeight:"bold"}},'\n{\n    "avName": "Conduct Open-Source Supply Chain Attack",\n    "avId": "AV-000",\n    "children": [{\n        "avName": "Develop and Advertise Distinct Malicious Package from Scratch",\n        "avId": "AV-100"  \n        },\n        {\n        "avName": "Create Name Confusion with Legitimate Package",\n        "avId": "AV-200",\n        "children": [{\n            ...\n        ]},\n        ...\n    ]\n}\n')),"As we can observe, the taxonomy is a JSON object and each JSON element (node of the tree) contains the following information:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"avName"),", that is a string describing the name of the specific attack vector"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"avId"),", that is a string describing the identifier associated to the specific attack vector"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"children")," (optional), that is an array containing the list of children nodes of an attack vector. In this case we follow the semantics of attack trees "))),i.a.createElement(Ie.a,{variant:"h4",gutterBottom:!0},"References"),i.a.createElement(Ie.a,{variant:"body1",gutterBottom:!0},"The file ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"references.json")," contains a flat list of both scientific and grey literature references supporting the presence of the attack vectors in the taxonomy. The list may include, for example, peer-reviewed papers, master/PhD thesis, standards, technical reports, a blog post talking about a real-world attack, a vulnerability disclosure affecting any of the involved systems, or a whitepaper describing a proof-of-concept that (if exploited) could have led to a supply chain attack.",i.a.createElement("br",null),"The template to document each reference entry is the following:",i.a.createElement(j.a,{sx:{width:"50%",maxWidth:"50%",display:"block",marginLeft:"auto",marginRight:"auto",marginBottom:"2%"}},i.a.createElement("pre",{style:{fontFamily:"Courier New",fontWeight:"bold"}},'\n{\n    "title": "",\n    "link": "",\n    "vectors": [\n        {\n            "avId": "",\n            "avName": "",\n            "scopeAvId": "",\n            "scopeAvName": ""\n        }\n    ],\n    "safeguards": [\n        {\n            "sgId": "",\n            "sgName": ""\n        }\n    ],\n    "tags": {\n        "ecosystems": ["Java", "JavaScript", ...],\n        "packages": ["event-stream", "..."], \n        "contents": ["peer-reviewed", "attack", "vulnerability", ...],\n        "year": null\n    }\n}\n')),"The list of references is a JSON array and each JSON element contains the following information:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"title"),", that is a string describing the title of the peer-reviewed paper, the real-world attack described in a news page and so on"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"link"),", that is a string containing the URL of the reference")),i.a.createElement("br",null),i.a.createElement("br",null),"The ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"vectors")," array contains the list of attack vectors to which the reference is mapped. You may notice that in the tree there are attack vectors that appear in different ",i.a.createElement("b",null,"scopes"),". In fact, the compromission of the maintainer system may happen both in the case of the VCS and in the one of the build system, for example. For this reason, some references may require the specification of the scope of the related attack vector. Thus the fields available in the ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"vectors")," array are:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"avId")," , that is a string describing the identifier of the attack vector that was at the root cause of the described supply chain attack "),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"avName"),", that is a string describing the name of the specific attack vector that was at the root cause of the described supply chain attack "),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"scopeAvId")," (optional), that is a string describing the identifier of the attack vector describing the scope"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"scopeAvName")," (optional), that is a string describing the name of the specific attack vector describing the scope ")),i.a.createElement("br",null),i.a.createElement("br",null),"The ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"safeguards")," array contains the list of safeguards to which the reference is mapped, and the information required in this case are the following:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"sgId"),", that is a string describing the identifier associated to the specific safeguard"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"sgName"),", that is a string describing the name of the specific safeguard")),"The ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"tags")," dictionary contains additional information related to the reference:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"ecosystems"),", that is an array of strings describing the involved ecosystems (e.g., Python, JavaScript, Java)"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"packages"),", that is an array of strings, describing the name of affected packages"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"contents"),", that is an array describing the type of the resource. The possible values are:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"peer-reviewed")),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"thesis")),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"vulnerability")),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"attack")),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"proof-of-concept")),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"presentation")),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"standard")))),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"year"),", that is an integer describing the year of publishing of the resource"))),i.a.createElement(Ie.a,{variant:"h4",gutterBottom:!0},"Safeguards"),i.a.createElement(Ie.a,{variant:"body1",gutterBottom:!0},"The file ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"safeguards.json")," contains the list of safeguards that (partially or fully) mitigate different attack vectors. Each safeguard has a unique identifier and name and is characterized by a description, a list of related scientific references (if any), its type (directive, preventive, detective or corrective) and a description how the different stakeholders implement, apply or use it.",i.a.createElement("br",null),"An example excerpt of the file is the following:",i.a.createElement(j.a,{sx:{width:"50%",maxWidth:"50%",display:"block",marginLeft:"auto",marginRight:"auto",marginBottom:"2%"}},i.a.createElement("pre",{style:{fontFamily:"Courier New",fontWeight:"bold"}},'\n[{\n        "sgId": "SG-001",\n        "sgName": "Software Bill of Materials (SBOM)",\n        "info": [{\n            "Description": "A Software Bill of Material (SBOM) is a ...",\n            "Directive": false,\n            "Preventive": true,\n            "Detective": true,\n            "Corrective": false,\n            "Project Maintainer": "By maintaining a detailed SBOM, the Project Maintainer ...",\n            "Administrator": "The Administrator will be involved by ...",\n            "Downstream User": "Similarly to the code signing and signature verification, ..."\n        }]\n    },\n    {\n        "sgId": "SG-002",\n        "sgName": "Patch Management",\n        "info": [{\n            "Description": "By performing regular software updates on ...",\n            "Directive": false,\n            "Preventive": true,\n            "Detective": false,\n            "Corrective": true,\n            "Project Maintainer": "Project Maintainer could enstablish ... ",\n            "Administrator": "Package Repositories could enstablish ...",\n            "Downstream User": ""\n        }]\n    },\n    ...\n]\n')),"As we can observe, the list of attack vectors is a JSON array and each JSON element contains the following information:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"sgId"),", that is a string describing the identifier associated to the specific safeguard"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"sgName"),", that is a string describing the name of the specific safeguard"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"info")," , that is an array containing a single JSON object characterized by the following fields:",i.a.createElement("ul",null,i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Description"),", that is a string describing the meaning and purpose of a specific safeguard"),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Directive"),", ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Preventive"),",",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Detective"),", and ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Corrective")," are boolean fields that specify the type of safeguard "),i.a.createElement("li",null,i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Project Maintainer"),", ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Administrator"),", and ",i.a.createElement("pre",{style:{display:"inline-block",fontFamily:"Courier New"}},"Open-Source Consumer")," are string fields describing the involvement of the specific stakeholders that is required to make the countermeasure effective "))))))))))}};var Ye=class extends s.Component{render(){return i.a.createElement("div",{className:"App"},i.a.createElement(fe.c,null,i.a.createElement(fe.a,{exact:!0,path:"/",element:i.a.createElement(he,null)}),i.a.createElement(fe.a,{exact:!0,path:"/attacktree",element:i.a.createElement(G,null)}),i.a.createElement(fe.a,{exact:!0,path:"/attackvectors",element:i.a.createElement(Re,null)}),i.a.createElement(fe.a,{exact:!0,path:"/safeguards",element:i.a.createElement(Le,null)}),i.a.createElement(fe.a,{exact:!0,path:"/references",element:i.a.createElement(ze,null)}),i.a.createElement(fe.a,{exact:!0,path:"/documentation",element:i.a.createElement(Qe,null)})))}};n.a.render(i.a.createElement(i.a.StrictMode,null,i.a.createElement(b.a,null,i.a.createElement(Ye,null))),document.getElementById("root"))},30:function(e){e.exports=[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)",info:[{Description:"A Software Bill of Materials (SBOM) is a list of components related to a given software artifact, comparable to the list of ingredients on food packaging. Those components are typically runtime dependencies of the artifact in question, but can also comprise other dependency types. The content and properties of SBOMs decide about use-cases and capabilities, esp. the kind of verifications that can be exercised by downstream consumers. For instance, SBOMs can be machine-readable, timestamped and signed, whereas individual dependencies can be identified using consistent naming schemes and digests, and described in regard to provenance and pedigree. The creation of SBOMs can be automated. SPDX, CycloneDX, and SWID are prominent machine-readable standards and formats for SBOMs.",Directive:!1,Preventive:!0,Detective:!0,Corrective:!1,"Project Maintainer":"Project Maintainers can produce and distribute SBOMs as to support downstream consumers in activities such as verification, vulnerability management or license compliance.",Administrator:"Service providers of package repositories or distribution sites can verify, publish and analyze SBOMs on their end to support downstream users in the selection of components.","Downstream User":"Downstream users can demand SBOMs for new procurements, inspect and analyze the SBOMs to check provenance, license compliance, known vulnerabilities, etc."}]},{sgId:"SG-002",sgName:"Patch Management",info:[{Description:'All the systems and software used throughout the development lifecycle should be reflected in an accurate inventory. Patch management makes sure that those are up-to-date and free of vulnerabilities that could be used by attackers to compromise project resources, e.g. source code, build configuration or binary artifacts. It depends on the respective component or ecosystem whether automated update mechanisms are available, and individual risk analyses can be employed to decide whether such mechanisms or manual updates are preferred. For example, the use of version ranges when specifying application dependencies can result in automated updates, and has been misused in the past to deliver malicious versions to downstream users (cf. "Version Pinning").',Directive:!1,Preventive:!0,Detective:!1,Corrective:!0,"Project Maintainer":"Project Maintainer can establish a patch management process in order to perform security updates of all systems and software used throughout the development lifecycle.",Administrator:"System administrators can establish a patch management process in order to perform security updates, thus, avoid the use of vulnerable components in their infrastructures.","Downstream User":""}]},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)",info:[{Description:"Software Composition Analysis tools allow to automate both the production of SBOMs and also to inspect the components of which a software product is made of. Hence, the SCA can be considered as a process performed on top of SBOMs, and that can be customised to match the security requirements desired (e.g., integrity checks, quality and security metrics verification, provenance etc.).",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"Project Maintainers would be involved in carrying on such analysis, in order to assess the security requirements at each step of the supply chain.",Administrator:"Administrator would be involved in carrying on such analysis, in order to assess the security requirements at each step of the supply chain.","Downstream User":"Open-Source Consumer would be involved in carrying on such analysis, in order to assess the security requirements at each step of the supply chain."}]},{sgId:"SG-004",sgName:"Manual Source Code Review",info:[{Description:"Manual source code reviews comprise the inspection of a software's entire code base by a human reviewer in order to identify security flaws or malicous code. They can outperform automated tools in the detection of certain vulnerability types, e.g. flaws in application/business logic or authorization checks. However, manual source code reviews are slow and require skilled, experienced and patient code reviewers. As such, they are more suitable for highly sensitive projects, e.g. in military contexts or critical infratructures, especially when considering that such reviews have to be performed for all direct and transitive dependencies of a given development project.",Directive:!1,Preventive:!1,Detective:!0,Corrective:!1,"Recovery Safeguard (R)":"","Project Maintainer":"",Administrator:"","Downstream User":"Downstream users can perform manual source code reviews of consumed open-source components."}]},{sgId:"SG-005",sgName:"Application Security Testing (AST)",info:[{Description:"<p>Application Security Testing consists of a process of performing security tests on applications to identify possible vulnerabilities, weaknesses, or malicious code. Such Application Security Tests may happen in three different ways:<ul>  <li>Static Application Security Testing (SAST), is a testing methodology that analyzes and scan an application without running it. Hence, this process is also known as White Box Testing, since analyses the inner structure of an application.</li> <li>Dynamic Application Security Testing (DAST), is a testing methodology that uses a Black Box Testing approach, conducting an assessment without accessing the application source code. Instead, the DAST attempt to capture the application behavior by running it in a secured environment (e.g., an instructed sandbox).</li> <li> The Interactive Application Security Testing (IAST) uses a Grey Box Testing approach, combining the functionalities of both SAST and DAST. In particular, an IAST tool occurs in real-time while the application is running  (like DAST), checking in parallel the source code (like SAST). The source code check happens at the post-build stage, while the pure SAST approach occurs before the code has been built. Finally, the IAST tool will report the line number of the issue from the source code during the execution of the application. </li> </ul> In the same fashion as the manual source code review, in the case of the Open-Source Software Supply Chain, the Application Security Testing should target all the direct and indirect dependencies, to make sure that no malicious code has been injected or executed.</p>",Directive:!1,Preventive:!1,Detective:!0,Corrective:!1,"Recovery Safeguard (R)":"","Project Maintainer":"",Administrator:"Administrator can employ application security testing techniques or tools to scan the consumed open-source components, in order to assess the security requirements at each step of the supply chain.","Downstream User":"Downstream users can employ application security testing techniques or tools to scan the consumed open-source components, in order to assess the security requirements at each step of the supply chain."}]},{sgId:"SG-006",sgName:"Runtime Application Self-Protection (RASP)",info:[{Description:"The Runtime Application Self-Protection consists of a runtime application, integrated with the actual application, that analyzes the inbound/outbound traffic and the end-user behavioral pattern to prevent security attacks. Hence, while the SAST, DAST, and IAST approach inspects an application before or after its build, the RASP methodology is used after the production release. In the specific case of Open-Source Software Supply Chain attacks, this would involve analyzing the behavior of the imported components and checking the presence of unwanted code beyond what is expected. For example, in the case of injection attacks on Node.js APIs (like eval), this would involve processing the Abstract Syntax Tree to look for unwanted behavior at runtime.",Directive:!1,Preventive:!1,Detective:!0,Corrective:!0,"Project Maintainer":"",Administrator:"","Downstream User":"Open-Source Consumer can integrate RASP components in order to prevent abnormal behavior that could have been inserted stealthly inside the dependencies of their software products and that could manifest such conduct at run-time (e.g., via backdoors, logic-bomb, time-bomb)."}]},{sgId:"SG-007",sgName:"Code Signing",info:[{Description:"Code signing enforces binary and application integrity, hence ensures that a program comes from a valid source  (authenticity)  and that has not been modified since it was signed (integrity). The efficacy of the code signing depends on the security of the underlying cryptographic mechanism and the related signing keys. Note that the validation of digital signatures and digests cannot protect against attacks that target the build process to inject malicious code. In fact, the signing process typically happens at the end of the build process at a time when potentially malicious tests and build plugins were already executed.It must be noted that the efficacy of code signing as a preventive safeguards depends on the scrutiny of the consumer when verifying the signature.",Directive:!1,Preventive:!1,Detective:!0,Corrective:!1,"Project Maintainer":"Project Maintainer can digitally sign the packages when uploading them to a package repository such that downstream users can assess the integrity of what they are consuming.",Administrator:"Administrators can enforce code signing either providing signing functionalities when uploading a package to the package repositories or by verifying the signatures when a package maintainer uploads a content. In addition, the administrators of a package repository, for example, can provide this feature to consumers of open-source to allow them to check the integrity.","Downstream User":"Consumers can assess the integrity of the downloaded packages and that the provenance is a trusted source by checking the signatures."}]},{sgId:"SG-008",sgName:"Build Dependencies from Source",info:[{Description:'Rather than downloading pre-built binary artifacts from package repositories or other distribution channels, open-source consumers can build the software themselves from the respective source code. This avoids consuming artifacts that have been compromised during their build (cf. attack vector "Injecting during the Build of Legitimate Package") or distribution  (cf. attack vector "Distribute Malicious Version of Legitimate Package"). Obviously, this cannot protect against attack vectors injecting malicious code into the project\'s source code repository.',Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"Providers of package repositories may build packages directly from the official source code, rather than permitting the upload of artifacts built somewhere else.","Downstream User":"Open-Source Consumers can employ such safeguard in order to prevent scenarios in which the legitimate packages has been tampered and hidden in binaries, rather than in source code. By building their dependencies directly from the official sources, they avoid relying on components built by third parties."}]},{sgId:"SG-009",sgName:"Remove un-used Dependencies",info:[{Description:'Software developers declare direct dependencies on open-source components whose functionality they want to use in the software under development or during development, e.g. compile dependencies or build plugins. Those dependencies have their own dependencies, so-called indirect or "transitive dependencies", all of which are automatically resolved and downloaded by package managers like Gradle or npm. However, some of those transitive dependencies may not be needed in the specific development context, e.g. because a certain functionality of a direct dependency is not used. While the removal of such "bloated dependencies" can reduce the supply chain\'s attack surface, their identification is not straight-forward, e.g. due to dynamic programming features.',Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"","Downstream User":"Open-Source Consumers can employ this safeguard to reduce their supply chain's attack surface."}]},{sgId:"SG-010",sgName:"Prevent Script Execution",info:[{Description:"Some ecosystems support the automated execution of commands or scripts contained in a package during its  installation on a given system, e.g. Python or Node.js. Blocking or preventing such executions prevents malicious code from accessing protected resources or harming the system. It must be noted that disabling script execution does not prevent the dependency on a malicious component, but only the execution of malicious code at installation time.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"","Downstream User":"Open Source Consumers may disable script execution, in order to avoid the execution of malicious code when downloading and installing an infected package."}]},{sgId:"SG-011",sgName:"Typo Guard",info:[{Description:"Package Repositories may help in the prevention of name confusion attacks against packages, by embedding and implementing tools or strategies that would block typosquatted names. For example, the Levenshtein distance may highlight similarities between names and help to detect names similar to already reserved ones. In addition, Package Repositories can enforce naming policies to restrict the abuse of already existing names.",Directive:!1,Preventive:!0,Detective:!0,Corrective:!1,"Project Maintainer":"",Administrator:"Administrators of package repositories could integrate tools to prevent from users to upload packages whose name would trick downstream users to confuse them with other (legitimate) packages.","Downstream User":""}]},{sgId:"SG-012",sgName:"Typo Detection",info:[{Description:"The installation of typosquatted or combosquatted package names by open-source consumers may be prevented by a tool that warns the user (or blocks the installation altogether) if the requested package name is similar to other packages existing in the respective repository. Such tool would compare the requested package name provided by the user with those of other existing packages, typically using string similarity metrics like the Levenshtein distance, and could consult additional characteristics like download numbers or project lifeliness to understand whether the requested package name has been squatted.",Directive:!1,Preventive:!0,Detective:!0,Corrective:!1,"Project Maintainer":"",Administrator:"","Downstream User":"Open-source consumers could be protected from the installation of typosquatted or combosquatted packages by tools that analyse and compare package names and other characteristics to determine if a requested package has been squatted."}]},{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics",info:[{Description:"Security, quality and health metrics help to assess the security posture of an open-source project and the security risks resulting from its use. Such metrics may consider, for instance, information about the lifeliness of a project or whether given security best-practices are applied. They help end-users to decide which components to consume by making them aware of the security implications, and can be computed prior to the first use but also on a continuous basis for dependencies established in the past.",Examples:[],Directive:!0,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"Open Source Project Maintainers can use such metrics as checklists to secure their projects according to consumer expectations, and advertise the metrics or maturity levels on their Web pages, e.g. through badges or similar.",Administrator:"Providers or administrators of package repositories can consume or compute such metrics and display them prominently to open source consumers, e.g. in Web frontends or command line tools, in order to support them in the selection and monitoring.","Downstream User":"Open Source Consumers can use such metrics for the initial selection and the continuous monitoring of their open-source dependencies."}]},{sgId:"SG-014",sgName:"Code Isolation and Sandboxing",info:[{Description:"Sandboxes offer isolated and instrumented environments, that are tipically used to separate and prevent harmful execution from tampering with other resources in a system. By executing open-source components in isolated environments during their consumption would prevent infections or unauthorized access to system or to sensitive resources.",Directive:!1,Preventive:!1,Detective:!1,Corrective:!0,"Project Maintainer":"",Administrator:"","Downstream User":"Open Source Consumers could execute open source components in isolated environments in order to protect from executing malicious code."}]},{sgId:"SG-015",sgName:"Pull/Merge Request Review",info:[{Description:"Pull requests are a way to inform contributors of an Open Source project of the changes that you may have pushed to a branch of a repository (e.g., in GitHub). Once a pull request is opened, this allows to discuss and review the potential changes with collaborators and add follow-up commits before the changes are merged into the branch. Designing the collaboration in Open Source projects in such a way it would prevent malicious commits to be merged into the main branch before a review. A careful pull request review would help to spot attempt in the insertion of malicious code to a production branch. In particular, having a two-person review or, more generally, peer review, would ensure to have multiple parties to agree on the changes, so to decrease the likelihood of accepting malicious insertions.In addition, obfuscation techniques for pull requests (e.g., pull request sneaking) would be detected and hopefully rejected. A pull request review should not only involve the code review of the commits, but it should also take into account an analysis of the committer, the quality of the commits, the clarity of the information provided etc.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"Open-source Project Maintainers could design the collaboration to an Open Source Project such that they accept contributions only via pull/merge requests. This enforce a review process and a discussion before merging the code in production branches.",Administrator:"","Downstream User":""}]},{sgId:"SG-016",sgName:"Protect Sensitive Branches",info:[{Description:"Code review tools like Gerrit or GitHub allow project maintainers to protect particularly sensitive branches in versioning control systems like Git. Examples rules comprise the requirement to sign commits, or a minimum number of positive review approvals or successul status checks before code changes can be merged into a protected target branch. Protection rules can be used to enforce review best-practices that increase the chances of detecting malicious code contributions.",Directive:!1,Preventive:!0,Detective:!0,Corrective:!1,"Project Maintainer":"Open Source Project Maintainers could define and enable protection rules, especially for sensitive branches (i.e., production branches) to protect the source code from malicious injections.",Administrator:"","Downstream User":""}]},{sgId:"SG-017",sgName:"Multi-Factor Authentication",info:[{Description:"Multi-factor authentication (MFA) requires users to present two or more proofs of identity to authenticate to a system. One example would be username and password in addition to an one-time-password created by a token generator. With MFA in place, attackers are required to collect all the pieces of evidence to hijack a user's identity, which is significantly more difficult. In regard to supply chain attacks, MFA protects user accounts on sensitive systems like source code repositories, build systems or package repositories.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"By enabling MFA for their user accounts, project maintainers significantly reduce the risk of being impersonated by attackers through, for instance, the reuse of compromised credentials or bruteforce attacks.",Administrator:"System administrators could enforce MFA on their systems, and disable less secure authentication mechanisms.","Downstream User":""}]},{sgId:"SG-018",sgName:"Password Policy",info:[{Description:"The use of strong password policies secures password-based authentication mechanisms, making it harder for an attacker to perform password guessing or password spraying attacks. Strong password policies may include minimum length rules, usage of symbols along with numbers and characters, for example. Finally, password aging would require to periodically update the password. Such policy would prevent reuse of stolen credentials.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!0,"Project Maintainer":"Open Source Project Maintainers could establish a policy with which the credentials to access to the source code or the build infrastructure would be changed periodically in order to prevent the reuse of leaked credentials by external threats.",Administrator:"Administrators could establish policies for the project maintainer's with which the password are aged, so they will be required to change them periodically.","Downstream User":""}]},{sgId:"SG-019",sgName:"Login Protection Mechanism",info:[{Description:"The take-over of maintainer or administrative accounts can be prevented or corrected by login protection mechanisms, e.g.:<ul> <li>Login throttling introduces wait times after a given number of failed login attempts, to slow down bruteforce attacks.</li><li>CAPTCHAs hinder automated tools from performing bruteforce attacks.</li><li>Temporary account locking prevents further damage after an account compromise has been detected.</li></ul>",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"System and service administrators can use different login protection mechanisms against password spraying or bruteforce attacks.","Downstream User":""}]},{sgId:"SG-020",sgName:"Session Timeout",info:[{Description:"Establishing a timeout for existing sessions would allow to prevent session hijacking attempts since the existing session would be closed after a certain period of time, hence the attacker should replicate and succeed the session token stealing multiple times to persist.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"Administrators may prevent session hijacking through the establishment of session timeouts. Then, an attacker that succeeded in stealing a session token would be required to repeat the attack in order to re-hijack the session.","Downstream User":""}]},{sgId:"SG-021",sgName:"Token Protection Mechanisms",info:[{Description:"In addition to securing authentication mechanisms of user frontends, comparable measures should be employed for authentication mechanisms used for automation purposes, e.g. API tokens. Such preventive countermeasures may involve:<ul> <li> Token Encryption: by encrypting a token, an attacker would be required not only to steal the token, but also to decrypt it.</li> <li>Token Rotation: such techniques require the generation of new tokens for every session, which makes session hijacking more difficult for attackers, since he/she would be required to steal the session token every time.</li></ul> In addition, Cyber Threat Intelligence tools can be used to detect the accidental leakage of secrets, e.g. <a href='https://blogs.khulnasoft.com/2020/06/23/credential-digger-using-machine-learning-to-identify-hardcoded-credentials-in-github/' target='_blank'>Credential Digger</a> or <a href='https://docs.github.com/en/code-security/secret-scanning/about-secret-scanning' target='_blank'>GitHub Secret Scanning</a>.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"Administrators may prevent session hijackings or the reuse of leaked API tokens through the encryption of session token, such as an attacker able to steal the encrypted token, would be required to decrypt it before using it. In the same fashion, Package Repositories may prevent session hijackings and persistency into a session by rotating the session tokens at every new session.","Downstream User":""}]},{sgId:"SG-022",sgName:"User Account Management",info:[{Description:"User Account Management consists in processes or criteria that allows organizations to control user accesses and to define access control lists, user lists and related privileges (i.e., roles) to protect against unauthorized accesses to resources and data. Thus, the management of user account requires the definition and the implementation of roles and responsibilities for each member of a project/organization, as well as its regular maintenance (e.g., removal of members)",Directive:!1,Preventive:!0,Detective:!1,Corrective:!0,"Project Maintainer":"Open Source Project Maintainer may design the collaboration for a project, by defining the roles for each contributor, hence the definition of the related privileges to each user account.",Administrator:"Administrators may design the management of the services they provide (VCS, build or package distribution), by defining the roles for each user, hence the definition of the related privileges to each user account.","Downstream User":""}]},{sgId:"SG-023",sgName:"Audit",info:[{Description:"An IT Security Audit is a process by which an organization is complying with a set of external legal standards or guidelines (e.g., <a href='https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf' target='_blank'>NIST SP 800-53r5</a>. Hence, an audit compare the actual conditions with guidelines and involves an external check by a professional (i.e., the auditor). For example, an audit would check what kind of access rights management there is in place, what anti-malware software is used, which procedures are defined to respond to security incidents etc. Thus, while a security assessment could be an internal procedure that identifies the security weaknesses of a software or an infrastructure, a security audit aims to perform security compliance checks and risk assessments.",Directive:!0,Preventive:!1,Detective:!0,Corrective:!1,"Project Maintainer":"Project Maintainer may require or perform an audit to verify the compliance to security best practices and security standards within their organization. Hence, they would assess the actual risks related to security incidents.",Administrator:"System administrators may require or perform an audit to verify the compliance to security best practices and security standards within their organization. Hence, they would assess the actual risks related to security incidents.","Downstream User":""}]},{sgId:"SG-024",sgName:"Security Assessment",info:[{Description:"Security assessment is an incident prevention process that consists in identifying and remediating vulnerabilities before they could be exploited. This allows to reduce the risk of system compromises and to lose confidentiality, integrity or availability. Security assessments may target different layers and related testings: human security testings, physical security testing, data networks security testing etc.Thus, applied to the Open-Source supply chain attacks scenario, the scope of a security assessment could check the security posture with respect to all the attack vectors, in order to understand the adequacy and effectiveness of controls put in place.",Directive:!1,Preventive:!1,Detective:!0,Corrective:!1,"Project Maintainer":"By performing a security assessment, project maintainers could identify and possibly remediate the actual weaknesses in their project, systems or infrastructure.",Administrator:"By performing a security assessment, administrators could identify and possibly remediate the actual weaknesses in their project, systems or infrastructure.","Downstream User":""}]},{sgId:"SG-025",sgName:"Vulnerability Assessment",info:[{Description:"Vulnerability assessment consists of a systematic examination of an information system or product to determine the security posture. Hence the process of a vulnerability assessment would produce the evaluation of the adequacy of security measures and their effectiveness",Directive:!1,Preventive:!1,Detective:!0,Corrective:!1,"Project Maintainer":"By performing a vulnerability assessment, project maintainers may highlight the actual vulnerabilities available in their projects or infrastructure (without the actual knowledge of their exploitability). Hence they would be allowed to remediate to such weaknesses.",Administrator:"By performing a vulnerability assessment, administrators may highlight the actual vulnerabilities available in infrastructure (without the actual knowledge of their exploitability). Hence they would be allowed to remediate to such weaknesses.","Downstream User":""}]},{sgId:"SG-026",sgName:"Penetration Testing",info:[{Description:"Penetration testing is a test methodology in which the assessors, working under specific contraints, attempt to circumvent or defeat the security features of a system, software or network in order to highlight their deficiencies and identify the potential security weaknesses.Thus, applied to the Open-Source supply chain attacks scenario, the scope of a penetration test could require to check the security posture with respect to all the attack vectors, in order to understand the adequacy and effectiveness of controls put in place. In fact, performing a penetration test related to Open-Source supply chain attacks could require to perform also social engineering attacks, verify if developers may be subjected to name confusion attacks or would use trojan-horsed packages etc.",Directive:!1,Preventive:!1,Detective:!0,Corrective:!1,"Project Maintainer":"Open-source project maintainers may perform penetration tests on their projects or systems in order to identify 0-day exploits before the attackers could actually exploit them. Hence they could fix such security weaknesses.",Administrator:"Administrators may perform penetration tests on their systems in order to identify 0-day exploits before the attackers could actually exploit them. Hence they could fix such security weaknesses.","Downstream User":""}]},{sgId:"SG-027",sgName:"Antivirus/Antimalware",info:[{Description:"An antivirus/antimalware tool is a software that detect malicious software using signatures or heuristics. The application of such tools, in the scope of Open-Source supply chain attacks could have a broader application, since they could involve the scan of binaries contained in packages.",Directive:!1,Preventive:!1,Detective:!0,Corrective:!1,"Project Maintainer":"Open Source Project Maintainers may use antivirus/anti-malware programs in order to detect the presence of malwares in  their systems or within their infrastructure. Thus they would prevent infections and possible injections of malicious code within the source code or packages.",Administrator:"System administrators may use antivirus/anti-malware programs in order to detect the presence of malwares in the packages uploaded by the maintainers, in their systems or within the infrastructure.","Downstream User":"Open-Source Consumers may employ antivirus/antimalware programs to possibly detect the download of malicious open source components."}]},{sgId:"SG-028",sgName:"Scoped Packages",info:[{Description:"Some package managers (e.g., npm and Yarn) allows organizations to define a scope for packages. Scopes allows to group packages below a specific name. Hence, users or organizations can define their own scope name, and only they can add packages under such scope. Thus, a malicious user would not be allowed to publish a package with the same name of a scoped package.Depending on the specific ecosystem, the implementation of scoping (and the related best-practices) may be different. For example, in Java ecosystems, especially for Maven, it is possible to define DNS based group-id's, hence a best practice would be to migrate group IDs to domain-base names. Conversely, in .NET ecosystems, package owners can reserve and protect their identity by reserving ID prefixes in public galleries. Thus, packages under a registered ID prefix can be uploaded only by approved accounts, protecting from dependency confusion attacks.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"By specifying scopes for their packages, Project Maintainers would ensures that the packages below such scope would come frome their organization, preventing attackers by declaring packages with identical names.",Administrator:"Administrators of package repositories may enabline scoping features for package names, so users may specify the package name along with their scope.","Downstream User":""}]},{sgId:"SG-029",sgName:"Version Pinning",info:[{Description:'Version pinning consists of specifying precise version identifiers when downloading/installing packages or declaring dependencies, rather than using range expressions (e.g., "1.2.3" instead of ">=1.2" or "1.2.*"). While exact version specifications prevent upgrade or downgrade attacks, they cannot prevent a compromised index from serving a malicious package having the same version identifier. In addition, it is worth to mention that the effectiveness of pinning the version of a package, relating to the updating process of dependencies, should not be automated, in the sense that it should always involve conscious decisions and clear understanding that no malicious code could be introduced via an update.',Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"","Downstream User":"Open-Source Consumers could prevent injection of vulnerable or malicious code through dependencies in their projects by pinning the versions for their dependencies. Hence, they would specify exact versions for packages, rather than using open ranges."}]},{sgId:"SG-030",sgName:"Dependency Resolution Rules",info:[{Description:"Comparable to firewall rules, establishing resolution rules allows to define the priority with which the package manager will search and choose which package will be installed. Hence, enforcing resolution rules would prevent dependency confusion attacks.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"","Downstream User":"Open Source Consumer may enforce and define resolution rules for the packages, so to have a better management of the retrieval of the packages specified."}]},{sgId:"SG-031",sgName:"Establish Internal Repository Mirrors and reference one private feed, not multiple",info:[{Description:"Most package manager clients will query all package feeds listed in the local configuration without regard for order or priorities. For package managers who do not prioritize feeds, the recommendation is to configure the client to reference a single private feed. This may require pushing public packages to the private feed manually o reconfiguring the private feed to pull them automatically.Configuring the package manager to use only a single source isolates from unexpected public feed changes.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"Open Source Project Maintainer may establish an internal repository for their dependencies or to reference one private feed (and not multiple). In such a way, the would have a better control over their consumed components and prevent attacks that would tamper packages in public hosting systems.",Administrator:"","Downstream User":"Open Source Consumer may establish an internal repository for their dependencies or to reference one private feed (and not multiple). In such a way, the would have a better control over their consumed components and prevent attacks that would tamper packages in public hosting systems."}]},{sgId:"SG-032",sgName:"Isolation of Builds",info:[{Description:"The build service and build jobs should ensure that individual builds run in an isolated environment such that one build can neither influence the build service as a whole nor other builds of the same or other development projects. In particular, this concerns access to shared resources like download caches.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"Open source project maintainers should design build jobs or pipelines such that each build is isolated from other ones.",Administrator:"Administrators of build services or systems should isolate the build environments of different development projects such that the builds of one project cannot influence the builds of other projects or the build service as a whole.","Downstream User":""}]},{sgId:"SG-033",sgName:"Ephemeral Build Environment",info:[{Description:"Use a clean build system, that is build jobs should not run on systems that have already executed other build jobs. This may be achieved by containerizing and constraining the builds. In fact, build jobs could be run in isolated environment (e.g., VMs or containers) in order to prevent the possibility to tamper other build jobs, so possibly injecting malicious code in other build instances. In addition, running build jobs in virtual environments would prevent that malicious run could infect the build system. In addition, by disabling caching for build jobs would prevent that malwares designed to use the cache as carrier of the infection could affect the build jobs, hence possibly infect the built component.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"Open Source Project Maintainer may avoid recurrence of infections due to an infected build environment by destroying and re-creating a new instance of it at every build process.",Administrator:"","Downstream User":""}]},{sgId:"SG-034",sgName:"Minimal Set of Trusted Build Dependencies in Release Jobs",info:[{Description:"Those build jobs or pipeline stages, which produce the artifact that will eventually be distributed to downstream users, can be configured to only rely on a minimal set of trusted build dependencies. Tools and plugins related to functional tests, quality assurance, vulnerability detection, documentation etc. can be run separately in order to avoid malicious tampering with the build artifact.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"Open-Source Project Maintainer may configure their build jobs and pipelines such that a minimal set of trusted dependencies is used for the creation of the final artifact.",Administrator:"","Downstream User":""}]},{sgId:"SG-035",sgName:"Configure build jobs through code",info:[{Description:"The definition and the configuration of build jobs is contained in files (e.g., YAML files), that are consequently stored in VCS along with the source code.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"Open Source Project Maintainer may define and configure the build jobs through code and store such files in source control.",Administrator:"","Downstream User":""}]},{sgId:"SG-036",sgName:"Integrate Open Source Vulnerability scanners into CI/CD pipelines",info:[{Description:"Open-source components affected by supply chain attacks are sometimes reflected in the databases underlying open-source vulnerability scanners. In such cases, vulnerability scanners can detect whether a given application or project depends on a malicious package (on top of detecting the use of components with known vulnerabilities), e.g., when running CI/CD pipelines.",Directive:!1,Preventive:!1,Detective:!0,Corrective:!1,"Project Maintainer":"",Administrator:"","Downstream User":"Open-source consumers may design or configure their build pipeline to integrate a vulnerability scanner that checks whether a development project depends on vulnerable or malicious open-source components."}]},{sgId:"SG-037",sgName:"Reproducible builds",info:[{Description:"Making a build reproducible allows to verify that no vulnerabilities or malicious code has been introduced during the build process. Identical results for every build of a given source allow multiple parties to come to a consensus and to highlight any deviations from the expected build result. Reproducible builds firstly require a deterministic build system. Secondly, the build environment should either be recorded or pre-defined. Finally, users will be given a way to recreate such build environment, perform the build process and so validate that the output matches the intended one.",Directive:!1,Preventive:!1,Detective:!0,Corrective:!0,"Project Maintainer":"Open Source Project Maintainer could design their build process reproducible, so that the downstream users could replicate the build steps to obtain the exact replica of what they have downloaded and ensures that no tampering has occurred.",Administrator:"Package Repositories may follow the build guidelines defined for specific packages in order to offer to downstream users (i.e., Open-Source consumers), packages that can be verified to have followed such procedures. Thus, this would provide more guarantee of transparency for further inspections.","Downstream User":"Open Source Consumer could benefit from reproducible builds since they would be allowed to replicate the build steps and  verify that the integrity of the open source component has been preserved during the build."}]},{sgId:"SG-038",sgName:"Preventive squatting",info:[{Description:'Package names that ressemble legitimate ones can be proactively registered by benign parties before they can be squatted by attackers. This technique can be applied by package repositories (e.g. npm package "epress"), project maintainers (e.g., PyPI package "bs4") or other parties. However, since the number of candidate package names can be very large, it seems impossible to preventively register all of them.',Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"Open Source Project Maintainers could register names for their packages to prevent malicious users from creating name confusion attacks.",Administrator:"Package Repositories may implement preventive squatting features for the submitted packages from the package mantainers.","Downstream User":""}]},{sgId:"SG-039",sgName:"Establish vetting process for open-source components",info:[{Description:"Maintaining an internal mirror allows an organization to properly manage which component should be used and which not. Most importantly, maintaining an internal mirror allows to vet the selected components, in order to refuse malicious packages, once detected and filtered out. In fact, by vetting the components before including them, would ensure that all packages would be safe to be used, preventing to install components that could have been modified by a malicious user in the public hosting systems.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"Administrators may enforce the protection against the uploading of infected packages by vetting the submitted packages from the package maintainers.","Downstream User":"Open Source consumers may establish an internal mirror of vetted components for their dependencies, so as to prevent that infected packages would be consumed and so possibly affect the released component."}]},{sgId:"SG-040",sgName:"Use encrypted communication protocols",info:[{Description:"Unencrypted communication protocols allow eavesdroppers to intercept, analyse and modify the communication between two parties (Man-In-The-Middle attacks). In the specific case of supply chain attacks, an attacker may interfere during the download of packages by open-source consumers from internal or public package repositories in order to supply a malicious version of the requested package.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"Administrators of package distribution infrastructure, e.g. package repositories, should adopt encrypted communication protocols to prevent malicious users from conducting MITM attacks.","Downstream User":"Open Source Consumers may refuse to download open source components through unencrypted communication channels in order to prevent MITM attacks."}]},{sgId:"SG-041",sgName:"DNSSEC",info:[{Description:"The Domain Name System Security Extensions extend the traditional DNS protocol, by providing cryptographic authentication of data and data integrity. In fact, when a user needs to access a resource, he would typically rely on DNS infrastructures to locate it. Traditional DNSes may be subject to DNS Cache Poisoning attacks, where an attacker manipulate DNS responses in order to infect the DNS cache, so as to serve malicious responses to the requesters. DNSSEC protects from DNS Cache Poisoning attacks by digitally signing the DNS responses, so an attacker would not be able to craft malicious responses without having the rights to digitally sign on behalf of his/her targets.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"Administrators may configure to use DNSSEC for their infrastructure, so to digitally sign or verify the signatures of DNS responses and prevent DNS Cache Poisoning attack.","Downstream User":"Open-Source Consumers may verify that the DNS responses have been correctly signed and come from a trusted source."}]},{sgId:"SG-042",sgName:"Use of Dedicated Build Service",info:[{Description:"Build processes should run in dedicated (and hardened) environments, e.g., a dedicated server or VM in a cloud environment, and not on developers' workstations. In this way the compromise of a developer's machine does not affect the build process and the resulting artifacts.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"Open-Source Project Maintainers may avoid issues related to tampering with build environments by using a dedicated (and hardened) environment for the build service, rather than their workstation.",Administrator:"","Downstream User":""}]},{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes",info:[{Description:"Developers can verify the integrity of their direct and transitive dependencies by specifying and checking cryptographic hashes, e.g. SHA-256 or SHA-512 digests. This supports detecting a later compromise of those packages in, e.g., local build system caches, internal repository mirrors or even public package repositories.",Directive:!1,Preventive:!0,Detective:!1,Corrective:!1,"Project Maintainer":"",Administrator:"","Downstream User":"Open-Source Consumers can verify the cryptographic hashes of the consumed packages (and its dependencies) to check their integrity."}]}]},32:function(e){e.exports=[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack",info:[{Description:"The attack tree focuses on open-source based software development practices, which involve the consumption of numerous open-source components throughout the entire development lifecycle, spanning from IDE plugins, test frameworks and build tools to runtime dependencies. In this context, the attacker's top-level goal is to place malicious code in open-source artifacts such that it is executed in the context of downstream projects, e.g., during its development or runtime. Such malware can exfiltrate data, represent or open a backdoor, as well as download and execute second-stage payload. Targeted assets can belong both to developers of downstream software projects, or their end-users, depending on the attacker's specific intention. However, the focus of this taxonomy is not on what malicious code does, but how attackers place it in upstream projects. Attackers can target any kind of project (e.g. libraries or word processors), direct or indirect downstream consumers, as many as possible, or very specific ones. The latter is possible by conditioning the execution of malicious code, e.g. on the lifecycle phase (install, test, etc.), application state, operating system, or properties of the downstream component it has been integrated into. Note that infections are not limited to adding malicious executable program code, but can also comprise insecure defaults, the re-introduction of previsously fixed vulnerabilities, the removal of authorization checks, the introduction of new dependencies (on attacker-controlled packages), tests, etc.",Impact:"Conduct a Software Supply Chain attack","Mapped Safeguard":[{sgId:"SG-001"},{sgId:"SG-002"},{sgId:"SG-003"},{sgId:"SG-005"},{sgId:"SG-006"},{sgId:"SG-010"},{sgId:"SG-013"},{sgId:"SG-014"},{sgId:"SG-023"},{sgId:"SG-024"},{sgId:"SG-025"},{sgId:"SG-026"},{sgId:"SG-036"},{sgId:"SG-039"}]}]},{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch",info:[{Description:"This attack vector covers the creation of a new, seemingly legitimate and useful open-source project with the intention to use it for spreading malicious code, either from the beginning or at a later point in time. Besides creating the project and developing useful functionality, the attacker is required to advertise the project in order to attract victims.",Impact:"Inject Malicious Code in a component of the software supply chain, hiding the malicious code in a dependency of a seemingly harmless package","Mapped Safeguard":[]}]},{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package",info:[{Description:"The general idea behind name confusion is that attackers craft new component names that resemble names of legitimate open-source or system components, suggest trustworthy authors or play with common naming patterns in different languages or ecosystems. Malicious components with such names are then deployed on source code or package repositories waiting to be downloaded by victim users or developers. Since the package name does not yet exist in the respective repository, the deployment can be done very easily, without interferring with any legitimate packages, including the one(s) that inspired the new name. Child nodes of this attack vector relate to sub-techniques applying different modifications to the legitimate project name.",Impact:"Inject Malicious Code in a component of the software supply chain","Mapped Safeguard":[{sgId:"SG-007"},{sgId:"SG-011"},{sgId:"SG-012"},{sgId:"SG-038"}]}]},{avId:"AV-201",avName:"Combosquatting",info:[{Description:'Combosquatting consists of creating a package name containing pre or post-fix additions to the name of a benign package. The attacker can use naming patterns that are common to general development practices (e.g., the addition of "-dev" or "-rc"), given ecosystems (e.g., the addition of "3" to suggest compatibility with Python 3) or indicate platform compatibility (e.g. "i386").',Impact:"Create name confusion, resulting in the installation of a malicious package","Mapped Safeguard":[]}]},{avId:"AV-202",avName:"Altering Word Order",info:[{Description:'If the name of legitimate packages comprises multiple words, e.g. separated by hyphens or using camel case notation, this technique consists of re-arranging those words in a different order (for example "test-vision-client" instead of "test-client-vision")',Impact:"Create name confusion, resulting in the installation of a malicious package","Mapped Safeguard":[]}]},{avId:"AV-203",avName:"Manipulating Word Separators",info:[{Description:'This technique consists of adding or altering word separators of legitimate packages, e.g. hyphens or underscores (for example "setup-tools" instead of "setuptools").',Impact:"Create name confusion, resulting in the installation of a malicious package","Mapped Safeguard":[]}]},{avId:"AV-204",avName:"Typosquatting",info:[{Description:"Typosquatting is a technique originally known in the context of Website domains, and relies on mistakes such as typographical errors made by users when entering a website address into a web browser. In this context, the attacker exploits that users mistype names of legitimate packages during installation or when declaring dependencies.",Impact:"Create name confusion, resulting in the installation of a malicious package","Mapped Safeguard":[]}]},{avId:"AV-205",avName:"Built-in Package",info:[{Description:'By creating a package whose name is identical to a built-in package (or module, class, function, etc.) of the respective programming language or ecosystem (for example "subprocess" for Python), a victim can be tricked into downloading and installing the malicious package through the package manager rather than using built-in functionality.',Impact:"Create name confusion, resulting in the installation of a malicious package","Mapped Safeguard":[]}]},{avId:"AV-206",avName:"Brandjacking",info:[{Description:'This technique consists of crafting package names that create the impression of coming from a trustworthy author or entity, e.g. by using the same prefix as legitimate packages from such author (e.g. "aws-").',Impact:"Create name confusion, resulting in the installation of a malicious package","Mapped Safeguard":[]}]},{avId:"AV-207",avName:"Similarity Attack",info:[{Description:"This technique covers misleading or similar names that do not fall in any other category of name confusion attacks.",Impact:"Create name confusion, resulting in the installation of a malicious package","Mapped Safeguard":[]}]},{avId:"AV-208",avName:"Omitting Scope or Namespace",info:[{Description:"This technique consists of taking the name of a package with scope (or namespace) and publishing it without the scope.",Impact:"Create name confusion, resulting in the installation of a malicious package","Mapped Safeguard":[]}]},{avId:"AV-209",avName:"AI Package Hallucination",info:[{Description:"Generative AI platforms, such as ChatGPT, have the capability to generate responses and recommendations based on the patterns and information learned during training. While these platforms provide valuable assistance, it's important to note that the responses generated may not always align with reality and can include elements that do not exist. <br>In the context of coding tasks, developers may seek recommendations for packages that can solve their specific needs. However, the generative AI model might suggest packages that are not actually present in legitimate package repositories like NPM or PyPI. This creates an opportunity for attackers to exploit the platform by crafting questions that prompt the AI to generate non-existent package names. <br>The intention of such an attack would be to deceive developers who rely on the generative AI's recommendations. The attackers could then publish malicious packages under these fabricated names, leading unsuspecting developers into using them. ",Impact:"Create name confusion, resulting in the installation of a malicious package","Mapped Safeguard":[]}]},{avId:"AV-001",avName:"Subvert Legitimate Package",info:[{Description:'This attack vector covers all attacks aiming to corrupt an existing, legitimate project, which requires compromising one or more of its numerous stakeholders or resources, e.g. its source code repository, build system or distribution infrastructure. <br>The three attack vectors "Inject into Sources of Legitimate Package", "Inject during the Build of Legitimate Package" and "Distribute Malicious Version of Legitimate Package" have in common that most of them tamper with resources of an existing, legitimate open-source project, i.e., its source code, build system or distribution channels. Developing and advertising a distinct malicious package from scratch, as well as creating name confusion with the one of a legitimate package, on the other hand, do not require to directly interfere with existing project resources or maintainers, but only require to trick the victim into the consumption of the malicious package.',Impact:"Execute Unauthorized Code","Mapped Safeguard":[{sgId:"SG-009"},{sgId:"SG-029"}]}]},{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package",info:[{Description:"This attack vector aims at injecting malicious code into the versioning control system of a legitimate project. Consequently, every user or system building the software from the sources will be affected by the attack, and - as far as this is the attackers intention - produce a binary package including the malicious code. Of course, this also comprises the project's standard build system producing the binary that will be distributed through the project's standard distribution mechanism, e.g., package repositories like Maven Central or npm. In other words, for the attacker, this technique has the advantage that all downstream users are affected, no matter whether they consume sources or pre-built binary artifacts. On the other hand, being part of the project's code base makes it easier to spot malicious code, e.g. through code reviews.",Impact:"Execute Unauthorized Code","Mapped Safeguard":[{sgId:"SG-004"}]}]},{avId:"AV-301",avName:"Introduce Malicious Code through Hypocrite Merge Request",info:[{Description:"Attackers can pretend to make a useful, seemingly benign contribution to a project while in fact submitting malicious code. For example, the contribution can pretend to introduce new functionality, test cases, CI/CD automation or documentation. Contributions for some of those topics may be reviewed with less scrutiny by legitimate project maintainers, which may be exploited by attackers. The malicious code itself can expose malicious behavior (e.g., a dropper) or be a deliberate vulnerability, which can be exploited at later stages. It can be included in project code or hidden in newly introduced dependencies.",Impact:"Acceptance of malicious code from package maintainer","Mapped Safeguard":[{sgId:"SG-015"},{sgId:"SG-016"}]}]},{avId:"AV-302",avName:"Contribute as Maintainer",info:[{Description:"The attacker obtains the permissions of a legitimate project maintainer to commit and push malicious code to the code base of the targeted project, directly or through pull/merge requests, depending on the project's development practice. The child nodes of this technique differ in regards to how those permissions are obtained.",Impact:"Injection of malicious code into a legitimate software component","Mapped Safeguard":[{sgId:"SG-015"},{sgId:"SG-016"},{sgId:"SG-022"}]}]},{avId:"AV-303",avName:"Tamper with Version Control System",info:[{Description:"Open-source based software development relies on multiple systems, many of which are accessible online, e.g., source code repositories or build systems. Those systems can be subject to vulnerabilities, require secure configuration settings and come with privileged administrator accounts. In this specific case, the modification of a legitimate package, plugin or configuration file to include something malicious could be achieved by attacking the version control system on which such files are stored. Though the majority of open-source projects is hosted on GitHub or GitLab cloud services, some projects and open-source foundations still operate their own versioning control system.",Impact:"Modification of source code to include security flaws or malicious code","Mapped Safeguard":[]}]},{avId:"AV-304",avName:"Make Immature Vulnerability Exploitable",info:[{Description:"A vulnerability could be introduced in a project through a small patch to fix a minor issue, which actually introduces the remaining conditions of a so-called immature vulnerability. This technique requires to analyze the project's code base beforehand to identify those immature vulnerabilities. Presumably, this technique is particularly geared towards creating backdoors in existing project capabilities. On the other hand, the addition of larger code chunks, e.g. to download and run second stage payload, can hardly be achieved using this technique.",Impact:"Acceptance of malicious code from package maintainer","Mapped Safeguard":[]}]},{avId:"AV-305",avName:"Exploit Rendering Weakness",info:[{Description:"This technique exploits rendering weaknesses of user interfaces to hide malicious code such that it can hardly be spotted (if at all) during manual code or merge request reviews. Possible techniques include the misuse of Unicode's Bidi Algorithm or the manual tampering with large files that are typically created in some automated fashion.",Impact:"Acceptance of malicious code from package maintainer","Mapped Safeguard":[]}]},{avId:"AV-306",avName:"Exploit Unicode Bidirectional Algorithm",info:[{Description:"The Unicode Bidirectional algorithm (a.k.a. Bidi) supports left-to-right and right-to-left text encodings. In particular, Bidi uses override control characters, which are invisible characters that enable switching the display ordering of groups of characters (e.g. U+202A is the Left-to-Right Embedding, U+202B is the Right-to-Left Embedding). An attacker may inject Unicode Bidi override characters into comments or strings to produce syntactically - valid source codes, but that hide semantically different codes(and potentially malicious).Possible expoits may perform early - returns, commenting - out or stretched strings (i.e. text that appears to be outside a string literal but that it is actually located within it).",Impact:"Acceptance of malicious code from package maintainer","Mapped Safeguard":[]}]},{avId:"AV-307",avName:"Use Homoglyphs",info:[{Description:"Homoglyphs are characters that looks similar (if not the same), but are encoded and processed differently. An example is the Latin 'H' and the Cyrillic 'En' (i.e. \u041d). An attacker may define a malicious version of a function with apparently the same name - but exploiting homoglyphs - such that it will be invoked by the disguised user.",Impact:"Acceptance of malicious code from package maintainer","Mapped Safeguard":[]}]},{avId:"AV-308",avName:"Prevent Display of File Differences",info:[{Description:"The attacker opens a pull request containing the malicious code for the targeted project, hoping that legitimate project maintainers will not notice it during the review and approval workflow. To increase chances that the malicious pull/merge request gets approved and merged into the project's code base, the attacker can build some trust beforehand, e.g., by submitting some benign contribution, or use techniques to hide or surpress the display of the malicious code in the approval workflow (a.k.a. pull request sneaking). In this particular case, the attacker may use special characters (e.g., the null character), such that the text editor will interprete them and the file difference will not be displayed.",Impact:"Acceptance of malicious code from package maintainer","Mapped Safeguard":[{sgId:"SG-015"},{sgId:"SG-016"}]}]},{avId:"AV-309",avName:"Hide in Generated/Compiled/Minified Code",info:[{Description:"The attacker opens a pull/merge request containing the malicious code for the targeted project, hoping that legitimate project maintainers will not notice it during the review and approval workflow. To increase chances that the malicious PR gets approved and merged into the project's code base, the attacker can build some trust beforehand, e.g. by submitting benign contributions, or use techniques to hide or surpress the display of the malicious code in the approval workflow (a.k.a. pull request sneaking). In this particular case, the attacker may inject malicious code in generated/compiled/minified code, such that it would be hard to detect by the human code reviewer.",Impact:"Acceptance of malicious code from package maintainer","Mapped Safeguard":[]}]},{avId:"AV-400",avName:"Inject During the Build of Legitimate Package",info:[{Description:'Downstream users of open-source projects typically consume pre-built components, which are created on build systems and distributed through package repositories like npm.<br><br>The injection of malicious code can happen during the build process. In contrast to injecting the malicious code into the project\'s code base, "only" the results of such compromised builds are affected, thus, open-source users building from source are safe. However, depending on the programming language used, e.g. compiled vs. interpreted, malicious code added during the build is more difficult to detect.',Impact:"Introduction of vulnerabilities or malicious components in a software product","Mapped Safeguard":[{sgId:"SG-008"},{sgId:"SG-032"},{sgId:"SG-033"},{sgId:"SG-034"},{sgId:"SG-035"},{sgId:"SG-037"},{sgId:"SG-043"}]}]},{avId:"AV-401",avName:"Run Malicious Build",info:[{Description:"If build systems share resources between build jobs of different projects, e.g. plugins, configurations or caches, attackers can run a malicious build job to compromise such shared resources. Other projects will be affected once they consume the compromised shared resources.",Impact:"Introduction of vulnerabilities or malicious components in a software product","Mapped Safeguard":[]}]},{avId:"AV-402",avName:"Tamper Build Job as Maintainer",info:[{Description:"Build jobs consume project sources to produce binary artifacts that can be readily used or deployed. Ideally, build jobs are defined in the source code repository itself, but they can also be read from other sources or be manually created using Web interfaces of build systems like Jenkins. In the latter cases, attackers can impersonate the maintainer in order to change the build job definition such that malicous code is injected into the final software product.",Impact:"Introduction of vulnerabilities or malicious components in a software product","Mapped Safeguard":[{sgId:"SG-022"}]}]},{avId:"AV-403",avName:"Tamper with Exposed Build System",info:[{Description:"Build systems producing ready-made versions of open-source projects, and which are distributed through package repositories like npm, are often accessible online, and sometimes discoverable through services like Shodan. As for every other exposed system, attackers may exploit weak configurations and vulnerabilities or comprise administrators accounts. This way, attackers may tamper with resources used during the build jobs of projects using the respective system in order to inject malicious code into the binaries deployed to package repositories.",Impact:"Introduction of security flaws or malicious component in software product.","Mapped Safeguard":[]}]},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package",info:[{Description:"Many open-source consumers do not build open-source components from the respective sources. Instead, they consume pre-built artifacts made available through package repositories like npm or PyPI. In addition to the official hosting channel, typically, those artifacts are mirrored in remote and local repositories or made available through CDNs, e.g., in case of JavaScript libraries loaded at Web page startup. Finally, another example of distribution channel through which such artifacts can be delivered are proxies.<br><br>The goal of this technique is to tamper with the distribution channels such that open-source consumers download compromised, malicious versions of legitimate packages.",Impact:"Infection through legitimate software distribution channels ","Mapped Safeguard":[{sgId:"SG-007"},{sgId:"SG-008"},{sgId:"SG-037"},{sgId:"SG-043"}]}]},{avId:"AV-501",avName:"Dangling Reference",info:[{Description:"When an existing package is retired and removed by its maintainer, attackers can create a malicious package having the identical name. A dangling reference to the retired package will then be resolved to the malicious, revived package.",Impact:"Execute Unauthorized Code","Mapped Safeguard":[{sgId:"SG-030"},{sgId:"SG-031"}]}]},{avId:"AV-502",avName:"Mask Legitimate Package",info:[{Description:"Packages like any other resource on the network, are identified by means of URLs. These URLs can be managed automatically by means of package managers or be present in web pages to allow downstream users to download the aforementioned packages. The user request to download a particular package, therefore involves the resolution of the path from which to obtain such component. Any manipulation of this mechanism can lead to the masking of a legitimate package in favor of a different (and potentially infected) version. Thus, MITM attacks, DNS Cache Poisoning, tampering the legitimate URL or abusing the dependency resolution mechanisms can result in the installation of malicious versions of packages.",Impact:"Installation of malicious package","Mapped Safeguard":[{sgId:"SG-031"}]}]},{avId:"AV-503",avName:"Prevent Update to Non-Vulnerable Version",info:[{Description:"This technique is about the abuse of update systems by an attacker, so that he/she is able to manipulate metadata preventing the update to non-vulnerable versions of software components. Such goal can be achieved, for example, by replaying correctly signed old metadata or by forging metadata to indicate an unsatisfiable dependency for newer versions of packages.<br><br>Preventing a user from updating to non-vulnerable version of software component, an attacker would be exposing downstream users to the exploitation of known vulnerabilities.",Impact:"Exposure to known vulnerability","Mapped Safeguard":[]}]},{avId:"AV-504",avName:"Distribute as Package Maintainer",info:[{Description:"This vector covers the use of a project's typical deployment workflows, processes or APIs to upload new malicious versions of existing open-source packages to the project's standard distribution channel, e.g. Administrator.",Impact:"Installation of malicious package","Mapped Safeguard":[{sgId:"SG-022"},{sgId:"SG-031"}]}]},{avId:"AV-505",avName:"Inject into Hosting System",info:[{Description:"This vector reflects the goal to manipulate existing package versions hosted on distribution sites (e.g., package repositories, public and internal mirrors, proxies, project websites, CDN). Thereby he/she bypasses the standard deployment processes, but manipulates existing binaries stored in databases or filesystems.",Impact:"Infection through legitimate software distribution channels ","Mapped Safeguard":[{sgId:"SG-031"}]}]},{avId:"AV-506",avName:"MITM",info:[{Description:"In a Man-In-The-Middle attack, an attacker is able to eavesdrop on the communication between two legitimately communicating entities. Hence he/she is able to intercept the traffic between the two counterparties and possibly manipulate it. In the specific case of software supply chain attacks, it can happen that the communication between the downstream users and the hosting system is not encrypted. This opens up the possibility for an attacker to manipulate the unencrypted traffic using proxies, hence to maliciously modify the packages downloaded from the legitimate hosting system.",Impact:"Infection of legitimate packages during the communication with legitimate hosting systems.","Mapped Safeguard":[]}]},{avId:"AV-507",avName:"DNS Cache Poisoning",info:[{Description:"The purpose of Domain Name Servers (DNS) is to translate a domain name into an IP address to ease users when contacting an online resource and such mappings may be cached. An attacker may be able to exploit the caching mechanism (e.g., Kaminsky Attack) to modify the DNS cache to cause certain names to resolve to incorrect addresses, managed by the attackers. Hence, an adversary may be able to deviate the legitimate path to a valid package into an infected one. ",Impact:"Redirection of the user to a malicious source of infected packages","Mapped Safeguard":[]}]},{avId:"AV-508",avName:"Tamper Legitimate URL",info:[{Description:"When a user or a software component (e.g. package manager) wishes to download a package, it will be identified by means of a URL. Any modification of the URLs of legitimate packages into a hosting system (rather than tampering with the communication or abusing the domain name resolution) would allow an adversary to identify a different (and potentially malicious) version than the legitimate and expected one by the user.",Impact:"Redirection of the user to a malicious source of infected packages","Mapped Safeguard":[{sgId:"SG-030"}]}]},{avId:"AV-509",avName:"Abuse Dependency Resolution Mechanism",info:[{Description:'Most package managers implement a dependency resolution strategy, which decides which package version has to be downloaded, where to download from and the order of precedence when contacting multiple repositories. The specific implementation of such resolution mechanism and its configuration determines about the number and order of repositories to be queried, hence the use of mirrors. For instance, it can happen that packages in public repositories take precendence over internal, proprietary packages in internal repositories. This latter is also known as "dependency confusion".  In other words, the internal package is "masked" by the public one. As another example, it can happen that a public repository not provisioned by the legitimate project maintainers takes precedence.<br><br>Generally speaking, every abuse of the dependency resolution strategy would result in the installation of a package version that could not match the intended one, but the one deployed in an alternative repository or mirror.',Impact:"Installation of malicious package","Mapped Safeguard":[{sgId:"SG-030"}]}]},{avId:"AV-600",avName:"Compromise User (Project Maintainer/Administrator)",info:[{Description:"A malicious actor may impersonate a valid account of a package maintainer, of a build system or hosting system administrator and so on, to inject malicious code and eventually conduct a supply chain attack. An attacker that is able to impersonate a legitimate user, would be able to bypass access controls on sensitive resources.",Impact:"Unauthorized access and/or modification of sensitive information and/or protected resources.","Mapped Safeguard":[{sgId:"SG-022"}]}]},{avId:"AV-601",avName:"Bribe or Blackmail Legitimate User",info:[{Description:"An attacker may blackmail or corrupt a legitimate user to force him to inject malicious code or include weaknesses.",Impact:"Corruption of legitimate user and disruption of user trust","Mapped Safeguard":[]}]},{avId:"AV-602",avName:"Take-over Legitimate Account",info:[{Description:"By taking over a legitimate account, an attacker is able to impersonate a legitimate user and to conduct malicious operations on behalf of him/her.",Impact:"Unauthorized access and/or modification of sensitive information and/or protected resources.","Mapped Safeguard":[{sgId:"SG-017"},{sgId:"SG-018"},{sgId:"SG-019"},{sgId:"SG-020"},{sgId:"SG-021"}]}]},{avId:"AV-603",avName:"Reuse of Compromised Credentials",info:[{Description:"An attacker can conduct information gathering campaigns using OSINT tools, published compromised credentials after data breaches and so on, to obtain valid credentials for high-profile users (e.g., administrators) .The usage of valid and compromised credentials would allow a malicious user to access source code repositories, build systems, configuration files etc. to eventually inject malicious code.",Impact:"Unauthorized access and/or modification of sensitive information and/or protected resources.","Mapped Safeguard":[]}]},{avId:"AV-604",avName:"Bruteforce",info:[{Description:"Bruteforce is a technique to compromise a user account by trying all the possible combinations of username and password, for example, to eventually find the exact match granting him unauthorized access.",Impact:"Unauthorized access and/or modification of sensitive information and/or protected resources.","Mapped Safeguard":[]}]},{avId:"AV-605",avName:"Reuse of Leaked API Tokens",info:[{Description:"In their strive for build automation, developers sometimes disclose sensitive credentials, e.g., API tokens, in the project's source code repository. Attackers getting hold of such credentials can impersonate the owner, e.g., in order to inject malicious code or sign software artifacts.",Impact:"Unauthorized access and/or modification of sensitive information and/or protected resources.","Mapped Safeguard":[]}]},{avId:"AV-606",avName:"Social Engineering to Obtain Credentials",info:[{Description:"Social engineering (SE) consists of a series of malicious activities accomplished through human interactions and uses psychological manipulation to trick users into making security mistakes or giving away sensitive information. In our particular scope, a SE attack aims at obtaining the credentials of a privileged user, e.g. project maintainer or build system administrator.",Impact:"Unauthorized access and/or modification of sensitive information and/or protected resources.","Mapped Safeguard":[]}]},{avId:"AV-607",avName:"Reuse of Existing Session",info:[{Description:"This technique aims to disrupt the authentication mechanism of a system through session IDs (e.g., tokens, cookies etc.) or piggybacking on existing sessions (e.g. similarly in XSRF). An attacker that is able to hijack such sessions will be able to gain privileges of the targeted user.",Impact:"Session hijacking and Gain of Privileges","Mapped Safeguard":[]}]},{avId:"AV-608",avName:"Resurrect Expired Domain Associated With Legitimate Account",info:[{Description:"Project maintainers may use email addresses for their VCS, build system or distribution platform that have expired domains. Thus, an attacker can buy such domain, log into the targeted system and change the password for that account. In such a way the attacker is able to compromise the project unless two-factor authentication is enabled.",Impact:"Gain of administrative privileges","Mapped Safeguard":[]}]},{avId:"AV-801",avName:"Change Ethos",info:[{Description:"Project maintainers may change their behavior from benign and ethical to malicious and unethical. Possible intrinsic motivations for such changes are to express political beliefs or dissatifaction about stakeholder behavior, e.g., harassment or lack of user support/contributions. In such cases, a formerly benign maintainer turns into the attacker.",Impact:"Benign maintainer turns into attacker","Mapped Safeguard":[]}]},{avId:"AV-700",avName:"Compromise  System",info:[{Description:"By compromising a VCS system, a package hosting system or a build system, an attacker would be able, respectively, to inject malicious source code, a malicious version of a package or to infect a software product during its build process.",Impact:"Unauthorized access to system information or functionality. System compromise.","Mapped Safeguard":[{sgId:"SG-042",scopeAvId:"AV-403"}]}]},{avId:"AV-701",avName:"Exploit Weak Configuration",info:[{Description:"Weaknesses in configuration can happen at any level of the stack: Network services, OS level, web server, database etc. Such misconfigurations can be used by an attacker as an entry point to gain unauthorized access to sensitive resources or, depending on his/her level of privileges, could allow him also to modify resources (e.g., packages hosted in a Administrator).",Impact:"Unauthorized access to system information or functionality. System compromise.","Mapped Safeguard":[]}]},{avId:"AV-702",avName:"Exploit Vulnerabilities",info:[{Description:"When a service is publicly exposed, an attacker may be able to find and exploit (known and unknown) software vulnerabilities to gain access to the host machine, allowing him/her unauthorized access to sensitive resources.",Impact:"Unauthorized access to system information or functionality. System compromise.","Mapped Safeguard":[]}]},{avId:"AV-703",avName:"Infect through Malicious Component",info:[{Description:"Many systems used throughout software development are open-source themselves, e.g., plugins for Jenkins, Maven or Visual Studio Code, or integrate open-source components. A compromised build tool, for instance, can infect any software built using that tool, along the lines of the famous 'Reflections on Trusting Trust' from K. Thompson. The infection of components through the infection of open-source used during development, build and distribution threby corresponds to the recursive application of the attack tree.",Impact:"","Mapped Safeguard":[]}]},{avId:"AV-800",avName:"Become Maintainer",info:[{Description:"An attacker convinces or tricks a legitimate Project Maintainer (using social engineering techniques) to provide him or her aditional permissions, thus, to promote the attacker to a maintainer or even project owner. As a result, the attacker receives (higher) privileges for project-related resources, e.g., the source code repository, the build system or the Administrator. Many open-source projects are anyways short on resources (cf. https://www.codeshelter.co/ or https://jazzband.co), and sometimes the original maintainers simply cannot or do not want to continue project maintenance anymore, both of which makes such projects prone for these social-engineering attacks.",Impact:"Gain of privileges","Mapped Safeguard":[]}]}]},37:function(e){e.exports=[{title:"Backstabber's Knife Collection: A Review of Open Source Software Supply Chain Attacks (DIMVA)",link:"https://link.springer.com/chapter/10.1007/978-3-030-52683-2_2",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"},{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package"},{avId:"AV-400",avName:"Inject During the Build of Legitimate Package"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],tags:{contents:["peer-reviewed"],year:2020}},{title:"ATT&CK T1195.002: Supply Chain Compromise: Compromise Software Supply Chain",link:"https://attack.mitre.org/techniques/T1195/002/",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"},{avId:"AV-703",avName:"Infect through Malicious Component"}],tags:{contents:["standard"],year:2020}},{title:"Typosquatting programming language package managers",link:"https://incolumitas.com/2016/06/08/typosquatting-package-managers/",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"},{avId:"AV-204",avName:"Typosquatting"}],tags:{ecosystems:["Python","JavaScript","Ruby"],contents:["thesis","proof-of-concept"],year:2016},safeguards:[{sgId:"SG-010",sgName:"Prevent Script Execution"}]},{title:"I Know What You Imported Last Summer: A study of security threats in the Python ecosystem",link:"https://arxiv.org/abs/2102.06301",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"},{avId:"AV-202",avName:"Altering Word Order"},{avId:"AV-203",avName:"Manipulating Word Separators"},{avId:"AV-204",avName:"Typosquatting"},{avId:"AV-205",avName:"Built-in Package"},{avId:"AV-206",avName:"Brandjacking"}],tags:{ecosystems:["Python"],contents:[],year:2021}},{title:"Typosquatting and Combosquatting Attacks on the Python Ecosystem (Euro S&P Workshops)",link:"https://ieeexplore.ieee.org/document/9229803/",vectors:[{avId:"AV-201",avName:"Combosquatting"},{avId:"AV-204",avName:"Typosquatting"},{avId:"AV-207",avName:"Similarity Attack"}],tags:{ecosystems:["Python"],contents:["peer-reviewed"],year:2020}},{title:"On the Feasibility of Stealthily Introducing Vulnerabilities in Open-Source Software via Hypocrite Commits",link:"https://github.com/QiushiWu/qiushiwu.github.io/blob/main/papers/OpenSourceInsecurity.pdf",vectors:[{avId:"AV-301",avName:"Introduce Malicious Code through Hypocrite Merge Request"},{avId:"AV-304",avName:"Make Immature Vulnerability Exploitable"}],tags:{ecosystems:["Linux"],contents:["proof-of-concept"],year:2021}},{title:"Trojan Source: Invisible Vulnerabilities",link:"https://arxiv.org/abs/2111.00169",vectors:[{avId:"AV-305",avName:"Exploit Rendering Weakness"},{avId:"AV-306",avName:"Exploit Unicode Bidirectional Algorithm"},{avId:"AV-307",avName:"Use Homoglyphs"}],tags:{ecosystems:["C/C++","C#","Java","JavaScript","Rust","Go","Python"],contents:["proof-of-concept"],year:2021}},{title:"Why npm lockfiles can be a security blindspot for injecting malicious modules",link:"https://snyk.io/blog/why-npm-lockfiles-can-be-a-security-blindspot-for-injecting-malicious-modules/",vectors:[{avId:"AV-305",avName:"Exploit Rendering Weakness"},{avId:"AV-309",avName:"Hide in Generated/Compiled/Minified Code"}],tags:{ecosystems:["JavaScript"],contents:[],year:2019}},{title:"Pull Request Sneaking",link:"https://github.com/mortenson/pr-sneaking",vectors:[{avId:"AV-305",avName:"Exploit Rendering Weakness"},{avId:"AV-308",avName:"Prevent Display of File Differences"},{avId:"AV-309",avName:"Hide in Generated/Compiled/Minified Code"}],tags:{contents:["proof-of-concept"],year:2017}},{title:"Thirty Years Later: Lessons from the Multics Security Evaluation (ACSAC)",link:"https://www.acsac.org/2002/papers/classic-multics.pdf",vectors:[{avId:"AV-400",avName:"Inject During the Build of Legitimate Package"},{avId:"AV-401",avName:"Run Malicious Build"}],tags:{contents:["peer-reviewed"],year:2002}},{title:"Countering Trusting Trust through Diverse Double-Compiling (ACSAC)",link:"https://www.acsac.org/2005/papers/47.pdf",vectors:[{avId:"AV-400",avName:"Inject During the Build of Legitimate Package"},{avId:"AV-401",avName:"Run Malicious Build"}],tags:{contents:["peer-reviewed"],year:2005}},{title:"Attacking the Build through Cross-Build Injection",link:"https://img2.helpnetsecurity.com/dl/articles/fortify_attacking_the_build.pdf",vectors:[{avId:"AV-400",avName:"Inject During the Build of Legitimate Package"}],tags:{ecosystems:["Java"],contents:[],year:2007}},{title:"Security of public continuous integration services (WikiSym)",link:"https://dl.acm.org/doi/10.1145/2491055.2491070",vectors:[{avId:"AV-401",avName:"Run Malicious Build"},{avId:"AV-402",avName:"Tamper Build Job as Maintainer"}],tags:{contents:["peer-reviewed"],year:2013},safeguards:[{sgId:"SG-032",sgName:"Isolation of build steps"},{sgId:"SG-033",sgName:"Ephemeral Build Environment"},{sgId:"SG-034",sgName:"Minimal Set of Trusted Build Dependencies in Release Jobs"}]},{title:"Defending software build pipelines from malicious attack",link:"https://www.ncsc.gov.uk/blog-post/defending-software-build-pipelines-from-malicious-attack",vectors:[{avId:"AV-401",avName:"Run Malicious Build"}],tags:{year:2021}},{title:"Your Jenkins Belongs to Us Now: Abusing Continuous Integration Systems",link:"https://www.crowdstrike.com/blog/your-jenkins-belongs-to-us-now-abusing-continuous-integration-systems",vectors:[{avId:"AV-402",avName:"Tamper Build Job as Maintainer"}],tags:{contents:["proof-of-concept"],year:2018}},{title:"ATT&CK T1190: Exploit Public-Facing Application",link:"https://attack.mitre.org/techniques/T1190/",vectors:[{avId:"AV-403",avName:"Tamper with Exposed Build System"},{avId:"AV-702",avName:"Exploit Vulnerabilities"}],tags:{contents:["standard"],year:2021}},{title:"Software distribution as a malware infection vector (ICITST)",link:"https://ieeexplore.ieee.org/document/5402538",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"}],tags:{contents:["peer-reviewed","proof-of-concept"],year:2009}},{title:"Practical Approach to Automate the Discovery and Eradication of Open-Source Software Vulnerabilities at Scale (Black Hat)",link:"https://www.blackhat.com/us-19/briefings/schedule/#practical-approach-to-automate-the-discovery-and-eradication-of-open-source-software-vulnerabilities-at-scale-16562",vectors:[{avId:"AV-502",avName:"Mask Legitimate Package"},{avId:"AV-509",avName:"Abuse Dependency Resolution Mechanism"}],tags:{contents:["presentation"],year:2019}},{title:"Package management security",link:"https://www2.cs.arizona.edu/people/jsamuel/papers/TR08-02.pdf",vectors:[{avId:"AV-503",avName:"Prevent Update to Non-Vulnerable Version"},{avId:"AV-605",avName:"Reuse of Leaked API Tokens"}],tags:{contents:["vulnerability"],year:2008}},{title:"A Look In the Mirror: Attacks on Package Managers (CCS)",link:"https://dl.acm.org/doi/abs/10.1145/1455770.1455841",vectors:[{avId:"AV-503",avName:"Prevent Update to Non-Vulnerable Version"}],tags:{ecosystems:["Linux"],contents:["peer-reviewed"],year:2008}},{title:"OWASP Top Ten 2017 Category A9: Using Components with Known Vulnerabilities",link:"https://owasp.org/www-project-top-ten/2017/A9_2017-Using_Components_with_Known_Vulnerabilities",vectors:[{avId:"AV-503",avName:"Prevent Update to Non-Vulnerable Version"}],tags:{contents:["standard"],year:2017}},{title:"ATT&CK T1557: Man-in-the-Middle",link:"https://attack.mitre.org/techniques/T1557/",vectors:[{avId:"AV-506",avName:"MITM"}],tags:{contents:["standard"],year:2021}},{title:"CAPEC-142: DNS Cache Poisoning",link:"https://capec.mitre.org/data/definitions/142.html",vectors:[{avId:"AV-507",avName:"DNS Cache Poisoning"}],tags:{contents:["standard"],year:2021}},{title:"CWE-601: URL Redirection to Untrusted Site ('Open Redirect')",link:"https://cwe.mitre.org/data/definitions/601.html",vectors:[{avId:"AV-508",avName:"Tamper Legitimate URL"}],tags:{contents:["standard"],year:2021}},{title:"ATT&CK T1199: Trusted Relationship",link:"https://attack.mitre.org/techniques/T1199/",vectors:[{avId:"AV-601",avName:"Bribe or Blackmail Legitimate User"}],tags:{contents:["standard"],year:2021}},{title:"ATT&CK T1078: Valid Accounts",link:"https://attack.mitre.org/techniques/T1078/",vectors:[{avId:"AV-602",avName:"Take-over Legitimate Account"}],tags:{contents:["standard"],year:2021}},{title:"ATT&CK T1552: Unsecured Credentials",link:"https://attack.mitre.org/techniques/T1552/",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials"}],tags:{contents:["standard"],year:2021}},{title:"ATT&CK T1110: Brute Force",link:"https://attack.mitre.org/techniques/T1110/",vectors:[{avId:"AV-604",avName:"Bruteforce"}],tags:{contents:["standard"],year:2021}},{title:"CAPEC-60: Reusing Session IDs (aka Session Replay)",link:"https://capec.mitre.org/data/definitions/60.html",vectors:[{avId:"AV-607",avName:"Reuse of Existing Session"}],tags:{contents:["standard"],year:2021}},{title:"What are Weak Links in the npm Supply Chain? (ICSE-SEIP)",link:"https://dl.acm.org/doi/abs/10.1145/3510457.3513044",vectors:[{avId:"AV-608",avName:"Resurrect Expired Domain Associated With Legitimate Account"}],tags:{ecosystems:["JavaScript"],contents:["peer-reviewed"],year:2022}},{title:"Package install scripts vulnerability",link:"https://blog.npmjs.org/post/141702881055/package-install-scripts-vulnerability",safeguards:[{sgId:"SG-010",sgName:"Prevent Script Execution"}],tags:{ecosystems:["JavaScript"],year:2016}},{title:"NPM might be executing malicious code in your CI without your knowledge",link:"https://medium.com/cider-sec/npm-might-be-executing-malicious-code-in-your-ci-without-your-knowledge-e5e45bab2fed",safeguards:[{sgId:"SG-010",sgName:"Prevent Script Execution"}],tags:{ecosystems:["JavaScript"],year:2022}},{title:"OWASP Top Ten 2017 Category A6: Security Misconfiguration",link:"https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration",vectors:[{avId:"AV-701",avName:"Exploit Weak Configuration"}],tags:{contents:["standard"],year:2017}},{title:"CWE Category 16: Configuration",link:"https://cwe.mitre.org/data/definitions/16.html",vectors:[{avId:"AV-701",avName:"Exploit Weak Configuration"}],tags:{contents:["standard"],year:2021}},{title:"Deliver Uncompromised: Securing Critical Software Supply Chains (MITRE)",link:"https://www.mitre.org/sites/default/files/publications/pr-21-0278-deliver-uncompromised-securing-critical-software-supply-chains.pdf",safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{year:2021}},{title:"ATT&CK M1051: Update Software",link:"https://attack.mitre.org/mitigations/M1051/",safeguards:[{sgId:"SG-002",sgName:"Patch Management"}],tags:{contents:["standard"],year:2020}},{title:"Differences Between SAST, DAST, IAST, And RASP",link:"https://www.softwaretestinghelp.com/differences-between-sast-dast-iast-and-rasp/",safeguards:[{sgId:"SG-004",sgName:"Manual Source Code Review"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-006",sgName:"Runtime Application Self-Protection (RASP)"}],tags:{year:2022}},{title:"The Importance of Manual Secure Code Review (MITRE)",link:"https://www.mitre.org/capabilities/cybersecurity/overview/cybersecurity-blog/the-importance-of-manual-secure-code-review",safeguards:[{sgId:"SG-004",sgName:"Manual Source Code Review"}],tags:{year:2014}},{title:"ATT&CK M1045: Code Signing",link:"https://attack.mitre.org/mitigations/M1045/",safeguards:[{sgId:"SG-007",sgName:"Code Signing"}],tags:{contents:["standard"],year:2020}},{title:"A Comprehensive Study of Bloated Dependencies in the Maven Ecosystem (EMSE)",link:"https://link.springer.com/content/pdf/10.1007/s10664-020-09914-8.pdf",safeguards:[{sgId:"SG-009",sgName:"Remove un-used Dependencies"}],tags:{ecosystems:["Java"],contents:["peer-reviewed"],year:2021}},{title:"Is Static Analysis Able to Identify Unnecessary Source Code? (ACM TOSEM)",link:"https://dl.acm.org/doi/10.1145/3368267",safeguards:[{sgId:"SG-009",sgName:"Remove un-used Dependencies"}],tags:{contents:["peer-reviewed"],year:2020}},{title:"The Used, the Bloated, and the Vulnerable: Reducing the Attack Surface of an Industrial Application (IEEE ICSME)",link:"https://ieeexplore.ieee.org/abstract/document/9609157",safeguards:[{sgId:"SG-009",sgName:"Remove un-used Dependencies"}],tags:{contents:["peer-reviewed"],year:2021}},{title:"ATT&CK M1038: Execution Prevention",link:"https://attack.mitre.org/mitigations/M1038/",safeguards:[{sgId:"SG-010",sgName:"Prevent Script Execution"}],tags:{contents:["standard"],year:2020}},{title:"Towards Measuring Supply Chain Attacks on Package Managers for Interpreted Languages (NDSS)",link:"https://www.ndss-symposium.org/wp-content/uploads/ndss2021_1B-1_23055_paper.pdf",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"},{avId:"AV-204",avName:"Typosquatting"},{avId:"AV-602",avName:"Take-over Legitimate Account",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"},{avId:"AV-700",avName:"Compromise System",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"},{avId:"AV-700",avName:"Compromise System",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"},{avId:"AV-700",avName:"Compromise System",scopeAvId:"AV-402",scopeAvName:"Tamper Build Job as Maintainer"},{avId:"AV-301",avName:"Introduce Malicious Code through Hypocrite Merge Request"},{avId:"AV-800",avName:"Become Maintainer",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"},{avId:"AV-800",avName:"Become Maintainer",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],safeguards:[{sgId:"SG-011",sgName:"Typo Guard"},{sgId:"SG-012",sgName:"Typo Detection"},{sgId:"SG-039",sgName:"Enstablish vetting process for Open-Source components"},{sgId:"SG-029",sgName:"Version Pinning"},{sgId:"SG-017",sgName:"Multi-Factor Authentication"},{sgId:"SG-019",sgName:"Login Protection Mechanism"},{sgId:"SG-011",sgName:"Typo Guard"},{sgId:"SG-028",sgName:"Scoped Packages"},{sgId:"SG-012",sgName:"Typo Detection"}],tags:{contents:["peer-reviewed"],year:2021}},{title:"Defending Against Package Typosquatting (NSS)",link:"https://dl.acm.org/doi/10.1007/978-3-030-65745-1_7",safeguards:[{sgId:"SG-011",sgName:"Typo Guard"}],tags:{ecosystems:["JavaScript","Python","Ruby"],contents:["peer-reviewed","proof-of-concept"],year:2020}},{title:"Fosstars: Ratings for open source projects",link:"https://github.com/KhulnaSoft/fosstars-rating-core",safeguards:[{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"}],tags:{contents:["tool"],year:null}},{title:"Credential Digger: GitHub scanner to identify hardcoded credentials",link:"https://github.com/KhulnaSoft/credential-digger",safeguards:[{sgId:"SG-021",sgName:"Token Protection Mechanisms"}],tags:{contents:["tool"],year:null}},{title:"OpenSSF Security Scorecards",link:"https://github.com/ossf/scorecard#readme",safeguards:[{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"}],tags:{contents:["tool"],year:null}},{title:"OpenSSF Best Practices Badge Program",link:"https://bestpractices.coreinfrastructure.org/en",safeguards:[{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"}],tags:{contents:[],packages:[],year:null}},{title:"OpenSSF Security Metrics",link:"https://github.com/ossf/Project-Security-Metrics",safeguards:[{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"}],tags:{contents:[],packages:[],year:null}},{title:"ATT&CK M1048: Application Isolation and Sandboxing",link:"https://attack.mitre.org/mitigations/M1048/",safeguards:[{sgId:"SG-014",sgName:"Code Isolation and Sandboxing"}],tags:{contents:["standard"],year:2020}},{title:"ATT&CK M1032: Multi-factor Authentication",link:"https://attack.mitre.org/mitigations/M1032/",safeguards:[{sgId:"SG-017",sgName:"Multi-Factor Authentication"}],tags:{contents:["standard"],year:2019}},{title:"CAPEC-49: Password Brute Forcing",link:"https://capec.mitre.org/data/definitions/49.html",safeguards:[{sgId:"SG-018",sgName:"Password Policy"},{sgId:"SG-019",sgName:"Login Protection Mechanism"}],tags:{contents:["standard"],year:2021}},{title:"OWASP Community Controls: Blocking Brute Force Attacks",link:"https://owasp.org/www-community/controls/Blocking_Brute_Force_Attacks",safeguards:[{sgId:"SG-019",sgName:"Login Protection Mechanism"}],tags:{contents:["standard"],year:0}},{title:"CAPEC-593: Session Hijacking",link:"https://capec.mitre.org/data/definitions/593.html",safeguards:[{sgId:"SG-020",sgName:"Session Timeout"},{sgId:"SG-021",sgName:"Token Protection Mechanisms"}],tags:{contents:["standard"],year:2021}},{title:"ATT&CK M1052: User Account Control ",link:"https://attack.mitre.org/mitigations/M1052/",safeguards:[{sgId:"SG-022",sgName:"User Account Management"}],tags:{contents:["standard"],year:2020}},{title:"ATT&CK M1047: Audit",link:"https://attack.mitre.org/mitigations/M1047/",safeguards:[{sgId:"SG-023",sgName:"Audit"}],tags:{contents:["standard"],year:2020}},{title:"How Does an IT Audit Differ From a Security Assessment?",link:"https://www.dnsstuff.com/it-security-audit-vs-security-assessment",safeguards:[{sgId:"SG-023",sgName:"Audit"},{sgId:"SG-024",sgName:"Security Assessment"}],tags:{year:2020}},{title:"Security Assessment",link:"https://www.sciencedirect.com/topics/computer-science/security-assessment",safeguards:[{sgId:"SG-024",sgName:"Security Assessment"}],tags:{contents:[],packages:[],year:null}},{title:"The Open Source Security Testing Methodology Manual v3 (ISECOM)",link:"https://www.isecom.org/OSSTMM.3.pdf",safeguards:[{sgId:"SG-024",sgName:"Security Assessment"}],tags:{year:2010}},{title:"Vulnerability assessment (NIST)",link:"https://csrc.nist.gov/glossary/term/vulnerability_assessment",safeguards:[{sgId:"SG-025",sgName:"Vulnerability Assessment"}],tags:{year:null}},{title:"Penetration testing (NIST)",link:"https://csrc.nist.gov/glossary/term/penetration_testing",safeguards:[{sgId:"SG-026",sgName:"Penetration Testing"}],tags:{year:null}},{title:"ATT&CK M1049: Antivirus/Antimalware",link:"https://attack.mitre.org/mitigations/M1049/",safeguards:[{sgId:"SG-027",sgName:"Antivirus/Antimalware"}],tags:{contents:["standard"],year:2020}},{title:"How we protected ourselves from the Dependency Confusion attack",link:"https://schibsted.com/blog/dependency-confusion-how-we-protected-ourselves/",safeguards:[{sgId:"SG-028",sgName:"Scoped Packages"},{sgId:"SG-029",sgName:"Version Pinning"}],tags:{year:2021}},{title:"Scoped packages (NPM Documentation)",link:"https://docs.npmjs.com/cli/v8/using-npm/scope",safeguards:[{sgId:"SG-028",sgName:"Scoped Packages"}],tags:{year:null}},{title:"3 ways to mitigate risk when using private package feeds: Secure Your Hybrid Software Supply Chain (Microsoft)",link:"https://azure.microsoft.com/mediahandler/files/resourcefiles/3-ways-to-mitigate-risk-using-private-package-feeds/3%20Ways%20to%20Mitigate%20Risk%20When%20Using%20Private%20Package%20Feeds%20-%20v1.0.pdf",safeguards:[{sgId:"SG-028",sgName:"Scoped Packages"},{sgId:"SG-029",sgName:"Version Pinning"},{sgId:"SG-031",sgName:"Establish Internal Repository Mirrors and reference one private feed, not multiple"}],tags:{year:2021}},{title:"Sonatype Releases New Nexus Firewall Policy to Secure Software Supply Chains from 'Dependency Confusion' Attacks",link:"https://blog.sonatype.com/sonatype-releases-new-nexus-firewall-policy-to-secure-software-supply-chains-from-dependency-confusion-attacks",safeguards:[{sgId:"SG-030",sgName:"Dependency Resolution Rules"}],tags:{year:2021}},{title:"SLSA Build Requirements: Isolated",link:"https://slsa.dev/spec/v0.1/requirements#isolated",safeguards:[{sgId:"SG-032",sgName:"Isolation of build steps"}],tags:{contents:["standard"]}},{title:"SLSA Build Requirements: Ephemeral Environment",link:"https://slsa.dev/spec/v0.1/requirements#ephemeral-environment",safeguards:[{sgId:"SG-033",sgName:"Ephemeral Build Environment"}],tags:{contents:["standard"]}},{title:"SLSA Build Requirements: Build as code",link:"https://slsa.dev/spec/v0.1/requirements#build-as-code",safeguards:[{sgId:"SG-035",sgName:"Configure build jobs through code"}],tags:{contents:["standard"]}},{title:"Reproducible builds",link:"https://reproducible-builds.org/",safeguards:[{sgId:"SG-037",sgName:"Reproducible builds"}],tags:{year:null}},{title:"SLSA Build Requirements: Reproducible",link:"https://slsa.dev/spec/v0.1/requirements#reproducible",safeguards:[{sgId:"SG-037",sgName:"Reproducible builds"}],tags:{contents:["standard"]}},{title:"HTTP Over TLS (RFC2818)",link:"https://datatracker.ietf.org/doc/html/rfc2818",safeguards:[{sgId:"SG-040",sgName:"Use encrypted communication protocols with the Administrator"}],tags:{contents:["standard"],year:null}},{title:"SLSA Build Requirements: Build Service",link:"https://slsa.dev/spec/v0.1/requirements#build-service",safeguards:[{sgId:"SG-042",sgName:"Use of Dedicated Build Service"}],tags:{contents:["standard"]}},{title:"SLSA Provenance Requirements: Identifies Artifact",link:"https://slsa.dev/spec/v0.1/requirements#identifies-artifact",safeguards:[{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"}],tags:{contents:["standard"]}},{title:"Npm Attackers Sneak a Backdoor into Node.js Deployments through Dependencies",link:"https://thenewstack.io/npm-attackers-sneak-a-backdoor-into-node-js-deployments-through-dependencies/",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["getcookies","express-cookies","http-fetch-cookies"],year:2018}},{title:"17 Backdoored Docker Images Removed From Docker Hub",link:"https://www.bleepingcomputer.com/news/security/17-backdoored-docker-images-removed-from-docker-hub/",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],tags:{ecosystems:["Docker"],contents:["attack"],packages:["docker123321/tomcat","docker123321/tomcat11","docker123321/tomcat22","docker123321/kk","docker123321/mysql","docker123321/data","docker123321/mysql0","docker123321/cron","docker123321/cronm","docker123321/cronnn","docker123321/t1","docker123321/t2","docker123321/mysql2","docker123321/mysql3","docker123321/mysql4","docker123321/mysql5","docker123321/mysql6"],year:2018}},{title:"Plot to steal cryptocurrency foiled by the npm security team",link:"https://blog.npmjs.org/post/185397814280/plot-to-steal-cryptocurrency-foiled-by-the-npm",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["electron-native-notify"],year:2019}},{title:"Inside the \u201cfallguys\u201d malware that steals your browsing data and gaming IMs; Continued attack on open source software",link:"https://blog.sonatype.com/inside-the-fallguys-malware",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["fallguys"],year:2020}},{title:"Building a supply chain attack with .NET, NuGet, DNS, source generators, and more!",link:"https://blog.maartenballiauw.be/post/2021/05/05/building-a-supply-chain-attack-with-dotnet-nuget-dns-source-generators-and-more.html",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],tags:{ecosystems:["C#"],contents:["proof-of-concept"],packages:[],year:2021}},{title:"Open source developer corrupts widely-used libraries, affecting tons of projects",link:"https://www.theverge.com/2022/1/9/22874949/developer-corrupts-open-source-libraries-projects-affected",vectors:[{avId:"AV-801",avName:"Change Ethos",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["faker.js","colors.js"],year:2022}},{title:"PyPI Python repository hit by typosquatting sneak attack",link:"https://nakedsecurity.sophos.com/2017/09/19/pypi-python-repository-hit-by-typosquatting-sneak-attack/",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],tags:{ecosystems:["Python"],contents:["attack"],packages:["urllib","acqusition","apidev-coop","bzip","crypt","django-server","pwd","setup-tools","telnet"],year:2017}},{title:"crossenv malware on the npm registry",link:"https://blog.npmjs.org/post/163723642530/crossenv-malware-on-the-npm-registry",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["babelcli","cross-env.js","crossenv","d3.js","fabric-js","ffmepg","gruntcli","http-proxy.js","jquery.js","mariadb","mongose","mssql-node","mssql.js","mysqljs","node-fabric","node-opencv","node-opensl","node-openssl","node-sqlite","node-tkinter","nodecaffe","nodefabric","nodeffmpeg","nodemailer-js","nodemailer.js","nodemssql","noderequest","nodesass","nodesqlite","opencv.js","openssl.js","proxy.js","shadowsock","smb","sqlite.js","sqliter","sqlserver","tkinter"],year:2017}},{title:"skcsirt-sa-20170909-pypi",link:"https://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],tags:{ecosystems:["Python"],contents:["attack"],packages:["acqusition","apidev-coop","bzip","crypt","django-server","pwd","setup-tools","telnet","urlib3","urllib"],year:2017}},{title:"Discord Token Stealer Discovered in PyPI Repository",link:"https://bertusk.medium.com/discord-token-stealer-discovered-in-pypi-repository-e65ed9c3de06",vectors:[{avId:"AV-201",avName:"Combosquatting"}],tags:{ecosystems:["Python"],contents:["attack"],packages:["pytz3-dev"],year:2019}},{title:"Malicious NPM Libraries Caught Installing Password Stealer and Ransomware",link:"https://thehackernews.com/2021/10/malicious-npm-libraries-caught.html",vectors:[{avId:"AV-201",avName:"Combosquatting"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["noblox.js-proxy","noblox.js-proxies"],year:2021}},{title:"Cryptocurrency Clipboard Hijacker Discovered in PyPI Repository",link:"https://bertusk.medium.com/cryptocurrency-clipboard-hijacker-discovered-in-pypi-repository-b66b8a534a8",vectors:[{avId:"AV-204",avName:"Typosquatting"}],tags:{ecosystems:["Python"],contents:["attack"],packages:["colourama"],year:2018}},{title:"Malicious packages found to be typo-squatting in Python Package Index",link:"https://snyk.io/blog/malicious-packages-found-to-be-typo-squatting-in-pypi/",vectors:[{avId:"AV-204",avName:"Typosquatting"}],tags:{ecosystems:[],contents:["attack"],packages:["jeIlyfish","python3-dateutil"],year:2019}},{title:"How to ask to ban the application for security reasons? #651 ",link:"https://github.com/canonical-web-and-design/snapcraft.io/issues/651",vectors:[{avId:"AV-205",avName:"Built-In Package"}],tags:{ecosystems:[],contents:["attack"],packages:["squashfs-root/systemd","squashfs-root/start"],year:2018}},{title:"Trick or treat: that `twilio-npm` package is brandjacking malware in disguise!",link:"https://blog.sonatype.com/twilio-npm-is-brandjacking-malware-in-disguise",vectors:[{avId:"AV-206",avName:"Brandjacking"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["twilio-npm"],year:2020}},{title:"Damaging Linux & Mac Malware Bundled within Browserify npm Brandjack Attempt",link:"https://blog.sonatype.com/damaging-linux-mac-malware-bundled-within-browserify-npm-brandjack-attempt",vectors:[{avId:"AV-206",avName:"Brandjacking"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["web-browserify"],year:2021}},{title:"The NPM package that walked away with all your passwords",link:"https://blog.reversinglabs.com/blog/the-npm-package-that-walked-away-with-all-your-passwords",vectors:[{avId:"AV-207",avName:"Similarity Attack"}],tags:{ecosystems:[],contents:["attack"],packages:["bb-builder"],year:2019}},{title:"An emergency re-review of kernel commits authored by members of the University of Minnesota, due to the Hypocrite Commits research paper. ",link:"https://lore.kernel.org/lkml/202105051005.49BFABCE@keescook/",vectors:[{avId:"AV-301",avName:"Introduce Malicious Code through Hypocrite Merge Request"},{avId:"AV-304",avName:"Make Immature Vulnerability Exploitable"}],tags:{ecosystems:["Linux"],contents:["attack"],packages:[],year:2021}},{title:"Malicious code in the PureScript npm installer",link:"https://harry.garrood.me/blog/malicious-code-in-purescript-npm-installer/",vectors:[{avId:"AV-302",avName:"Contribute as Maintainer"},{avId:"AV-402",avName:"Tamper Build Job as Maintainer"},{avId:"AV-504",avName:"Distribute as Package Maintainer"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["load-from-cwd-or-npm","rate-map","purescript"],year:2021}},{title:"CVE-2021-42574 (Bidi attack)",link:"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-42574",vectors:[{avId:"AV-306",avName:"Exploit Unicode Bidirectional Algorithm"}],tags:{ecosystems:[],contents:["vulnerability"],packages:[],year:2021}},{title:"CVE-2021-42694 (Homoglyph attack)",link:"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-42694",vectors:[{avId:"AV-307",avName:"Use Homoglyphs"}],tags:{ecosystems:[],contents:["vulnerability"],packages:[],year:2021}},{title:"The Octopus Scanner Malware: Attacking the open source supply chain",link:"https://securitylab.github.com/research/octopus-scanner-malware-open-source-supply-chain/",vectors:[{avId:"AV-401",avName:"Run Malicious Build"}],tags:{ecosystems:["Java"],contents:["attack"],packages:[],year:2020}},{title:"Adobe to revoke crypto key abused to sign malware apps (corrected)",link:"https://arstechnica.com/information-technology/2012/09/adobe-to-revoke-crypto-key-abused-to-sign-5000-malware-apps/",vectors:[{avId:"AV-403",avName:"Tamper with Exposed Build System"}],tags:{ecosystems:[],contents:["attack"],packages:[],year:2012}},{title:"You can resurrect any deleted GitHub account name. And this is why we have trust issues",link:"https://www.theregister.com/2018/02/10/github_account_name_reuse/",vectors:[{avId:"AV-501",avName:"Dangling Reference"}],tags:{ecosystems:[],contents:["vulnerability"],packages:[],year:2018}},{title:"CVE-2021-26291",link:"https://nvd.nist.gov/vuln/detail/CVE-2021-26291",vectors:[{avId:"AV-501",avName:"Dangling Reference"}],tags:{ecosystems:[],contents:["vulnerability"],packages:[],year:2021}},{title:"NPM was Broken for 2.5 Hours",link:"https://www.infoq.com/news/2016/03/npm/",vectors:[{avId:"AV-501",avName:"Dangling Reference"}],tags:{ecosystems:[],contents:["vulnerability"],packages:["kik","left-pad"],year:2016}},{title:"kik, left-pad, and npm",link:"https://blog.npmjs.org/post/141577284765/kik-left-pad-and-npm",vectors:[{avId:"AV-501",avName:"Dangling Reference"}],tags:{ecosystems:[],contents:["attack"],packages:["kik","left-pad"],year:2016}},{title:"Malware found in the Arch Linux AUR repository",link:"https://lwn.net/Articles/759461/",vectors:[{avId:"AV-501",avName:"Dangling Reference"}],tags:{ecosystems:[],contents:["attack"],packages:["acrored","balz","minergate"],year:2018}},{title:"Dragonfly: Western Energy Companies Under Sabotage Threat",link:"https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=7382dce7-0260-4782-84cc-890971ed3f17&CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68&tab=librarydocuments",vectors:[{avId:"AV-505",avName:"Inject into Hosting System"}],tags:{ecosystems:[],contents:["attack"],packages:[],year:2014}},{title:"Beware of hacked ISOs if you downloaded Linux Mint on February 20th!",link:"https://blog.linuxmint.com/?p=2994",vectors:[{avId:"AV-505",avName:"Inject into Hosting System"}],tags:{ecosystems:["Linux"],contents:["attack"],packages:["Linux Mint 17.3 Cinnamon"],year:2016}},{title:"How to Bury a Major Breach Notification",link:"https://krebsonsecurity.com/2017/02/how-to-bury-a-major-breach-notification/",vectors:[{avId:"AV-505",avName:"Inject into Hosting System"}],tags:{ecosystems:["Windows"],contents:["attack"],packages:["Kingslayer"],year:2017}},{title:"How to take over the computer of any Java (or Clojure or Scala) developer",link:"https://max.computer/blog/how-to-take-over-the-computer-of-any-java-or-clojure-or-scala-developer/",vectors:[{avId:"AV-506",avName:"MITM Attack"},{avId:"AV-701",avName:"Exploit Weak Configuration",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:["Java"],contents:["proof-of-concept"],packages:[],year:2014}},{title:"Attack inception: Compromised supply chain within a supply chain poses new risks",link:"https://www.microsoft.com/security/blog/2018/07/26/attack-inception-compromised-supply-chain-within-a-supply-chain-poses-new-risks/",vectors:[{avId:"AV-508",avName:"Tamper Legitimate URL"}],tags:{ecosystems:["Windows"],contents:["attack"],packages:[],year:2018}},{title:"Dependency Confusion: How I Hacked Into Apple, Microsoft and Dozens of Other Companies",link:"https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610",vectors:[{avId:"AV-509",avName:"Abuse Dependency Resolution Mechanism"}],tags:{ecosystems:["JavaScript"],contents:["attack","proof-of-concept"],packages:[],year:2021}},{title:"A Confusing Dependency",link:"https://blog.autsoft.hu/a-confusing-dependency/",vectors:[{avId:"AV-509",avName:"Abuse Dependency Resolution Mechanism"}],tags:{ecosystems:["Java"],contents:["proof-of-concept"],packages:[],year:2021}},{title:"Changes to Git commit workflow",link:"https://news-web.php.net/php.internals/113838",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["PHP"],contents:["attack"],packages:[],year:2021}},{title:"Backdoor planted in PHP Git repository after server hack",link:"https://portswigger.net/daily-swig/backdoor-planted-in-php-git-repository-after-server-hack",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["PHP"],contents:["attack"],packages:[],year:2021}},{title:"Malicious remote code execution backdoor discovered in the popular bootstrap-sass Ruby gem",link:"https://snyk.io/blog/malicious-remote-code-execution-backdoor-discovered-in-the-popular-bootstrap-sass-ruby-gem/",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["Ruby"],contents:["attack"],packages:["bootstrap-sass"],year:2019}},{title:"strong_password v0.0.7 rubygem hijacked",link:"https://withatwist.dev/strong-password-rubygem-hijacked.html",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["Ruby"],contents:["attack"],packages:["strong_password"],year:2019}},{title:"[CVE-2019-15224] Version 1.6.13 published with malicious backdoor",link:"https://github.com/rest-client/rest-client/issues/713",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["Ruby"],contents:["attack"],packages:["rest-client"],year:2019}},{title:"A hacker is demanding ransom for hundreds of stolen Git code repositories",link:"https://www.theverge.com/2019/5/6/18531222/hacker-data-theft-ransom-stolen-git-code-bitcoin",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-303",scopeAvName:"Tamper with Version Control System"}],tags:{ecosystems:["GitHub","Bitbucket","GitLab"],contents:["attack"],packages:[],year:2019}},{title:"Project:Infrastructure/Incident Reports/2018-06-28 Github",link:"https://wiki.gentoo.org/wiki/Project:Infrastructure/Incident_Reports/2018-06-28_Github",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-303",scopeAvName:"Tamper with Version Control System"}],tags:{ecosystems:["Linux"],contents:["attack"],packages:["gentoo/gentoo","gentoo/musl","gentoo/systemd"],year:2018}},{title:"Security incident on Fedora infrastructure on 23 Jan 2011",link:"https://lists.fedoraproject.org/pipermail/announce/2011-January/002911.html",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-402",scopeAvName:"Tamper Build Job as Maintainer"},{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],tags:{ecosystems:["Linux"],contents:["attack"],packages:["Fedora"],year:2011}},{title:"Recent findings from CCleaner APT investigation reveal that attackers entered the Piriform network via TeamViewer",link:"https://blog.avast.com/update-ccleaner-attackers-entered-via-teamviewer",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-402",scopeAvName:"Tamper Build Job as Maintainer"}],tags:{ecosystems:["Windows"],contents:["attack"],packages:["CCleaner"],year:2018}},{title:"ESLint: Compromising the Build using Supply Chain Attack",link:"https://cycode.com/blog/eslint-compromising-the-build-using-supply-chain-attack/",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],tags:{ecosystems:[],contents:["attack"],packages:["eslint-escope@3.7.2","eslint-config-eslint@5.0.2"],year:2021}},{title:"Gathering weak npm credentials",link:"https://github.com/ChALkeR/notes/blob/master/Gathering-weak-npm-credentials.md",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"},{avId:"AV-605",avName:"Reuse of Leaked API Tokens",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],tags:{ecosystems:["JavaScript"],contents:["vulnerability"],packages:["debug","qs","supports-color","yargs","commander","request","strip-ansi","chalk","form-data","mime","tunnel-agent","extend","delayed-stream","combined-stream","forever-agent","concat-stream","vinyl","co","express","escape-html","path-to-regexp","component-emitter","moment","ws","handlebars","connect","escodegen","got","gulp-util","ultron","http-proxy","dom-serializer","url-parse","vinyl-fs","configstore","coa","csso","formidable","color","winston","node-sass","react","react-dom","rx","postcss-calc","superagent","basic-auth","cheerio","jsdom","gulp","sinon","useragent","deprecated","browserify","redux","array-equal","bower","jshint","jasmine","global","mongoose","vhost","imagemin","highlight.js","tape","mysql","mz","nock","rollup","gulp-less","rework","xcode","ionic","cordova","normalize.css","electron","n","react-native","ember-cli","yeoman-generator","nunjucks","koa","modernizr","yo","mongoskin"],year:2018}},{title:"A core contributor to the conventional-changelog ecosystem had their npm credentials compromised",link:"https://github.com/conventional-changelog/conventional-changelog/issues/282#issuecomment-365367804",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],tags:{ecosystems:["JavaScript"],contents:["vulnerability"],packages:["conventional-changelog"],year:2018}},{title:"A backdoor in a popular Ruby gem",link:"https://lwn.net/Articles/785386/",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],tags:{ecosystems:["Ruby"],contents:["attack"],packages:["bootstrap-sass"],year:2018}},{title:"Postmortem for Malicious Packages Published on July 12th, 2018",link:"https://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["eslint-escope@3.7.2","eslint-config-eslint@5.0.2"],year:2018}},{title:"Password-Guessing Was Used to Hack Gentoo Linux Github Account",link:"https://thehackernews.com/2018/07/github-hacking-gentoo-linux.html",vectors:[{avId:"AV-604",avName:"Bruteforce",scopeAvId:"AV-303",scopeAvName:"Tamper with Version Control System"}],tags:{ecosystems:["Linux"],contents:["attack"],packages:["Gentoo"],year:2018}},{title:"How I gained commit access to Homebrew in 30 minutes",link:"https://medium.com/@vesirin/how-i-gained-commit-access-to-homebrew-in-30-minutes-2ae314df03ab",vectors:[{avId:"AV-605",avName:"Reuse of Leaked API Tokens",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"},{avId:"AV-605",avName:"Reuse of Leaked API Tokens",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:["Homebrew"],contents:["vulnerability","proof-of-concept"],packages:["Homebrew/brew","Homebrew/homebrew-core","Homebrew/formulae.brew.sh"],year:2018}},{title:"Stealing arbitrary GitHub Actions secrets",link:"https://blog.teddykatz.com/2021/03/17/github-actions-write-access.html",vectors:[{avId:"AV-605",avName:"Reuse of Leaked API Tokens",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["GitHub"],contents:["vulnerability","proof-of-concept"],packages:[],year:2018}},{title:"npm fails to restrict the actions of malicious npm packages",link:"https://www.kb.cert.org/vuls/id/319816",vectors:[{avId:"AV-607",avName:"Reuse of Existing Session",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["JavaScript"],contents:["vulnerability"],packages:[],year:2016}},{title:"Thousands of npm accounts use email addresses with expired domains",link:"https://therecord.media/thousands-of-npm-accounts-use-email-addresses-with-expired-domains/",vectors:[{avId:"AV-608",avName:"Resurrect Expired Domain Associated With Legitimate Account",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],tags:{ecosystems:["JavaScript"],contents:["vulnerability"],packages:[],year:2022}},{title:"Protecting Your Critical Assets: Lessons Learned from 'Operation Aurora'",link:"https://www.wired.com/images_blogs/threatlevel/2010/03/operationaurora_wp_0310_fnl.pdf",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:[],contents:["attack"],packages:[],year:2010}},{title:"Open-source ProFTPD hacked, backdoor planted in source code",link:"https://www.zdnet.com/article/open-source-proftpd-hacked-backdoor-planted-in-source-code/",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-303",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["Linux"],contents:["attack"],packages:["ProFTPD1.3.3c"],year:2010}},{title:"CVE-2019-13139 - Docker build code execution",link:"https://staaldraad.github.io/post/2019-07-16-cve-2019-13139-docker-build/",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-303",scopeAvName:"Tamper with Version Control System"}],tags:{ecosystems:["Docker"],contents:["vulnerability"],packages:[],year:2019}},{title:"Git flag injection - local file overwrite to remote code execution",link:"https://hackerone.com/reports/658013",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-303",scopeAvName:"Tamper with Version Control System"}],tags:{ecosystems:["GitLab"],contents:["vulnerability"],packages:[],year:2019}},{title:"GitHub - RCE via git option injection (almost)",link:"https://devcraft.io/2020/10/18/github-rce-git-inject.html",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-303",scopeAvName:"Tamper with Version Control System"}],tags:{ecosystems:["GitHub"],contents:["vulnerability"],packages:[],year:2020}},{title:"CVE-2018-17456",link:"https://gist.github.com/joernchen/38dd6400199a542bc9660ea563dcf2b6",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-303",scopeAvName:"Tamper with Version Control System"}],tags:{ecosystems:[],contents:["vulnerability"],packages:[],year:2018}},{title:"Messing with GitHub's fork collaboration for fun and profit",link:"https://blog.teddykatz.com/2021/03/10/fork-collab-abuse.html",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-303",scopeAvName:"Tamper with Version Control System"}],tags:{ecosystems:["GitHub"],contents:["vulnerability"],packages:[],year:2021}},{title:"Webmin 1.890 Exploit - What Happened?",link:"https://webmin.com/exploit.html",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"}],tags:{ecosystems:["Linux"],contents:["attack"],packages:["Webmin 1.890"],year:2018}},{title:"Siloscape: First Known Malware Targeting Windows Containers to Compromise Cloud Environments",link:"https://unit42.paloaltonetworks.com/siloscape/",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"}],tags:{ecosystems:["Windows"],contents:["attack"],packages:[],year:2021}},{title:"PHP Supply Chain Attack on Composer",link:"https://blog.sonarsource.com/php-supply-chain-attack-on-composer",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:["PHP"],contents:["attack"],packages:[],year:2021}},{title:"Remote Code Execution on rubygems.org",link:"https://justi.cz/security/2017/10/07/rubygems-org-rce.html",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:["Ruby"],contents:["vulnerability"],packages:[],year:2017}},{title:"Remote Code Execution on packagist.org",link:"https://justi.cz/security/2018/08/28/packagist-org-rce.html",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:["PHP"],contents:["vulnerability"],packages:[],year:2018}},{title:"Operation Red Signature Targets South Korean Companies",link:"https://blog.trendmicro.com/trendlabs-security-intelligence/supply-chain-attack-operation-red-signature-targets-south-korean-organizations/",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:[],contents:["attack"],packages:[],year:2018}},{title:"Critical Flaw Fixed in Packagist, PHP's Largest Administrator",link:"https://www.bleepingcomputer.com/news/security/critical-flaw-fixed-in-packagist-phps-largest-package-repository/",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:["PHP"],contents:["vulnerability"],packages:[],year:2018}},{title:"Supply-chain attack on cryptocurrency exchange gate.io",link:"https://www.welivesecurity.com/2018/11/06/supply-chain-attack-cryptocurrency-exchange-gate-io/",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:[],contents:["attack"],packages:[],year:2018}},{title:"Linux marketplaces vulnerable to RCE and supply chain attacks",link:"https://positive.security/blog/hacking-linux-marketplaces",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:["Linux"],contents:["vulnerability"],packages:[],year:2021}},{title:"GitHub's commitment to npm ecosystem security",link:"https://github.blog/2021-11-15-githubs-commitment-to-npm-ecosystem-security/",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:["JavaScript"],contents:["vulnerability"],packages:[],year:2021}},{title:"Backdoor Found in Themes and Plugins from AccessPress Themes",link:"https://jetpack.com/2022/01/18/backdoor-found-in-themes-and-plugins-from-accesspress-themes/",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:["PHP"],contents:["attack"],packages:[],year:2022}},{title:"Operation ShadowHammer: a high-profile supply chain attack",link:"https://securelist.com/operation-shadowhammer-a-high-profile-supply-chain-attack/90380/",vectors:[{avId:"AV-703",avName:"Infect through Malicious Component",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["Windows"],contents:["attack"],packages:[],year:2019}},{title:"Newly Discovered Bugs in VSCode Extensions Could Lead to Supply Chain Attacks",link:"https://thehackernews.com/2021/05/newly-discovered-bugs-in-vscode.html",vectors:[{avId:"AV-703",avName:"Infect through Malicious Component",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["VS Code"],contents:["vulnerability"],packages:[],year:2021}},{title:"SimBad: A Rogue Adware Campaign On Google Play",link:"https://research.checkpoint.com/2019/simbad-a-rogue-adware-campaign-on-google-play/",vectors:[{avId:"AV-703",avName:"Infect through Malicious Component",scopeAvId:"AV-402",scopeAvName:"Tamper Build Job as Maintainer"}],tags:{ecosystems:["Android"],contents:["attack"],packages:[],year:2019}},{title:"What You Need to Know About iOS Malware XcodeGhost",link:"https://www.macrumors.com/2015/09/20/xcodeghost-chinese-malware-faq/",vectors:[{avId:"AV-703",avName:"Infect through Malicious Component",scopeAvId:"AV-402",scopeAvName:"Tamper Build Job as Maintainer"}],tags:{ecosystems:["iOS","OSX"],contents:["attack"],packages:[],year:2015}},{title:"Google Play Apps Infected with Malicious IFrames",link:"https://unit42.paloaltonetworks.com/unit42-google-play-apps-infected-malicious-iframes/",vectors:[{avId:"AV-703",avName:"Infect through Malicious Component",scopeAvId:"AV-402",scopeAvName:"Tamper Build Job as Maintainer"}],tags:{ecosystems:["Android"],contents:["attack"],packages:[],year:2017}},{title:"SunBurst: the next level of stealth",link:"https://blog.reversinglabs.com/blog/sunburst-the-next-level-of-stealth",vectors:[{avId:"AV-703",avName:"Infect through Malicious Component",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"}],tags:{ecosystems:[],contents:["attack"],packages:[],year:2020}},{title:"Supply chain attack on the password manager Clickstudios - PASSWORDSTATE",link:"https://www.csis.dk/newsroom-blog-overview/2021/moserpass-supply-chain/",vectors:[{avId:"AV-703",avName:"Infect through Malicious Component",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:[],contents:["attack"],packages:[],year:2021}},{title:"Compromised npm Package: event-stream",link:"https://medium.com/intrinsic/compromised-npm-package-event-stream-d47d08605502",vectors:[{avId:"AV-800",avName:"Become Maintainer",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["JavaScript"],contents:["attack"],packages:["event-stream"],year:2020}},{title:"Leveraging Team Dynamics to Predict Open-source Software Projects' Susceptibility to Social Engineering Attacks",link:"https://arxiv.org/abs/2106.16067",vectors:[{avId:"AV-800",avName:"Become Maintainer",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:[],packages:[],contents:[],year:2021}},{title:"Using Package Manager and Repository Metrics to Determine the Security of NPM Packages.",link:"https://digital.wpi.edu/downloads/k0698b38t",tags:{ecosystems:["JavaScript"],packages:[],contents:["thesis"],year:2021}},{title:"Empirical Analysis of Security Vulnerabilities in Python Packages (SANER)",link:"https://ieeexplore.ieee.org/abstract/document/9425974",safeguards:[{sgId:"SG-025",sgName:"Vulnerability Assessment"}],tags:{ecosystems:["Python"],packages:[],contents:["peer-reviewed"],year:2021}},{title:"LastPyMile: identifying the discrepancy between sources and packages (ACM ESEC/FSE)",link:"https://dl.acm.org/doi/abs/10.1145/3468264.3468592",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-037",sgName:"Reproducible builds"}],tags:{ecosystems:["Python"],packages:[],contents:["peer-reviewed"],year:2021}},{title:"Perspectives on the SolarWinds Incident",link:"https://ieeexplore.ieee.org/document/9382367",vectors:[{avId:"AV-703",avName:"Infect through Malicious Component",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"}],tags:{ecosystems:[],packages:[],contents:["attack"],year:2021}},{title:"py2src: Towards the Automatic (and Reliable) Identification of Sources for PyPI Package (IEEE ASE)",link:"https://ieeexplore.ieee.org/abstract/document/9678526",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-037",sgName:"Reproducible builds"}],tags:{ecosystems:["Python"],packages:[],contents:["peer-reviewed"],year:2021}},{title:"Digital Security Issues in Emerging Technology Management",link:"https://www.researchgate.net/publication/353934724_Digital_Security_Issues_in_Emerging_Technology_Management",tags:{ecosystems:[],packages:[],contents:[],year:2021}},{title:"Breaking Trust \u2013 Shades of Crisis Across an Insecure Software Supply Chain (USENIX ENIGMA)",link:"https://www.usenix.org/conference/enigma2021/presentation/herr",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"}],tags:{ecosystems:[],packages:[],contents:["presentation"],year:2021}},{title:"Timelines for In-Code Discovery of Zero-Day Vulnerabilities and Supply-Chain Attacks",link:"https://arxiv.org/abs/1808.10062",vectors:[{avId:"AV-304",avName:"Make Immature Vulnerability Exploitable"}],tags:{ecosystems:[],packages:[],contents:[],year:2021}},{title:"Automated software security activities in a continuous delivery pipeline",link:"https://uis.brage.unit.no/uis-xmlui/handle/11250/2788232",safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-036",sgName:"Integrate Open Source Vulnerability scanners into CI/CD pipelines"}],tags:{ecosystems:[],packages:[],contents:["thesis"],year:2021}},{title:"Software Labels (IEEE)",link:"https://ieeexplore.ieee.org/abstract/document/9585141",safeguards:[{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"}],tags:{ecosystems:[],packages:[],contents:[],year:2021}},{title:"Containing Malicious Package Updates in npm with a Lightweight Permission System (ICSE)",link:"https://ieeexplore.ieee.org/abstract/document/9402108",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-014",sgName:"Code Isolation and Sandboxing"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2021}},{title:"How Do Companies Collaborate in Open Source Ecosystems? An Empirical Study of OpenStack (ICSE)",link:"https://ieeexplore.ieee.org/abstract/document/9284137",tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2021}},{title:"Demo: Detecting Third-Party Library Problems with Combined Program Analysis (SIGSAC)",link:"https://dl.acm.org/doi/abs/10.1145/3460120.3485351",safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2021}},{title:"VulnEx: Exploring Open-Source Software Vulnerabilities in Large Development Organizations to Understand Risk Exposure (VizSec)",link:"https://ieeexplore.ieee.org/abstract/document/9629403",safeguards:[{sgId:"SG-025",sgName:"Vulnerability Assessment"}],tags:{ecosystems:["Java"],packages:[],contents:["peer-reviewed"],year:2021}},{title:"Anomalicious: Automated Detection of Anomalous and Potentially Malicious Commits on GitHub (ICSE-SEIP)",link:"https://ieeexplore.ieee.org/abstract/document/9402087",vectors:[{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["GitHub"],contents:["peer-reviewed"],year:2021}},{title:"Struggling With Supply-Chain Security",link:"https://ieeexplore.ieee.org/abstract/document/9473230",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{ecosystems:[],packages:[],contents:[],year:2021}},{title:"Improving Critical Infrastructure Protection by Enhancing Software Acquisition Process Through Blockchain (ECBS)",link:"https://dl.acm.org/doi/abs/10.1145/3459960.3459973",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2021}},{title:"Reproducible Builds: Increasing the Integrity of Software Supply Chains",link:"https://ieeexplore.ieee.org/abstract/document/9403390",vectors:[{avId:"AV-400",avName:"Inject During the Build of Legitimate Package"},{avId:"AV-401",avName:"Run Malicious Build"}],safeguards:[{sgId:"SG-037",sgName:"Reproducible builds"}],tags:{ecosystems:[],packages:[],contents:[],year:2021}},{title:"2020 State of the Octoverse: Securing the World's Software",link:"https://arxiv.org/abs/2110.10246",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"}],tags:{ecosystems:["Java","JavaScript","Linux","Python","C#","Ruby","PHP"],packages:[],contents:["presentation"],year:2021}},{title:"Windows Malware Binaries in C/C++ GitHub Repositories: Prevalence and Lessons Learned",link:"https://www.scitepress.org/Papers/2021/102379/102379.pdf",vectors:[{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package"}],tags:{ecosystems:["C/C++","Windows"],packages:[],contents:["peer-reviewed"],year:2021}},{title:"A Survey on Common Threats in npm and PyPi Registries (MLHat)",link:"https://link.springer.com/chapter/10.1007/978-3-030-87839-9_6",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"},{avId:"AV-302",avName:"Contribute as Maintainer"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-004",sgName:"Manual Source Code Review"},{sgId:"SG-017",sgName:"Multi-Factor Authentication"},{sgId:"SG-011",sgName:"Typo Guard"},{sgId:"SG-002",sgName:"Patch Management"}],tags:{ecosystems:["JavaScript","Python"],packages:[],contents:["peer-reviewed"],year:2021}},{title:"SolarWinds and the Challenges of Patching: Can We Ever Stop Dancing With the Devil? (IEEE S&P)",link:"https://escholarship.org/content/qt0m27w0hf/qt0m27w0hf.pdf",vectors:[{avId:"AV-703",avName:"Infect through Malicious Component",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed","attack"],year:2021}},{title:"Supply-Chain Vulnerability Elimination via Active Learning and Regeneration (SIGSAC)",link:"https://dl.acm.org/doi/abs/10.1145/3460120.3484736",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-039",sgName:"Enstablish vetting process for Open-Source components"}],tags:{ecosystems:["JavaScript","C","C/C++"],packages:[],contents:["peer-reviewed"],year:2021}},{title:"Investigating The Reproducibility of NPM Packages (ICSME)",link:"https://ieeexplore.ieee.org/abstract/document/9240695",vectors:[{avId:"AV-400",avName:"Inject During the Build of Legitimate Package"},{avId:"AV-401",avName:"Run Malicious Build"}],safeguards:[{sgId:"SG-037",sgName:"Reproducible builds"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2020}},{title:"SpellBound: Defending Against Package Typosquatting",link:"https://arxiv.org/abs/2003.03471",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],safeguards:[{sgId:"SG-011",sgName:"Typo Guard"}],tags:{ecosystems:["JavaScript","Python"],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Case Studies in Cyber Supply Chain Risk Management: Summary of Findings and Recommendations (NIST)",link:"https://www.nist.gov/publications/case-studies-cyber-supply-chain-risk-management-summary-findings-and-recommendations",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{ecosystems:[],packages:[],contents:[],year:2020}},{title:"On the impact of using trivial packages: an empirical case study on npm and PyPI",link:"https://link.springer.com/article/10.1007/s10664-019-09792-9",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{ecosystems:["JavaScript","Python"],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Continuous Security Testing: A Case Study on Integrating Dynamic Security Testing Tools in CI/CD Pipelines (EDOC)",link:"https://ieeexplore.ieee.org/abstract/document/9233212",safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-036",sgName:"Integrate Open Source Vulnerability scanners into CI/CD pipelines"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2020}},{title:"EvilCoder: automated bug insertion (ACSAC)",link:"https://dl.acm.org/doi/abs/10.1145/2991079.2991103",vectors:[{avId:"AV-304",avName:"Make Immature Vulnerability Exploitable"}],tags:{ecosystems:["C/C++"],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Preliminary Findings about DevSecOps from Grey Literature (QRS)",link:"https://ieeexplore.ieee.org/abstract/document/9282798",safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-036",sgName:"Integrate Open Source Vulnerability scanners into CI/CD pipelines"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Modeling continuous security: A conceptual model for automated DevSecOps using open-source software over cloud (ADOC)",link:"https://www.sciencedirect.com/science/article/pii/S0167404820302406",safeguards:[{sgId:"SG-036",sgName:"Integrate Open Source Vulnerability scanners into CI/CD pipelines"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2020}},{title:"DevSecOps Pipeline for Complex Software Intensive Systems: Addressing the Cybersecurity Challenges",link:"https://apps.dtic.mil/sti/citations/AD1110434",safeguards:[{sgId:"SG-036",sgName:"Integrate Open Source Vulnerability scanners into CI/CD pipelines"},{sgId:"SG-002",sgName:"Patch Management"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:[],packages:[],contents:[],year:2020}},{title:"Mininode: Reducing the Attack Surface of Node.js Applications (USENIX RAID)",link:"https://www.usenix.org/conference/raid2020/presentation/koishybayev",safeguards:[{sgId:"SG-009",sgName:"Remove un-used Dependencies"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Towards detection of software supply chain attacks by forensic artifacts (ARES)",link:"https://dl.acm.org/doi/abs/10.1145/3407023.3409183",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Towards Using Source Code Repositories to Identify Software Supply Chain Attacks (CCS)",link:"https://dl.acm.org/doi/abs/10.1145/3372297.3420015",vectors:[{avId:"AV-400",avName:"Inject During the Build of Legitimate Package"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["Python"],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Supporting the Detection of Software Supply Chain Attacks through Unsupervised Signature Generation",link:"https://arxiv.org/abs/2011.02235",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["JavaScript","Python"],packages:[],contents:[],year:2020}},{title:"On Systematics of the Information Security of Software Supply Chains (CoMeSySo)",link:"https://link.springer.com/chapter/10.1007/978-3-030-63322-6_9",tags:{ecosystems:["Java","JavaScript","Linux","Python","C#"],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Vuln4Real: A Methodology for Counting Actually Vulnerable Dependencies",link:"https://ieeexplore.ieee.org/abstract/document/9201023",safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{ecosystems:["Java"],packages:[],contents:["peer-reviewed"],year:2020}},{title:"A Qualitative Study of Dependency Management and Its Security Implications (SIGSAC)",link:"https://dl.acm.org/doi/abs/10.1145/3372297.3417232",safeguards:[{sgId:"SG-002",sgName:"Patch Management"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{ecosystems:["Java","JavaScript","Python","C/C++"],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Risk assessment in software supply chains using the Bayesian method",link:"https://www.tandfonline.com/doi/abs/10.1080/00207543.2020.1825860",tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2020}},{title:"In-toto: Practical Software Supply Chain Security",link:"https://www.proquest.com/openview/82abb3bfd6909db8aa41fc6dcb265478/1?pq-origsite=gscholar&cbl=18750&diss=y",vectors:[{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-023",sgName:"Audit"},{sgId:"SG-007",sgName:"Code Signing"},{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"}],tags:{ecosystems:[],packages:[],contents:["thesis"],year:2020}},{title:"Selecting Third-Party Libraries: The Practitioners\u2019 Perspective",link:"https://dl.acm.org/doi/abs/10.1145/3368089.3409711",tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Industry Best Practices for Component Approval in FLOSS Governance (PLOP)",link:"https://dl.acm.org/doi/abs/10.1145/3424771.3424791",tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2020}},{title:"Eight Observations and 24 Research Questions About Open Source Projects: Illuminating New Realities",link:"https://dl.acm.org/doi/abs/10.1145/3274326",tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2018}},{title:"Measuring Open Source Software Supply Chains",link:"http://mockus.org/papers/WoCFse19.pdf",tags:{ecosystems:[],packages:[],contents:["presentation"],year:2019}},{title:"Trusted Software Supply Chain (ASE)",link:"https://ieeexplore.ieee.org/abstract/document/8952169",safeguards:[{sgId:"SG-023",sgName:"Audit"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2019}},{title:"Attacks on Package Managers",link:"https://is.muni.cz/th/y41ft/thesis_final_electronic_Archive.pdf",vectors:[{avId:"AV-204",avName:"Typosquatting"},{avId:"AV-205",avName:"Built-in Package"},{avId:"AV-602",avName:"Take-over Legitimate Account",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["Python"],packages:[],contents:["thesis"],year:2019}},{title:"Small World with High Risks: A Study of Security Threats in the npm Ecosystem (USENIX)",link:"https://www.usenix.org/conference/usenixsecurity19/presentation/zimmerman",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"},{avId:"AV-602",avName:"Take-over Legitimate Account"},{avId:"AV-800",avName:"Become Maintainer"},{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"},{avId:"AV-501",avName:"Dangling Reference"}],safeguards:[{sgId:"SG-039",sgName:"Enstablish vetting process for Open-Source components"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2019}},{title:"Detecting Suspicious Package Updates (ICSE-NIER)",link:"https://ieeexplore.ieee.org/abstract/document/8805698",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-039",sgName:"Enstablish vetting process for Open-Source components"}],tags:{ecosystems:["JavaScript"],packages:["event-stream","flatmap-stream","eslint-scope"],contents:["peer-reviewed"],year:2019}},{title:"Vulnerabilities in Continuous Delivery Pipelines? A Case Study",link:"https://ieeexplore.ieee.org/abstract/document/8712374",vectors:[{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-402",scopeAvName:"Tamper Build Job as Maintainer"},{avId:"AV-603",avName:"Reuse of Compromised Credentials",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"},{avId:"AV-604",avName:"Bruteforce",scopeAvId:"AV-402",scopeAvName:"Tamper Build Job as Maintainer"},{avId:"AV-604",avName:"Bruteforce",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"},{avId:"AV-401",avName:"Run Malicious Build"},{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2019}},{title:"Modeling supply chain attacks in IEC 61850 substations (SmartGridComm)",link:"https://ieeexplore.ieee.org/abstract/document/8909818/",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2019}},{title:"ShIFt - Software Identity Framework for Global Software Delivery (ICGSE)",link:"https://ieeexplore.ieee.org/abstract/document/8807537",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2019}},{title:"Managing Software Platforms and Ecosystems",link:"https://ieeexplore.ieee.org/abstract/document/8693068",tags:{ecosystems:[],packages:[],contents:[],year:2019}},{title:"An Empirical Analysis of the Python Package Index (PyPI)",link:"https://arxiv.org/abs/1907.11073",tags:{ecosystems:["Python"],packages:[],contents:[],year:2019}},{title:"Reproducible Builds: Break a log, good things come in trees",link:"https://bora.uib.no/bora-xmlui/handle/1956/20411",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-037",sgName:"Reproducible builds"}],tags:{ecosystems:["Linux"],packages:[],contents:["thesis"],year:2019}},{title:"A Manually-Curated Dataset of Fixes to Vulnerabilities of Open-Source Software (MSR)",link:"https://ieeexplore.ieee.org/abstract/document/8816802",safeguards:[{sgId:"SG-025",sgName:"Vulnerability Assessment"}],tags:{ecosystems:["Java"],packages:[],contents:["peer-reviewed"],year:2019}},{title:"Protecting your software supply chain",link:"https://www.proquest.com/openview/a126147950b2e81c3757e7f7becbc98a/1?pq-origsite=gscholar&cbl=47271",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{ecosystems:[],packages:[],contents:[],year:2019}},{title:"Toward solving the security risks of open-source software use",link:"https://smartech.gatech.edu/handle/1853/62316",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"},{avId:"AV-204",avName:"Typosquatting"},{avId:"AV-602",avName:"Take-over Legitimate Account",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"},{avId:"AV-700",avName:"Compromise System",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"},{avId:"AV-700",avName:"Compromise System",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"},{avId:"AV-700",avName:"Compromise System",scopeAvId:"AV-402",scopeAvName:"Tamper Build Job as Maintainer"},{avId:"AV-301",avName:"Introduce Malicious Code through Hypocrite Merge Request"},{avId:"AV-800",avName:"Become Maintainer",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"},{avId:"AV-800",avName:"Become Maintainer",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],safeguards:[{sgId:"SG-011",sgName:"Typo Guard"},{sgId:"SG-012",sgName:"Typo Detection"},{sgId:"SG-039",sgName:"Enstablish vetting process for Open-Source components"},{sgId:"SG-029",sgName:"Version Pinning"},{sgId:"SG-017",sgName:"Multi-Factor Authentication"},{sgId:"SG-019",sgName:"Login Protection Mechanism"},{sgId:"SG-011",sgName:"Typo Guard"},{sgId:"SG-028",sgName:"Scoped Packages"},{sgId:"SG-012",sgName:"Typo Detection"}],tags:{ecosystems:[],packages:[],contents:["thesis"],year:2019}},{title:"Research on Secure Stereoscopic Self-Checking Scheme for Open Source Software (AICS)",link:"https://dl.acm.org/doi/abs/10.1145/3349341.3349395",safeguards:[{sgId:"SG-025",sgName:"Vulnerability Assessment"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2019}},{title:"Every part of the supply chain can be attacked",link:"http://cs.brown.edu/courses/csci1950-p/sources/2019_09_25_NYT_Opinion_EveryPartOfTheSupplyChainCanBeAttacked.pdf",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{ecosystems:[],packages:[],contents:[],year:2019}},{title:"Software Supply Chain Security for Banking Websites",link:"https://www.cs.ru.nl/bachelors-theses/2018/Bram_in_t_Zandt___4470346___Software_Supply_Chain_Security_for_Banking_Websites.pdf",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{ecosystems:[],packages:[],contents:["thesis"],year:2019}},{title:"Risks in the software supply chain",link:"https://apps.dtic.mil/sti/pdfs/AD1090495.pdf",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-002",sgName:"Patch Management"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{ecosystems:[],packages:[],contents:["presentation"],year:2019}},{title:"in-toto: Providing farm-to-table guarantees for bits and bytes (USENIX)",link:"https://www.usenix.org/conference/usenixsecurity19/presentation/torres-arias",vectors:[{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-023",sgName:"Audit"},{sgId:"SG-007",sgName:"Code Signing"},{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2019}},{title:"On the Diversity of Software Package Popularity Metrics: An Empirical Study of npm (SANER)",link:"https://ieeexplore.ieee.org/abstract/document/8667997/",tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2019}},{title:"Security of community developed and 3rd-party wiki plug-ins (WIKISYM)",link:"https://dl.acm.org/doi/abs/10.1145/1822258.1822289?casa_token=qJY_mrwbXW8AAAAA:LAJWugtZ-ztVcL9W5p2mVMFTLwZhK49dcdp1DOhHGW7kZrhX17JWiNfmWW12qX3in28vbArm227dKWI",safeguards:[{sgId:"SG-004",sgName:"Manual Source Code Review"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:[],packages:[],contents:[],year:2019}},{title:"Relationship intimacy in software ecosystems: a survey of the Dutch software industry (MEDES)",link:"https://dl.acm.org/doi/abs/10.1145/2077489.2077502?casa_token=ILL_t8nuOQwAAAAA:-J98HLAkyuL-wexIjWQXMEE6fedqk6rpcoWwQSJCT0aLgNjDMf442jDcjxuBH9BhwI0WDJtzrcBL5_M",safeguards:[{sgId:"SG-004",sgName:"Manual Source Code Review"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2019}},{title:"Redacting sensitive information in software artifacts (ICSE)",link:"https://dl.acm.org/doi/abs/10.1145/2597008.2597138?casa_token=jmXcQT5IjMwAAAAA:CVMAuwwtRjaKxcfLbHlgnJR_mn-Ot1L47l6zwT9LkEJmJ6vN6hN_FrWPDKCO6IAhaGIyRvOmI5d12Iw",tags:{contents:["peer-reviewed"],year:2019}},{title:"HideNoSeek: Camouflaging Malicious JavaScript in Benign ASTs (SIGSAC)",link:"https://dl.acm.org/doi/abs/10.1145/3319535.3345656?casa_token=71N8sF1wXtMAAAAA:feGdu3xN50GbAcBc7GICr4ofEiut2BI8PpBUg7-pW87IoRQks3t6wd0pOqYDT7dlzd4TDn2uRYy2HQE",vectors:[{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2019}},{title:"Surviving Software Dependencies: Software reuse is finally here but comes with risks.",link:"https://dl.acm.org/doi/abs/10.1145/3329781.3344149",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"},{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-004",sgName:"Manual Source Code Review"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"}],tags:{ecosystems:[],packages:[],contents:[],year:2019}},{title:"Security Issues in Language-based Software Ecosystems",link:"https://arxiv.org/abs/1903.02613",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"},{avId:"AV-204",avName:"Typosquatting"},{avId:"AV-302",avName:"Contribute as Maintainer"},{avId:"AV-402",avName:"Tamper Build Job as Maintainer"},{avId:"AV-504",avName:"Distribute as Package Maintainer"},{avId:"AV-501",avName:"Dangling Reference"},{avId:"AV-603",avName:"Reuse of Compromised Credentials"}],safeguards:[{sgId:"SG-012",sgName:"Typo Detection"},{sgId:"SG-011",sgName:"Typo Guard"},{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"}],tags:{ecosystems:["JavaScript","Python"],packages:["event-stream","Go-bindata","mailparser","ESLint-scope","conventional-changelog"],contents:["attack"],year:2019}},{title:"On the impact of security vulnerabilities in the npm package dependency network (ICSE)",link:"https://dl.acm.org/doi/abs/10.1145/3196398.3196401",safeguards:[{sgId:"SG-039",sgName:"Enstablish vetting process for Open-Source components"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2018}},{title:"A Large Scale Investigation of Obfuscation Use in Google Play (ACSAC)",link:"https://dl.acm.org/doi/abs/10.1145/3274694.3274726?casa_token=BXoj1sUbajEAAAAA:dLAnD1LDrP-WK0NDKnFETgTbHE4-DVJUbYxoIW0pIw21j5iNXgS-wsFrC1qnRvVKxcz0i1mQrofIrr4",tags:{ecosystems:["Java"],contents:["peer-reviewed"],year:2018}},{title:"Current Taxonomy of Information Security Threats in Software Development Life Cycle (AICT)",link:"https://ieeexplore.ieee.org/abstract/document/8747065/",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2018}},{title:"Building open source security into agile application builds",link:"https://www.sciencedirect.com/science/article/pii/S1353485818300321",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{ecosystems:[],packages:[],contents:[],year:2018}},{title:"Identifying unmaintained projects in github (ESEM)",link:"https://dl.acm.org/doi/abs/10.1145/3239235.3240501?casa_token=z8AcOcUz1t4AAAAA:TRsCuMD3616JDKDhhFXHWcmWWQpHRNv4QFljeSpg-HnJPhhdl5ECJv1HSTrYy6FAZE5JWw-8TxfeZPI",vectors:[{avId:"AV-501",avName:"Dangling Reference"}],tags:{ecosystems:["GitHub"],packages:[],contents:["peer-reviewed"],year:2018}},{title:"Synode: Understanding and Automatically Preventing Injection Attacks on Node.js (NDSS)",link:"https://www.doc.ic.ac.uk/~livshits/papers/pdf/ndss18.pdf",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"},{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-006",sgName:"Runtime Application Self-Protection (RASP)"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2018}},{title:"\u201cStacking the Deck\u201d Attack on Software Updates: Solution by Distributed Recommendation of Testers (IEEE/WIC/ACM)",link:"https://ieeexplore.ieee.org/abstract/document/6690803",vectors:[{avId:"AV-800",avName:"Become Maintainer"}],safeguards:[{sgId:"SG-022",sgName:"User Account Management"},{sgId:"SG-002",sgName:"Patch Management"}],tags:{ecosystems:[],packages:[],contents:[],year:2013}},{title:"A case study of a corporate open source development model (ICSE)",link:"https://dl.acm.org/doi/pdf/10.1145/1134285.1134352",tags:{contents:["peer-reviewed"],year:2006}},{title:"A Practical Approach to the Automatic Classification of Security-Relevant Commits (ICSME)",link:"https://ieeexplore.ieee.org/abstract/document/8530068",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2018}},{title:"Constructing Supply Chains in Open Source Software (ICSE)",link:"https://ieeexplore.ieee.org/abstract/document/8449625",tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2018}},{title:"On the Effort for Security Maintenance of Open Source Components (WEIS)",link:"https://weis2017.econinfosec.org/wp-content/uploads/sites/5/2018/05/WEIS_2018_paper_19.pdf",safeguards:[{sgId:"SG-004",sgName:"Manual Source Code Review"},{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2018}},{title:"Mining Threat Intelligence about Open-Source Projects and Libraries from Code Repository Issues and Bug Reports",link:"https://ieeexplore.ieee.org/abstract/document/8587375",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2018}},{title:"Vulnerable open source dependencies: counting those that matter (ESEM)",link:"https://dl.acm.org/doi/abs/10.1145/3239235.3268920",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["Java"],packages:[],contents:["peer-reviewed"],year:2018}},{title:"BreakApp: Automated, Flexible Application Compartmentalization. (NDSS)",link:"https://nikos.vasilak.is/pubs/breakapp:ndss:2018/paper.pdf",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-014",sgName:"Code Isolation and Sandboxing"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed","proof-of-concept"],year:2018}},{title:"Secure DevOps",link:"https://apps.dtic.mil/sti/pdfs/AD1087865.pdf",safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:[],packages:[],contents:["presentation"],year:2018}},{title:"BCFinder: A Lightweight and Platform-Independent Tool to Find Third-Party Components in Binaries (APSEC)",link:"https://ieeexplore.ieee.org/abstract/document/8719473",safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{ecosystems:["C/C++"],packages:[],contents:["peer-reviewed"],year:2018}},{title:"How Should We Address Cybersecurity Risk in an Agile or DevOps Environment",link:"https://apps.dtic.mil/sti/pdfs/AD1087752.pdf",vectors:[{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package"},{avId:"AV-400",avName:"Inject During the Build of Legitimate Package"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-023",sgName:"Audit"},{sgId:"SG-004",sgName:"Manual Source Code Review"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-026",sgName:"Penetration Testing"},{sgId:"SG-025",sgName:"Vulnerability Assessment"},{sgId:"SG-027",sgName:"Antivirus/Antimalware"}],tags:{ecosystems:[],packages:[],contents:["presentation"],year:2018}},{title:"A comparative study of vulnerability reporting by software composition analysis tools (ESEM)",link:"https://dl.acm.org/doi/abs/10.1145/3475716.3475769",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{ecosystems:["Java","JavaScript"],packages:[],contents:["peer-reviewed"],year:2021}},{title:"What Petya/NotPetya Ransomware Is and What Its Remidiations Are",link:"https://link.springer.com/chapter/10.1007/978-3-319-77028-4_15",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{ecosystems:[],packages:[],contents:[],year:2018}},{title:"JaSt: Fully Syntactic Detection of Malicious (Obfuscated) JavaScript (DIMVA)",link:"https://link.springer.com/chapter/10.1007/978-3-319-93411-2_14",vectors:[{avId:"AV-309",avName:"Hide in Generated/Compiled/Minified Code"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed","proof-of-concept"],year:2018}},{title:"Security in the Software Development Lifecycle (USENIX SOUP)",link:"https://www.usenix.org/conference/soups2018/presentation/assal",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-004",sgName:"Manual Source Code Review"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2018}},{title:"Security assessment of open source third-parties applications",link:"http://eprints-phd.biblio.unitn.it/2543/",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-026",sgName:"Penetration Testing"},{sgId:"SG-025",sgName:"Vulnerability Assessment"},{sgId:"SG-024",sgName:"Security Assessment"}],tags:{ecosystems:[],packages:[],contents:["thesis"],year:2017}},{title:"Assessing software supply chain risk using public data (STC)",link:"https://ieeexplore.ieee.org/abstract/document/8234461",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-025",sgName:"Vulnerability Assessment"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2017}},{title:"An empirical comparison of dependency issues in OSS packaging ecosystems (SANER)",link:"https://ieeexplore.ieee.org/abstract/document/7884604",tags:{ecosystems:["JavaScript","Ruby","R"],packages:[],contents:["peer-reviewed"],year:2017}},{title:"Identifying unusual commits on GitHub",link:"https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1893",vectors:[{avId:"AV-301",avName:"Introduce Malicious Code through Hypocrite Merge Request"}],safeguards:[{sgId:"SG-015",sgName:"Pull/Merge Request Review"},{sgId:"SG-016",sgName:"Protect Sensitive Branches"}],tags:{ecosystems:["GitHub"],packages:[],contents:["peer-reviewed"],year:2017}},{title:"Managing security risks inherent in the use of third-party components",link:"https://safecode.org/wp-content/uploads/2017/05/SAFECode_TPC_Whitepaper.pdf",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-002",sgName:"Patch Management"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-025",sgName:"Vulnerability Assessment"},{sgId:"SG-009",sgName:"Remove un-used Dependencies"},{sgId:"SG-039",sgName:"Enstablish vetting process for Open-Source components"},{sgId:"SG-031",sgName:"Establish Internal Repository Mirrors and reference one private feed, not multiple"}],tags:{ecosystems:[],packages:[],contents:[],year:2017}},{title:"Thou Shalt Not Depend on Me: Analysing the Use of Outdated JavaScript Libraries on the Web",link:"https://arxiv.org/abs/1811.00918",safeguards:[{sgId:"SG-002",sgName:"Patch Management"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{ecosystems:["JavaScript"],packages:[],contents:[],year:2017}},{title:"Mercury: Bandwidth-Effective Prevention of Rollback Attacks Against Community Repositories (USENIX ATC)",link:"https://www.usenix.org/conference/atc17/technical-sessions/presentation/kuppusamy",vectors:[{avId:"AV-700",avName:"Compromise  System",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"},{avId:"AV-503",avName:"Prevent Update to Non-Vulnerable Version"}],safeguards:[{sgId:"SG-007",sgName:"Code Signing"},{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2017}},{title:"Improving Attention to Security in Software Design with Analytics and Cognitive Techniques (SecDev)",link:"https://ieeexplore.ieee.org/abstract/document/8077801",safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-004",sgName:"Manual Source Code Review"},{sgId:"SG-023",sgName:"Audit"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2017}},{title:"Adopters\u2019 trust in enterprise open source vendors: An empirical examination",link:"https://www.sciencedirect.com/science/article/pii/S0164121216302503",tags:{ecosystems:[],contents:["peer-reviewed"],year:2017}},{title:"Engineering Emergence in Systems of Systems: Software and the Growth of Insecurity",link:"https://apps.dtic.mil/sti/pdfs/AD1087016.pdf",safeguards:[{sgId:"SG-004",sgName:"Manual Source Code Review"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:[],contents:["presentation"],year:2017}},{title:"Secure DevOps Foundations for Large-Scale Software Systems",link:"https://www.researchgate.net/profile/Sibonelo-Vundla/project/Software-Engineering-Research-DevOps/attachment/593593271042bfac89182bb4/AS:501940305633280@1496683302997/download/Secure+DevOps+Foundations+for+Large-Scale+Software+Systems.pdf",tags:{ecosystems:[],packages:[],contents:[],year:2017}},{title:"Building a Secure Software Supply Chain using Docker",link:"https://hdms.bsz-bw.de/frontdoor/deliver/index/docId/6321/file/20170830_thesis_final.pdf",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"},{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package"},{avId:"AV-603",avName:"Reuse of Compromised Credentials"},{avId:"AV-702",avName:"Exploit Vulnerabilities"},{avId:"AV-506",avName:"MITM"}],safeguards:[{sgId:"SG-040",sgName:"Use encrypted communication protocols with the Administrator"},{sgId:"SG-019",sgName:"Login Protection Mechanism"}],tags:{ecosystems:[],packages:[],contents:["thesis"],year:2017}},{title:"Supply Chain Attacks and Resiliency Mitigations: Guidance for System Security Engineers",link:"https://apps.dtic.mil/sti/citations/AD1108057",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-014",sgName:"Code Isolation and Sandboxing"},{sgId:"SG-007",sgName:"Code Signing"},{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"}],tags:{contents:["standard"],year:2017}},{title:"The Future of Supply Chain Information Systems: The Open Source Ecosystem",link:"https://link.springer.com/article/10.1007/s40171-017-0152-x",tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2017}},{title:"Identification of Dependency-Based Attacks on Node.Js (ARES)",link:"https://dl.acm.org/doi/abs/10.1145/3098954.3120928",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2017}},{title:"Sandcrust: Automatic Sandboxing of Unsafe Components in Rust (SOSP)",link:"https://dl.acm.org/doi/abs/10.1145/3144555.3144562",safeguards:[{sgId:"SG-014",sgName:"Code Isolation and Sandboxing"}],tags:{ecosystems:["Rust"],packages:[],contents:["peer-reviewed"],year:2017}},{title:"Open source software: determining the real risk posed by vulnerabilities",link:"https://www.sciencedirect.com/science/article/pii/S1353485817300053",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:[],packages:[],contents:[],year:2017}},{title:"Supply-Chain Security for Cyberinfrastructure [Guest editors' introduction]",link:"https://ieeexplore.ieee.org/abstract/document/7543441",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"},{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"},{avId:"AV-302",avName:"Contribute as Maintainer"},{avId:"AV-402",avName:"Tamper Build Job as Maintainer"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],tags:{ecosystems:[],packages:[],contents:[],year:2016}},{title:"On the Security Cost of Using a Free and Open Source Component in a Proprietary Product (ESSoS)",link:"https://link.springer.com/chapter/10.1007/978-3-319-30806-7_12",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2016}},{title:"On Omitting Commits and Committing Omissions: Preventing Git Metadata Tampering That (Re)introduces Software Vulnerabilities ",link:"https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/torres-arias",vectors:[{avId:"AV-300",avName:"Inject Into Sources of Legitimate Package"},{avId:"AV-301",avName:"Introduce Malicious Code through Hypocrite Merge Request"}],safeguards:[{sgId:"SG-016",sgName:"Protect Sensitive Branches"}],tags:{contents:["peer-reviewed"],year:2016}},{title:"Making invisible things visible: tracking down known vulnerabilities at 3000 companies (showcase) (FSE)",link:"https://dl.acm.org/doi/abs/10.1145/2950290.2994155",tags:{ecosystems:[],contents:["peer-reviewed"],year:2016}},{title:"Know your open source code",link:"https://www.sciencedirect.com/science/article/pii/S1353485816300484",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-014",sgName:"Code Isolation and Sandboxing"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{contents:[],year:2016}},{title:"Vendor Malware: Detection Limits and Mitigation",link:"https://ieeexplore.ieee.org/abstract/document/7543430",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"},{avId:"AV-400",avName:"Inject During the Build of Legitimate Package"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-006",sgName:"Runtime Application Self-Protection (RASP)"}],tags:{contents:[],year:2016}},{title:"Diplomat: Using Delegations to Protect Community Repositories (NSDI)",link:"https://www.usenix.org/conference/nsdi16/technical-sessions/presentation/kuppusamy",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"},{avId:"AV-505",avName:"Inject into Hosting System"}],safeguards:[{sgId:"SG-022",sgName:"User Account Management"},{sgId:"SG-007",sgName:"Code Signing"},{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"}],tags:{contents:["peer-reviewed"],year:2016}},{title:"Dependency-Based Attacks on Node.js (SecDev)",link:"https://ieeexplore.ieee.org/abstract/document/7839792",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["peer-reviewed"],year:2016}},{title:"A look at the dynamics of the JavaScript package ecosystem (ICSE)",link:"https://dl.acm.org/doi/abs/10.1145/2901739.2901743",tags:{ecosystems:["JavaScript"],contents:["peer-reviewed"],year:2016}},{title:"Ecosystems in GitHub and a Method for Ecosystem Identification Using Reference Coupling",link:"https://ieeexplore.ieee.org/abstract/document/7180080",tags:{ecosystems:["GitHub"],packages:[],contents:["peer-reviewed"],year:2015}},{title:"A Socio-technical Framework for Threat Modeling a Software Supply Chain",link:"https://ieeexplore.ieee.org/abstract/document/7180277",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-007",sgName:"Code Signing"}],tags:{ecosystems:[],contents:["peer-reviewed"],year:2015}},{title:"Software applications have on average 24 vulnerabilities inherited from buggy components",link:"https://wiki.lib.sun.ac.za/images/5/58/Software_applications_have_on_average_24_vulnerabilities_inherited_from_buggy_components_ITworld.pdf",tags:{contents:[],year:2015}},{title:"Revisiting software security: durability perspective",link:"https://gvpress.com/journals/IJHIT/vol8_no2/29.pdf",tags:{contents:["peer-reviewed"],year:2015}},{title:"Synthesis of secure software development controls (SIN)",link:"https://dl.acm.org/doi/abs/10.1145/2799979.2799998",safeguards:[{sgId:"SG-023",sgName:"Audit"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{contents:["peer-reviewed"],year:2015}},{title:"Assessing Attack Surface with Component-Based Package Dependency (NSS)",link:"https://link.springer.com/chapter/10.1007/978-3-319-25645-0_29",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-025",sgName:"Vulnerability Assessment"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2015}},{title:"Impact assessment for vulnerabilities in open-source software libraries (ICSME)",link:"https://ieeexplore.ieee.org/abstract/document/7332492",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-025",sgName:"Vulnerability Assessment"},{sgId:"SG-024",sgName:"Security Assessment"}],tags:{ecosystems:[],contents:["peer-reviewed"],year:2015}},{title:"Security impacts of community based software development",link:"https://www.researchgate.net/profile/Gergely-Meszaros/publication/307858157_Security_impacts_of_community_based_software_development/links/57cf27fe08ae83b374623589/Security-impacts-of-community-based-software-development.pdf",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-002",sgName:"Patch Management"}],tags:{ecosystems:[],contents:[],year:2015}},{title:"In Dependencies We Trust: How vulnerable are dependencies in software modules?",link:"https://repository.tudelft.nl/islandora/object/uuid:3a15293b-16f6-4e9d-b6a2-f02cd52f1a9e",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-025",sgName:"Vulnerability Assessment"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["thesis"],year:2015}},{title:"Securing a Deployment Pipeline",link:"https://ieeexplore.ieee.org/abstract/document/7169443",vectors:[{avId:"AV-403",avName:"Tamper with Exposed Build System"},{avId:"AV-301",avName:"Introduce Malicious Code through Hypocrite Merge Request"}],tags:{contents:["peer-reviewed"],year:2015}},{title:"A Global, Empirical Analysis of the Shellshock Vulnerability in Web Applications",link:"https://ieeexplore.ieee.org/abstract/document/7345401",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-025",sgName:"Vulnerability Assessment"}],tags:{contents:["peer-reviewed","vulnerability"],year:2015}},{title:"Challenges and implications of verifiable builds for security-critical open-source software (ACSAC)",link:"https://dl.acm.org/doi/abs/10.1145/2664243.2664288?casa_token=HPKQvHvVSnsAAAAA:2N3iewCBKftyfS63zcQFgOvtVZEhkjDEnNAlAPzHgazZWQkchhLL0ZM18iUVr6lc3GUFYu35XmaMhik",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-037",sgName:"Reproducible builds"}],tags:{contents:["peer-reviewed"],year:2014}},{title:"Retrieving relevant CAPEC attack patterns for secure software development (CISRC)",link:"https://dl.acm.org/doi/abs/10.1145/2602087.2602092?casa_token=Tl2xbokGnvoAAAAA:Asr0qoYrOSCAnBdoJQcjai8OAHDx7xDUrrQP_MamFx0jvWUmPQtpWx5YlQb8v-AzKk_s-vpknJ6tqsY",tags:{contents:["peer-reviewed"],year:2014}},{title:"The Matter of Heartbleed (IMC)",link:"https://dl.acm.org/doi/abs/10.1145/2663716.2663755",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-025",sgName:"Vulnerability Assessment"}],tags:{packages:["OpenSSL"],contents:["peer-reviewed","vulnerability"],year:2014}},{title:"Supply Chain Attack Patterns: Framework and Catalog",link:"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.648.6043&rep=rep1&type=pdf",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-026",sgName:"Penetration Testing"},{sgId:"SG-007",sgName:"Code Signing"},{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"},{sgId:"SG-002",sgName:"Patch Management"}],tags:{contents:["standard"],year:2014}},{title:"Reducing software assurance risks for security-critical and safety-critical systems (LISAT)",link:"https://ieeexplore.ieee.org/abstract/document/6845212",safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{contents:["peer-reviewed"],year:2014}},{title:"Deploying static application security testing on a large scale",link:"https://dl.gi.de/handle/20.500.12116/20071",safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{contents:[],year:2014}},{title:"Towards An Analysis of Software Supply Chain Risk Management (WCECS)",link:"http://www.iaeng.org/publication/WCECS2013/WCECS2013_pp162-167.pdf",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{contents:["peer-reviewed"],year:2013}},{title:"Dependencies: No Software is an Island",link:"https://bora.uib.no/bora-xmlui/handle/1956/7540",vectors:[{avId:"AV-400",avName:"Inject During the Build of Legitimate Package"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-007",sgName:"Code Signing"},{sgId:"SG-014",sgName:"Code Isolation and Sandboxing"}],tags:{contents:["thesis"],year:2013}},{title:"The Evolution of the R Software Ecosystem",link:"https://ieeexplore.ieee.org/abstract/document/6498472",tags:{ecosystems:["R"],contents:["peer-reviewed"],year:2013}},{title:"Information Security and Open Source Dual Use Security Software: Trust Paradox (IFIP)",link:"https://link.springer.com/chapter/10.1007/978-3-642-38928-3_14",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{contents:["peer-reviewed"],year:2013}},{title:"Security by decentralized certification of automatic-updates for open source software controlled by volunteers",link:"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.381.4290&rep=rep1&type=pdf",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-013",sgName:"Use of Security, Quality and Health Metrics"},{sgId:"SG-007",sgName:"Code Signing"},{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"}],tags:{contents:["peer-reviewed"],year:2013}},{title:"Meteor: Seeding a Security-Enhancing Infrastructure for Multi-market Application Ecosystems",link:"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.259.402&rep=rep1&type=pdf",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],tags:{contents:["peer-reviewed"],year:2013}},{title:"Developing Secure Products in the Age of Advanced Persistent Threats",link:"https://ieeexplore.ieee.org/abstract/document/6226545",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{contents:[],year:2012}},{title:"Assessing the security of Node.js platform",link:"https://ieeexplore.ieee.org/abstract/document/6470829",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],tags:{ecosystems:["JavaScript"],contents:["peer-reviewed"],year:2012}},{title:"Assuring software and hardware security and integrity throughout the supply chain (HST)",link:"https://ieeexplore.ieee.org/abstract/document/6107848",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-024",sgName:"Security Assessment"},{sgId:"SG-023",sgName:"Audit"}],tags:{contents:["peer-reviewed"],year:2011}},{title:"A Systemic Approach for Assessing Software Supply-Chain Risk",link:"https://ieeexplore.ieee.org/abstract/document/5718996",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{contents:["peer-reviewed"],year:2011}},{title:"Supply chain risk management - Understanding vulnerabilities in code you buy, build, or integrate",link:"https://ieeexplore.ieee.org/abstract/document/5929123",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{contents:["peer-reviewed"],year:2011}},{title:"Software Security in Practice",link:"https://ieeexplore.ieee.org/abstract/document/5739646",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-026",sgName:"Penetration Testing"}],tags:{contents:[],year:2011}},{title:"Evaluating and Mitigating Software Supply Chain Security Risks",link:"https://apps.dtic.mil/sti/citations/ADA522538",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{year:2010}},{title:"Detection and analysis of drive-by-download attacks and malicious JavaScript code (WWW)",link:"https://dl.acm.org/doi/abs/10.1145/1772690.1772720?casa_token=sTz6BCh9yLoAAAAA:-j2eqelDUsyFRnqZubHk0_bQyVMkxI9U3WDFTlH7LGclCqsfmn5uFe7y5qxakMasXm3CkYr3yGjuiGs",safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-027",sgName:"Antivirus/Antimalware"}],tags:{ecosystems:["JavaScript"],contents:["peer-reviewed"],year:2010}},{title:"Minimizing Risks in the Software Supply Chain",link:"https://safecode.org/publication/SAFECode_Software_Integrity_Controls0610.pdf",safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"},{sgId:"SG-027",sgName:"Antivirus/Antimalware"},{sgId:"SG-022",sgName:"User Account Management"}],tags:{contents:[],year:2010}},{title:"Building Secure, Resilient Architectures for Cyber Mission Assurance",link:"https://register.mitre.org/sr/papers1/Building%20Secure%20Resilient%20Architectures.pdf",safeguards:[{sgId:"SG-014",sgName:"Code Isolation and Sandboxing"},{sgId:"SG-042",sgName:"Use of Dedicated Build Service"}],tags:{year:2010}},{title:"Supply-Chain Risk Management: Incorporating Security into Software Development",link:"https://ieeexplore.ieee.org/abstract/document/5428501",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{contents:["peer-reviewed"],year:2010}},{title:"Survivable key compromise in software update systems (CCS)",link:"https://dl.acm.org/doi/abs/10.1145/1866307.1866315?casa_token=EM-ns1EibW8AAAAA:gbKW5yvXEcgJem1amlQvjVh-jqRh5JTVsGuGnSGx8Bq2Lctos9M88D2grV_dnMivwK4N_34Xg4GaIBg",vectors:[{avId:"AV-503",avName:"Prevent Update to Non-Vulnerable Version"}],safeguards:[{sgId:"SG-022",sgName:"User Account Management"},{sgId:"SG-007",sgName:"Code Signing"}],tags:{contents:["peer-reviewed"],year:2010}},{title:"Free software: Uses of free software and its implications in the software industry",link:"https://www.westga.edu/~bquest/2010/software10.pdf",tags:{contents:[],year:2010}},{title:"On the secure software development process: CLASP, SDL and Touchpoints compared",link:"https://www.sciencedirect.com/science/article/pii/S0950584908000281",safeguards:[{sgId:"SG-009",sgName:"Remove un-used Dependencies"}],tags:{contents:["peer-reviewed"],year:2009}},{title:"Exploring the Digital Supply Chain: Implications and Models for Online Software Distribution",link:"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.907.9957&rep=rep1&type=pdf",tags:{contents:["peer-reviewed"],year:2008}},{title:"Secure Software Updates: Disappointments and New Challenges ",link:"https://www.usenix.org/legacy/event/hotsec06/tech/full_papers/bellissimo/bellissimo.pdf",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],tags:{contents:["peer-reviewed"],year:2006}},{title:"Trust and tamper-proof software delivery",link:"https://dl.acm.org/doi/abs/10.1145/1137627.1137636?casa_token=PvDlJOd2YlMAAAAA:_ZVO-IvyGnenVnTI5btzIHYOWVSYULcZdikygRnU0JL6TmbSbVnkCaVP_BgFPOhj7bmHiFJNMcLCvrg",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],safeguards:[{sgId:"SG-007",sgName:"Code Signing"}],tags:{contents:["peer-reviewed"],year:2006}},{title:"Pivotal and the threat of open source CRM: A strategic assessment",link:"http://summit.sfu.ca/item/10179",tags:{contents:["peer-reviewed"],year:2005}},{title:"A classification of malicious software attacks",link:"https://ieeexplore.ieee.org/abstract/document/1395194",safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{contents:["peer-reviewed"],year:2004}},{title:"Open source supply chains.",link:"https://d1wqtxts1xzle7.cloudfront.net/48665676/Open_source_supply_chains20160908-31657-t8mumh-with-cover-page-v2.pdf?Expires=1647301189&Signature=ddfeGD9RrcgL4DU-Y5haROVw03t4tIzeHSDPRLbY08346KnBtIb2jk-b0r0FLFVkYjAujk2Ap~cAREKyZUeHCneuNWla8WeR~9YdWxLHagSWDSN1TLdlHob7SZQcwUcN9VWGSxWW7MUbAt90p6x6Oy9mRDy7ZCZwuRa78CsjTDGwk0W~u2fGMqzJqYz3wNOZge9OTN3xqtdiMOeaqFwuk0~OcFqQ1uCLFcNAsF6SgLf45Q~KMR4EzeHmvkVFZPt1EBCBfYU7gj3pF~CcLUo7KmXvVAirR5l-vdVUBEpimLfdcU5mF8Y2pV1xtK9MdofJZ2iDsChiD2~8RS75bu82PA__&Key-Pair-Id=APKAJLOHF5GGSLRBV4ZA",tags:{year:2003}},{title:"Poisoning the software supply chain",link:"https://ieeexplore.ieee.org/abstract/document/1203227",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"},{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],tags:{year:2003}},{title:"On trojan horses in compiler implementations",link:"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.20.3206&rep=rep1&type=pdf",vectors:[{avId:"AV-401",avName:"Run Malicious Build"}],tags:{ecosystems:["Linux"],contents:["peer-reviewed"],year:1999}},{title:"Reflections on trusting trust",link:"https://dl.acm.org/doi/abs/10.1145/358198.358210",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"},{avId:"AV-401",avName:"Run Malicious Build"}],tags:{contents:[],year:1984}},{title:"Alert: peacenotwar module sabotages npm developers in the node-ipc package to protest the invasion of Ukraine",link:"https://snyk.io/blog/peacenotwar-malicious-npm-node-ipc-package-vulnerability/",vectors:[{avId:"AV-801",avName:"Change Ethos",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["JavaScript"],packages:["node-ipc"],contents:["attack"],year:2022}},{title:"Practical Automated Detection of Malicious npm Packages (ICSE)",link:"https://dl.acm.org/doi/abs/10.1145/3510003.3510104",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"},{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"},{avId:"AV-602",avName:"Take-over Legitimate Account"},{avId:"AV-509",avName:"Abuse Dependency Resolution Mechanism"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["JavaScript"],contents:["peer-reviewed"],year:2022}},{title:"Software Component Verification Standard - V2 Software Bill of Materials",link:"https://owasp-scvs.gitbook.io/scvs/v2-software-bill-of-materials",vectors:[],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"}],tags:{ecosystems:[],packages:[],contents:["standard"],year:2020}},{title:"Survey of Existing SBOM Formats and Standards",link:"https://www.ntia.gov/files/ntia/publications/sbom_formats_survey-version-2021.pdf",vectors:[],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"}],tags:{ecosystems:[],packages:[],contents:[],year:2021}},{title:"NPM Library (ua-parser-js) Hijacked: What You Need to Know",link:"https://www.rapid7.com/blog/post/2021/10/25/npm-library-ua-parser-js-hijacked-what-you-need-to-know/",vectors:[{avId:"AV-602",avName:"Take-over Legitimate Account",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],tags:{ecosystems:["JavaScript"],packages:["ua-parser-js"],contents:["attack"],year:2021}},{title:"Top Five Challenges in Software Supply Chain Security: Observations From 30 Industry and Government Organizations",link:"https://ieeexplore.ieee.org/abstract/document/9740718",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{year:2022}},{title:"A Beautiful Factory for Malicious Packages",link:"https://checkmarx.com/blog/a-beautiful-factory-for-malicious-packages/",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"},{avId:"AV-509",avName:"Abuse Dependency Resolution Mechanism"}],tags:{ecosystems:["JavaScript"],packages:[],contents:["attack"],year:2022}},{title:"StarJacking - Making Your New Open Source Package Popular in a Snap",link:"https://checkmarx.com/blog/starjacking-making-your-new-open-source-package-popular-in-a-snap/",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"},{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],tags:{ecosystems:["Python","JavaScript"],packages:[],contents:[],year:2022}},{title:"How I hacked CTX and PHPass Modules",link:"https://sockpuppets.medium.com/how-i-hacked-ctx-and-phpass-modules-656638c6ec5e",vectors:[{avId:"AV-608",avName:"Resurrect Expired Domain Associated With Legitimate Account",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],tags:{ecosystems:["Python","PHP","Rust"],packages:["ctx","phpass"],contents:["attack"],year:2022}},{title:"This Week in Malware - Malicious Rust crate, 'colors' typosquats",link:"https://blog.sonatype.com/this-week-in-malware-may-13th-edition",vectors:[{avId:"AV-203",avName:"Manipulating Word Separators"}],tags:{ecosystems:["Rust"],packages:["rustdecimal"],contents:["attack"],year:2022}},{title:"Remember npm library 'colors'? There's no such thing as 'colors-2.0'",link:"https://blog.sonatype.com/remember-npm-library-colors-theres-no-such-thing-as-colors-2.0",vectors:[{avId:"AV-201",avName:"Combosquatting"}],tags:{ecosystems:["JavaScript"],packages:["colors2.0","colors-2.2.0","colors-3.0"],contents:["attack"],year:2022}},{title:"This week in malware - a 'fix-crash' info-stealer and 500+ malicious npm packages",link:"https://blog.sonatype.com/this-week-in-malware-a-fix-crash-info-stealer-and-500-malicious-npm-packages",vectors:[{avId:"AV-205",avName:"Built-in Package"}],tags:{ecosystems:["JavaScript"],packages:["advance-string-index","add-to-unscopables","..."],contents:["attack"],year:2022}},{title:"This week in malware - 400+ npm packages target Azure, Uber, Airbnb developers",link:"https://blog.sonatype.com/this-week-in-malware-400-npm-packages-target-azure-uber-airbnb-developers",vectors:[{avId:"AV-206",avName:"Brandjacking"},{avId:"AV-509",avName:"Abuse Dependency Resolution Mechanism"}],tags:{ecosystems:["JavaScript"],packages:["azure-arm-mariadb-samples-ts","azure-iot-device-update-samples-js","...","uber-origin","uber-one","..."],contents:["attack"],year:2022}},{title:"Update: IconBurst NPM software supply chain attack grabs data from apps and websites",link:"https://blog.reversinglabs.com/blog/iconburst-npm-software-supply-chain-attack-grabs-data-from-apps-websites",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],tags:{ecosystems:["JavaScript"],packages:["icon-package","ionicio","...","footericon"],contents:["attack"],year:2022}},{title:"More Than 200 Cryptomining Packages Flood npm and PyPI Registry",link:"https://blog.sonatype.com/more-than-200-cryptominers-flood-npm-and-pypi-registry",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],tags:{ecosystems:["JavaScript"],packages:["r2act","...","qtt"],contents:["attack"],year:2022}},{title:"And yet another #python #pypi typosquatter: Uploaded at least 33 projects within 3 hours.",link:"https://twitter.com/streamlin3d/status/1560020448515080198",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],tags:{ecosystems:["Python"],packages:["python-dateuitl","python-dateut","pytho-dateuti","charset-noramlizer","charset-normaliz","hcarset-normalize","azure-mgmt-containrregistry","azure-mgmt-containerregistr","zure-mgmt-containerregistry","python-json-logge","ython-json-logger","great-expectation","azure-mgmt-authroization","azure-mgmt-authorizatio","zure-mgmt-authorization","dataclasses-jso","ataclasses-json","dataclass-json","knac","semve","argpars","arpgrase","jupyter-cor","juupyter-core","upyter-core","soupsiev","oupsieve","soupseive","bbeautifulsoup4","beautfiulsoup4","aiohtp","iohttp","pycparse","jnija2","cachetoosl","cacheools","oogle-auth","googl-auth","portobuf","prtobuf","rotobuf","oautlhib","oauthlbi","aouthlib","oatuhlib","colormaa","coloraam","coloraama","coolorama","pyprasing","pyparisng","pyparsign","cryptogarphy","ryptography","python-dateutils"],contents:["attack"],year:2022}},{title:"Malicious PyPi packages aim DDoS attacks at Counter-Strike servers",link:"https://www.bleepingcomputer.com/news/security/malicious-pypi-packages-aim-ddos-attacks-at-counter-strike-servers/",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],tags:{ecosystems:["Python"],packages:["Gesnim","Kears","TensorFolw","Seabron","tqmd","lxlm","mokc","ipaddres","ipadress","falsk","douctils","inda"],contents:["attack"],year:2022}},{title:"Phishing attack against PyPI",link:"https://twitter.com/pypi/status/1562442188285308929",vectors:[{avId:"AV-606",avName:"Social Engineering to Obtain Credentials",scopeAvId:"AV-504",scopeAvName:"Distribute as Package Maintainer"}],tags:{ecosystems:["Python"],contents:["attack"],year:2022}},{title:"CloudGuard Spectral detects several malicious packages on PyPI",link:"https://research.checkpoint.com/2022/cloudguard-spectral-detects-several-malicious-packages-on-pypi-the-official-software-repository-for-python-developers/",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],tags:{ecosystems:["Python"],packages:["ascii2text","zlibsrc"],contents:["attack"],year:2022}},{title:"CloudGuard Spectral detects several malicious packages on PyPI",link:"https://research.checkpoint.com/2022/cloudguard-spectral-detects-several-malicious-packages-on-pypi-the-official-software-repository-for-python-developers/",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],tags:{ecosystems:["Python"],packages:["Pyg-utils","Pymocks","PyProto2","Test-async","Free-net-vpn","Free-net-vpn2","Browserdiv","WINRPCexploit"],contents:["attack"],year:2022}},{title:"PyPi python packages caught sending stolen AWS keys to unsecured sites",link:"https://blog.sonatype.com/python-packages-upload-your-aws-keys-env-vars-secrets-to-web",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],tags:{ecosystems:["Python"],packages:["pygrata","pygrata-utils","hkg-sol-utils"],contents:["attack"],year:2022}},{title:"PyPi python packages caught sending stolen AWS keys to unsecured sites",link:"https://blog.sonatype.com/python-packages-upload-your-aws-keys-env-vars-secrets-to-web",vectors:[{avId:"AV-200",avName:"Create Name Confusion with Legitimate Package"}],tags:{ecosystems:["Python"],packages:["loglib-modules","pyg-modules"],contents:["attack"],year:2022}},{title:"New Protestware Found Lurking in Highly Popular NPM Package",link:"https://checkmarx.com/blog/new-protestware-found-lurking-in-highly-popular-npm-package/",vectors:[{avId:"AV-801",avName:"Change Ethos",scopeAvId:"AV-304",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["JavaScript"],packages:["styled-components","es5-ext"],contents:["attack"],year:2022}},{title:"Securing Developer Tools: A New Supply Chain Attack on PHP",link:"https://blog.sonarsource.com/securing-developer-tools-a-new-supply-chain-attack-on-php",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-505",scopeAvName:"Inject into Hosting System"}],tags:{ecosystems:["PHP"],packages:[],contents:["vulnerability"],year:2022}},{title:"Playing with fire: millions of .git folders exposed to public",link:"https://cybernews.com/security/millions-git-folders-exposed/",vectors:[{avId:"AV-602",avName:"Take-over Legitimate Account",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{contents:["vulnerability"],year:2022}},{title:"Attacking the Software Supply Chain with a Simple Rename",link:"https://checkmarx.com/blog/attacking-the-software-supply-chain-with-a-simple-rename/",vectors:[{avId:"AV-501",avName:"Dangling Reference"}],tags:{contents:["vulnerability"],year:2022}},{title:"WASP Attack on Python - Polymorphic Malware Shipping WASP Stealer; Infecting Hundreds Of Victims",link:"https://medium.com/checkmarx-security/wasp-attack-on-python-polymorphic-malware-shipping-wasp-stealer-infecting-hundreds-of-victims-10e92439d192",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],tags:{contents:["attack"],year:2022,packages:["apicolor","apicolors","ascii2art","blockcypher-lib","colorapi","colorps","colorsapi","crypto-payments","discord-api-wrapper"]}},{title:"npm packages used by crypto exchanges compromised",link:"https://www.bleepingcomputer.com/news/security/npm-packages-used-by-crypto-exchanges-compromised/",vectors:[{avId:"AV-602",avName:"Take-over Legitimate Account",scopeAvId:"AV-302",scopeAvName:"Contribute as Maintainer"}],tags:{ecosystems:["JavaScript"],contents:["attack"],year:2022}},{title:"Compromised PyTorch-nightly dependency chain between December 25th and December 30th, 2022",link:"https://pytorch.org/blog/compromised-nightly-dependency/",vectors:[{avId:"AV-509",avName:"Abuse Dependency Resolution Mechanism"}],tags:{ecosystems:["Python"],contents:["attack"],year:2022,packages:["torchtriton"]}},{title:"5 Ways Attackers Fool Victims with Fake GitHub Profiles",link:"https://medium.com/checkmarx-security/5-easy-ways-attackers-fool-victims-with-fake-github-profiles-8e8f4199598a",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],tags:{ecosystems:["GitHub"],packages:[],contents:["proof-of-concept"],year:2023}},{title:"Git Users Urged to Update Software to Prevent Remote Code Execution Attacks",link:"https://thehackernews.com/2023/01/git-users-urged-to-update-software-to.html",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-303",scopeAvName:"Tamper with Version Control System"}],tags:{ecosystems:[],packages:[],contents:["vulnerability"],year:2023}},{title:"Automatic Security Assessment of GitHub Actions Workflows (SCORED)",link:"https://dl.acm.org/doi/abs/10.1145/3560835.3564554",vectors:[{avId:"AV-701",avName:"Exploit Weak Configuration",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"},{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"}],tags:{ecosystems:["GitHub"],contents:["peer-reviewed","vulnerability"],year:2022}},{title:"SoK: Combating threats in the digital supply chain (ARES)",link:"https://dl.acm.org/doi/abs/10.1145/3538969.3544421",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{contents:["peer-reviewed"],year:2022}},{title:"8th Annual State of the Software Supply Chain",link:"https://www.sonatype.com/state-of-the-software-supply-chain/introduction",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{year:2022}},{title:"Towards Understanding and Securing the OSS Supply Chain",link:"https://iris.unitn.it/bitstream/11572/333508/1/vu-thesis-final.pdf",vectors:[{avId:"AV-500",avName:"Distribute Malicious Version of Legitimate Package"}],tags:{ecosystems:["Python"],packages:[],contents:["thesis"],year:2021}},{title:"OSS Supply-chain Security: What Will It Take?",link:"https://dl.acm.org/doi/abs/10.1145/3570923",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{year:2022}},{title:"451 PyPI packages install Chrome extensions to steal crypto",link:"https://www.bleepingcomputer.com/news/security/451-pypi-packages-install-chrome-extensions-to-steal-crypto/",vectors:[{avId:"AV-204",avName:"Typosquatting"}],tags:{ecosystems:["Python"],packages:[],contents:["attack"],year:2023}},{title:"Yandex Data Leak Triggers Malicious Package Publication",link:"https://www.mend.io/resources/blog/yandex-data-leak-triggers-malicious-package-publication/",vectors:[{avId:"AV-204",avName:"Typosquatting"}],tags:{ecosystems:["JavaScript"],packages:["yandex-logger-std","yandex-cfg-env","yandex-logger-sentry","yandex-logger-qloud","yabox","@yandex-travel/ts-config","@yandex-travel/eslint-config","@yandex-travel/ci","@yandex-travel/ui","@yandex-travel/eslint-kit","yasap-lodash","yandex-sendlinksms","yt-test-reporter","ymaps-api-response","eslint-plugin-yandex-morda-views","..."],contents:["attack"],year:2023}},{title:"Threat Alert: Private npm Packages Disclosed via Timing Attacks",link:"https://blog.aquasec.com/private-packages-disclosed-via-timing-attack-on-npm",vectors:[{avId:"AV-509",avName:"Abuse Dependency Resolution Mechanism"}],tags:{contents:["proof-of-concept","vulnerability"],year:2023}},{title:"How we Abused Repository Webhooks to Access Internal CI Systems at Scale",link:"https://www.cidersecurity.io/blog/research/how-we-abused-repository-webhooks-to-access-internal-ci-systems-at-scale/",vectors:[{avId:"AV-602",avName:"Take-over Legitimate Account",scopeAvId:"AV-402",scopeAvName:"Tamper Build Job as Maintainer"},{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"}],tags:{contents:["proof-of-concept","vulnerability"],year:2022}},{title:"SoK: Analysis of Software Supply Chain Security by Establishing Secure Design Properties (SCORED)",link:"https://dl.acm.org/doi/10.1145/3560835.3564556",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-017",sgName:"Multi-Factor Authentication"},{sgId:"SG-019",sgName:"Login Protection Mechanism"},{sgId:"SG-028",sgName:"Scoped Packages"},{sgId:"SG-029",sgName:"Version Pinning"},{sgId:"SG-023",sgName:"Audit"},{sgId:"SG-007",sgName:"Code Signing"},{sgId:"SG-043",sgName:"Integrity check of dependencies through cryptographic hashes"}],tags:{ecosystems:["Java","JavaScript","Linux","Python","C#","C/C++","PHP"],packages:[],contents:["peer-reviewed"],year:2022}},{title:"xVDB: A High-Coverage Approach for Constructing a Vulnerability Database",link:"https://ieeexplore.ieee.org/abstract/document/9853545",safeguards:[{sgId:"SG-002",sgName:"Patch Management"},{sgId:"SG-025",sgName:"Vulnerability Assessment"}],tags:{ecosystems:[],packages:[],contents:["peer-reviewed"],year:2022}},{title:"Towards the Detection of Malicious Java Packages (SCORED)",link:"https://dl.acm.org/doi/abs/10.1145/3560835.3564548",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["Java"],packages:[],contents:["peer-reviewed"],year:2022}},{title:"Building a Secure Software Supply Chain with GNU Guix",link:"https://doi.org/10.22152/programming-journal.org/2023/7/1",safeguards:[{sgId:"SG-037",sgName:"Reproducible builds"},{sgId:"SG-002",sgName:"Patch Management"}],tags:{ecosystems:["C/C++"],contents:["peer-reviewed"],year:2022}},{title:"Automatic Diversity in the Software Supply Chain",link:"https://arxiv.org/abs/2111.03154",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-002",sgName:"Patch Management"}],tags:{ecosystems:["Java"],packages:[],contents:["proof-of-concept"],year:2021}},{title:"An Empirical Study on Software Bill of Materials: Where We Stand and the Road Ahead",link:"https://arxiv.org/abs/2301.05362",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"}],tags:{year:2023}},{title:"What is Software Supply Chain Security?",link:"https://arxiv.org/abs/2209.04006",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],tags:{year:2022}},{title:"Malicious Source Code Detection Using Transformer",link:"https://arxiv.org/abs/2209.07957",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-005",sgName:"Application Security Testing (AST)"}],tags:{ecosystems:["Python"],year:2022}},{title:"Alice in (Software Supply) Chains: Risk Identification and Evaluation",link:"https://link.springer.com/chapter/10.1007/978-3-031-14179-9_19",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-023",sgName:"Audit"},{}],tags:{ecosystems:["Java","JavaScript","Linux","Python","C#","C/C++","PHP"],packages:["event-stream","..."],contents:["peer-reviewed"],year:2022}},{title:"Policy Transparency: Authorization Logic Meets General Transparency to Prove Software Supply Chain Integrity (SCORED)",link:"https://research.google/pubs/pub51673/",vectors:[{avId:"AV-000",avName:"Conduct Open-Source Supply Chain Attack"}],safeguards:[{sgId:"SG-001",sgName:"Software Bill of Materials (SBOM)"},{sgId:"SG-003",sgName:"Software Composition Analysis (SCA)"},{sgId:"SG-037",sgName:"Reproducible builds"},{sgId:"SG-023",sgName:"Audit"}],tags:{contents:["peer-reviewed"],year:2022}},{title:"Malicious 'Lolip0p' PyPi packages install info-stealing malware",link:"https://www.bleepingcomputer.com/news/security/malicious-lolip0p-pypi-packages-install-info-stealing-malware/",vectors:[{avId:"AV-100",avName:"Develop and Advertise Distinct Malicious Package from Scratch"}],tags:{ecosystems:["Python"],contents:["attack"],year:2023,packages:["colorslib","httpslib","libhttps"]}},{title:"Can you trust ChatGPT\u2019s package recommendations?",link:"https://vulcan.io/blog/ai-hallucinations-package-risk",vectors:[{avId:"AV-209",avName:"AI Package Hallucination"}],tags:{contents:["attack"],year:2023}},{title:"CVE-2023-42793 - Authentication bypass in JetBrains TeamCity",link:"https://nvd.nist.gov/vuln/detail/CVE-2023-42793",vectors:[{avId:"AV-702",avName:"Exploit Vulnerabilities",scopeAvId:"AV-403",scopeAvName:"Tamper with Exposed Build System"}],tags:{contents:["vulnerability"],year:2023}},{title:"Surprise: When Dependabot Contributes Malicious Code",link:"https://checkmarx.com/blog/surprise-when-dependabot-contributes-malicious-code/",vectors:[{avId:"AV-301",avName:"Introduce Malicious Code through Hypocrite Merge Request"}],tags:{contents:["attack"],year:2023}}]},83:function(e,t,a){"use strict";a.d(t,"a",function(){return d});var s=a(1),i=a.n(s),r=(a(232),a(150)),n=a(40),o=a(270),c=a(66);const l={width:"45%",minWidth:"700px",minHeight:"30%",background:"white",color:"white",position:"fixed",top:"50%",left:"50%",transform:"translate(-50%, -50%)",borderRadius:"16px",overflow:"scroll",opacity:"100%",boxShadow:"0 5px 20px 0 rgba(0, 0, 0, 0.04)",p:"4"};function d(e){const[,t]=i.a.useState(e.open);return i.a.createElement("div",null,i.a.createElement(o.a,{open:e.open,onClose:()=>t(!1),"aria-labelledby":"modal-modal-title","aria-describedby":"modal-modal-description"},i.a.createElement(c.a,{sx:l},i.a.createElement("button",{className:"closeBtn",onClick:()=>e.setIsOpen(!1)},i.a.createElement(r.a,{style:{marginBottom:"-3px"}})),i.a.createElement("h5",{className:"heading"},e.sgID,": ",e.sgName," "),i.a.createElement("div",{className:"modalContent"},i.a.createElement("h4",null,"Description"),i.a.createElement("p",null,Object(n.a)(e.sgDescription)),i.a.createElement("h4",null,"References"),e.sgReferences,i.a.createElement("h4",null,"Safeguard Type"),e.sgType,i.a.createElement("h4",null,"Stakeholders Role"),e.stakeholdersRole))))}}},[[218,1,2]]]);
//# sourceMappingURL=main.112834a5.chunk.js.map